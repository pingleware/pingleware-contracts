{
  "contractName": "EETP",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "trans",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "address payable",
          "name": "buyer",
          "type": "address"
        }
      ],
      "name": "bought",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "trans",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "address payable",
          "name": "buyer",
          "type": "address"
        }
      ],
      "name": "confirmed",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "offers",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "buyer",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "starting",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "duration",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "confirmed",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "_network",
          "type": "address"
        }
      ],
      "name": "addNetwork",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function",
      "payable": true
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_trans",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "_starting",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_duration",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_timestamp",
          "type": "uint256"
        }
      ],
      "name": "buy",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function",
      "payable": true
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_trans",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "_timestamp",
          "type": "uint256"
        }
      ],
      "name": "cancel",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function",
      "payable": true
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_trans",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "_timestamp",
          "type": "uint256"
        }
      ],
      "name": "confirm",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function",
      "payable": true
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_trans",
          "type": "bytes32"
        }
      ],
      "name": "pay",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function",
      "payable": true
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"trans\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address payable\",\"name\":\"buyer\",\"type\":\"address\"}],\"name\":\"bought\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"trans\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address payable\",\"name\":\"buyer\",\"type\":\"address\"}],\"name\":\"confirmed\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_network\",\"type\":\"address\"}],\"name\":\"addNetwork\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_trans\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_starting\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_timestamp\",\"type\":\"uint256\"}],\"name\":\"buy\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_trans\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_timestamp\",\"type\":\"uint256\"}],\"name\":\"cancel\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_trans\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_timestamp\",\"type\":\"uint256\"}],\"name\":\"confirm\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"offers\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"buyer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"starting\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"confirmed\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_trans\",\"type\":\"bytes32\"}],\"name\":\"pay\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"From: https://github.com/Yassin-MT/EETP An Ethereum-Based Energy Trading Protocol This is an P2P Energy Trading Protocol built on Ethereum's Smart Contract technology. On this platform, any entity can buy or sell electricity, there is no limit on the number of participants, and there are no intermediaries (e.g. banks, traders and energy retailers). The proposed solution uses off-chain and on-chain processing (and storage) with the objective to perform as much processing off-chain as possible, without compromising the security of the solution. Using Ethereum's smart contract technology, the solution realizes a secure, decentralized, trustworthy, and low-cost energy trading in next generation smart grids. The Actors There are four actors in the proposed protocol.      a) the producer: an entity that has a block of electricity to sell sometime in the future;      b) the consumer: an entity that wants to buy electricity;      c) the energy agent: an entity that maintains an energy inventory, provided by producers, and matches it to consumer requests; and     (d) the distribution network: an electric power network that transports electricity between two end points.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/energy/EETP.sol\":\"EETP\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"project:/contracts/energy/EETP.sol\":{\"keccak256\":\"0x7d4544221fbbb788c089c06d782e5ceb740fb571f95509258bd5852d3c3cb621\",\"license\":\"CC-BY-4.0\",\"urls\":[\"bzz-raw://679363d5f58fab629d17c660eac63923f8682b6e1cb003f7141a2cc9a90786f8\",\"dweb:/ipfs/QmTnvok2QUfQGHH5paFDsapYx4xxsUnK4hGS55YTLn4nUT\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5060008054600160a060020a031916331790556064600255610584806100376000396000f3fe6080604052600436106100585760e060020a6000350463069455a0811461005d5780632c45df9914610072578063474d3ff0146100855780638609cad114610106578063d567e4a414610119578063f2cb3d7614610149575b600080fd5b61007061006b36600461049a565b61015c565b005b6100706100803660046104bc565b610221565b34801561009157600080fd5b506100d66100a03660046104ee565b60036020819052600091825260409091208054600182015460028301549290930154600160a060020a0390911692919060ff1684565b60408051600160a060020a0390951685526020850193909352918301521515606082015260800160405180910390f35b6100706101143660046104ee565b610338565b610070610127366004610507565b60018054600160a060020a031916600160a060020a0392909216919091179055565b61007061015736600461049a565b6103e4565b60008281526003602052604090205433600160a060020a039091160361021d5760008281526003602052604090206001015481101561021d576000828152600360205260408082208054600160a060020a03191690556002549051339282156108fc02929190818181858888f193505050501580156101df573d6000803e3d6000fd5b5060008054600254604051600160a060020a039092169281156108fc029290818181858888f1935050505015801561021b573d6000803e3d6000fd5b505b5050565b82818082116102545760405160e560020a62461bcd02815260206004820152600060248201526044015b60405180910390fd5b604080516080810182526000808252602082018190529181018290526060810191909152600087815260036020526040902054600160a060020a031661032f57338082526020808301888152604080850189815260008c815260039485905282902086518154600160a060020a031916600160a060020a0390911617815592516001840155516002830155606085015191909201805460ff1916911515919091179055517f06f5197f3762f9c7dafa07d8f88482f284a316958188e5740761b4977cc3a5cc91610326918a9190610537565b60405180910390a15b50505050505050565b600081815260036020526040902054600160a060020a03163314801561037557506000818152600360208190526040909120015460ff1615156001145b156103e15760405133903480156108fc02916000818181858888f193505050501580156103a6573d6000803e3d6000fd5b5060008054604051600160a060020a03909116913480156108fc02929091818181858888f1935050505015801561021d573d6000803e3d6000fd5b50565b600154600160a060020a0316331461041b5760405160e560020a62461bcd028152602060048201526000602482015260440161024b565b60008281526003602052604090206001015481101561021d57600082815260036020819052604091829020908101805460ff191660011790555490517f742aad2efac896a7d7524137017baa0eb43b638a52ee66cbcbfd697428006eee9161048e918591600160a060020a031690610537565b60405180910390a15050565b600080604083850312156104ad57600080fd5b50508035926020909101359150565b600080600080608085870312156104d257600080fd5b5050823594602084013594506040840135936060013592509050565b60006020828403121561050057600080fd5b5035919050565b60006020828403121561051957600080fd5b8135600160a060020a038116811461053057600080fd5b9392505050565b918252600160a060020a031660208201526040019056fea264697066735822122023ff770a88cb87288e1c12f7d30a012a5b32f5a0da75872f5d2fa01d4ce73f2f64736f6c63430008120033",
  "deployedBytecode": "0x6080604052600436106100585760e060020a6000350463069455a0811461005d5780632c45df9914610072578063474d3ff0146100855780638609cad114610106578063d567e4a414610119578063f2cb3d7614610149575b600080fd5b61007061006b36600461049a565b61015c565b005b6100706100803660046104bc565b610221565b34801561009157600080fd5b506100d66100a03660046104ee565b60036020819052600091825260409091208054600182015460028301549290930154600160a060020a0390911692919060ff1684565b60408051600160a060020a0390951685526020850193909352918301521515606082015260800160405180910390f35b6100706101143660046104ee565b610338565b610070610127366004610507565b60018054600160a060020a031916600160a060020a0392909216919091179055565b61007061015736600461049a565b6103e4565b60008281526003602052604090205433600160a060020a039091160361021d5760008281526003602052604090206001015481101561021d576000828152600360205260408082208054600160a060020a03191690556002549051339282156108fc02929190818181858888f193505050501580156101df573d6000803e3d6000fd5b5060008054600254604051600160a060020a039092169281156108fc029290818181858888f1935050505015801561021b573d6000803e3d6000fd5b505b5050565b82818082116102545760405160e560020a62461bcd02815260206004820152600060248201526044015b60405180910390fd5b604080516080810182526000808252602082018190529181018290526060810191909152600087815260036020526040902054600160a060020a031661032f57338082526020808301888152604080850189815260008c815260039485905282902086518154600160a060020a031916600160a060020a0390911617815592516001840155516002830155606085015191909201805460ff1916911515919091179055517f06f5197f3762f9c7dafa07d8f88482f284a316958188e5740761b4977cc3a5cc91610326918a9190610537565b60405180910390a15b50505050505050565b600081815260036020526040902054600160a060020a03163314801561037557506000818152600360208190526040909120015460ff1615156001145b156103e15760405133903480156108fc02916000818181858888f193505050501580156103a6573d6000803e3d6000fd5b5060008054604051600160a060020a03909116913480156108fc02929091818181858888f1935050505015801561021d573d6000803e3d6000fd5b50565b600154600160a060020a0316331461041b5760405160e560020a62461bcd028152602060048201526000602482015260440161024b565b60008281526003602052604090206001015481101561021d57600082815260036020819052604091829020908101805460ff191660011790555490517f742aad2efac896a7d7524137017baa0eb43b638a52ee66cbcbfd697428006eee9161048e918591600160a060020a031690610537565b60405180910390a15050565b600080604083850312156104ad57600080fd5b50508035926020909101359150565b600080600080608085870312156104d257600080fd5b5050823594602084013594506040840135936060013592509050565b60006020828403121561050057600080fd5b5035919050565b60006020828403121561051957600080fd5b8135600160a060020a038116811461053057600080fd5b9392505050565b918252600160a060020a031660208201526040019056fea264697066735822122023ff770a88cb87288e1c12f7d30a012a5b32f5a0da75872f5d2fa01d4ce73f2f64736f6c63430008120033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:2170:11",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:11",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "101:161:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "147:16:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "156:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "159:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "149:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "149:12:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "149:12:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "122:7:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "131:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "118:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "118:23:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "143:2:11",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "114:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "114:32:11"
                  },
                  "nodeType": "YulIf",
                  "src": "111:52:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "172:33:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "195:9:11"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "182:12:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "182:23:11"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "172:6:11"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "214:42:11",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "241:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "252:2:11",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "237:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "237:18:11"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "224:12:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "224:32:11"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "214:6:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes32t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "59:9:11",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "70:7:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "82:6:11",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "90:6:11",
                "type": ""
              }
            ],
            "src": "14:248:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "388:264:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "435:16:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "444:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "447:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "437:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "437:12:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "437:12:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "409:7:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "418:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "405:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "405:23:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "430:3:11",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "401:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "401:33:11"
                  },
                  "nodeType": "YulIf",
                  "src": "398:53:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "460:33:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "483:9:11"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "470:12:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "470:23:11"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "460:6:11"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "502:42:11",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "529:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "540:2:11",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "525:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "525:18:11"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "512:12:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "512:32:11"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "502:6:11"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "553:42:11",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "580:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "591:2:11",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "576:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "576:18:11"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "563:12:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "563:32:11"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "553:6:11"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "604:42:11",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "631:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "642:2:11",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "627:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "627:18:11"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "614:12:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "614:32:11"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "604:6:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes32t_uint256t_uint256t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "330:9:11",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "341:7:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "353:6:11",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "361:6:11",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "369:6:11",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "377:6:11",
                "type": ""
              }
            ],
            "src": "267:385:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "727:110:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "773:16:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "782:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "785:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "775:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "775:12:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "775:12:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "748:7:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "757:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "744:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "744:23:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "769:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "740:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "740:32:11"
                  },
                  "nodeType": "YulIf",
                  "src": "737:52:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "798:33:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "821:9:11"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "808:12:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "808:23:11"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "798:6:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "693:9:11",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "704:7:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "716:6:11",
                "type": ""
              }
            ],
            "src": "657:180:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1037:248:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1047:27:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1059:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1070:3:11",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1055:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1055:19:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1047:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1090:9:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1105:6:11"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1121:1:11",
                                    "type": "",
                                    "value": "2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1124:3:11",
                                    "type": "",
                                    "value": "160"
                                  }
                                ],
                                "functionName": {
                                  "name": "exp",
                                  "nodeType": "YulIdentifier",
                                  "src": "1117:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1117:11:11"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1130:1:11",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "1113:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1113:19:11"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1101:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1101:32:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1083:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1083:51:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1083:51:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1154:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1165:2:11",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1150:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1150:18:11"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "1170:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1143:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1143:34:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1143:34:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1197:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1208:2:11",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1193:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1193:18:11"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "1213:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1186:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1186:34:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1186:34:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1240:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1251:2:11",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1236:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1236:18:11"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value3",
                                "nodeType": "YulIdentifier",
                                "src": "1270:6:11"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "1263:6:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1263:14:11"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "1256:6:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1256:22:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1229:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1229:50:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1229:50:11"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_payable_t_uint256_t_uint256_t_bool__to_t_address_payable_t_uint256_t_uint256_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "982:9:11",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "993:6:11",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "1001:6:11",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1009:6:11",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1017:6:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1028:4:11",
                "type": ""
              }
            ],
            "src": "842:443:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1368:216:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1414:16:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1423:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1426:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1416:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1416:12:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1416:12:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1389:7:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1398:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1385:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1385:23:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1410:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1381:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1381:32:11"
                  },
                  "nodeType": "YulIf",
                  "src": "1378:52:11"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1439:36:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1465:9:11"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1452:12:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1452:23:11"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "1443:5:11",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1538:16:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1547:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1550:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1540:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1540:12:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1540:12:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1497:5:11"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1508:5:11"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1523:1:11",
                                        "type": "",
                                        "value": "2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1526:3:11",
                                        "type": "",
                                        "value": "160"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "exp",
                                      "nodeType": "YulIdentifier",
                                      "src": "1519:3:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1519:11:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1532:1:11",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "1515:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1515:19:11"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "1504:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1504:31:11"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "1494:2:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1494:42:11"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1487:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1487:50:11"
                  },
                  "nodeType": "YulIf",
                  "src": "1484:70:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1563:15:11",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1573:5:11"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1563:6:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_payable",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1334:9:11",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1345:7:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1357:6:11",
                "type": ""
              }
            ],
            "src": "1290:294:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1763:110:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1780:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1791:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1773:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1773:21:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1773:21:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1814:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1825:2:11",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1810:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1810:18:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1830:1:11",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1803:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1803:29:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1803:29:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1841:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1853:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1864:2:11",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1849:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1849:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1841:4:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1740:9:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1754:4:11",
                "type": ""
              }
            ],
            "src": "1589:284:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2023:145:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2033:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2045:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2056:2:11",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2041:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2041:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2033:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2075:9:11"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2086:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2068:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2068:25:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2068:25:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2113:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2124:2:11",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2109:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2109:18:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "2133:6:11"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2149:1:11",
                                    "type": "",
                                    "value": "2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2152:3:11",
                                    "type": "",
                                    "value": "160"
                                  }
                                ],
                                "functionName": {
                                  "name": "exp",
                                  "nodeType": "YulIdentifier",
                                  "src": "2145:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2145:11:11"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2158:1:11",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "2141:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2141:19:11"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2129:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2129:32:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2102:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2102:60:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2102:60:11"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes32_t_address_payable__to_t_bytes32_t_address_payable__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1984:9:11",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1995:6:11",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2003:6:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2014:4:11",
                "type": ""
              }
            ],
            "src": "1878:290:11"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_bytes32t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_bytes32t_uint256t_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n    }\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_address_payable_t_uint256_t_uint256_t_bool__to_t_address_payable_t_uint256_t_uint256_t_bool__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, and(value0, sub(exp(2, 160), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), iszero(iszero(value3)))\n    }\n    function abi_decode_tuple_t_address_payable(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(exp(2, 160), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 0)\n        tail := add(headStart, 64)\n    }\n    function abi_encode_tuple_t_bytes32_t_address_payable__to_t_bytes32_t_address_payable__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, sub(exp(2, 160), 1)))\n    }\n}",
      "id": 11,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "1328:2812:6:-:0;;;1893:85;;;;;;;;;-1:-1:-1;1918:5:6;:27;;-1:-1:-1;;;;;;1918:27:6;1934:10;1918:27;;;1967:3;1956:8;:14;1328:2812;;;;;;",
  "deployedSourceMap": "1328:2812:6:-:0;;;;;;;;-1:-1:-1;;;1328:2812:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2799:528;;;;;;:::i;:::-;;:::i;:::-;;2237:554;;;;;;:::i;:::-;;:::i;1725:40::-;;;;;;;;;;-1:-1:-1;1725:40:6;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1725:40:6;;;;;;;;;;;;;;-1:-1:-1;;;;;1101:32:11;;;1083:51;;1165:2;1150:18;;1143:34;;;;1193:18;;;1186:34;1263:14;1256:22;1251:2;1236:18;;1229:50;1070:3;1055:19;1725:40:6;;;;;;;3846:291;;;;;;:::i;:::-;;:::i;2108:121::-;;;;;;:::i;:::-;2203:7;:18;;-1:-1:-1;;;;;;2203:18:6;-1:-1:-1;;;;;2203:18:6;;;;;;;;;;2108:121;3506:283;;;;;;:::i;:::-;;:::i;2799:528::-;2901:14;;;;:6;:14;;;;;:20;2925:10;-1:-1:-1;;;;;2901:20:6;;;:34;2897:423;;3067:14;;;;:6;:14;;;;;:23;;;:36;-1:-1:-1;3063:246:6;;;3159:3;3120:14;;;:6;:14;;;;;;:44;;-1:-1:-1;;;;;;3120:44:6;;;3249:8;;3220:38;;3228:10;;3220:38;;;;;3249:8;3220:38;;3159:3;3220:38;3249:8;3228:10;3220:38;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3273:5:6;;;3288:8;;3273:24;;-1:-1:-1;;;;;3273:5:6;;;;:24;;;;;;;:5;:24;3288:8;3273:5;:24;;;;;;;;;;;;;;;;;;;;;3063:246;2799:528;;:::o;2237:554::-;2346:9;2356:10;2065;2053:9;:22;2045:35;;;;-1:-1:-1;;;;;2045:35:6;;1791:2:11;2045:35:6;;;1773:21:11;-1:-1:-1;1810:18:11;;;1803:29;1849:18;;2045:35:6;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2534:3:6::1;2502:14:::0;;;:6:::1;:14;::::0;;;;:20;-1:-1:-1;;;;;2502:20:6::1;2498:286;;2579:10;2555:35:::0;;;2605:16:::1;::::0;;::::1;:28:::0;;;2648:16:::1;::::0;;::::1;:28:::0;;;-1:-1:-1;2693:14:6;;;:6:::1;:14:::0;;;;;;;:24;;;;-1:-1:-1;;;;;;2693:24:6::1;-1:-1:-1::0;;;;;2693:24:6;;::::1;;::::0;;;;-1:-1:-1;2693:24:6;::::1;::::0;;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;;;;::::1;::::0;;-1:-1:-1;;2693:24:6::1;::::0;::::1;;::::0;;;::::1;::::0;;2737:35;::::1;::::0;::::1;::::0;2693:14;;2579:10;2737:35:::1;:::i;:::-;;;;;;;;2498:286;2390:401;2237:554:::0;;;;;;:::o;3846:291::-;3928:14;;;;:6;:14;;;;;:20;-1:-1:-1;;;;;3928:20:6;3952:10;3928:34;:70;;;;-1:-1:-1;3966:14:6;;;;:6;:14;;;;;;;;:24;;;;:32;;:24;:32;3928:70;3924:206;;;4039:39;;4047:10;;4068:9;4039:39;;;;;;;;;4068:9;4047:10;4039:39;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4093:5:6;;;:25;;-1:-1:-1;;;;;4093:5:6;;;;4108:9;4093:25;;;;;4108:9;;4093:25;:5;:25;4108:9;4093:5;:25;;;;;;;;;;;;;;;;;;;3924:206;3846:291;:::o;3506:283::-;3388:7;;-1:-1:-1;;;;;3388:7:6;3374:10;:21;3366:34;;;;-1:-1:-1;;;;;3366:34:6;;1791:2:11;3366:34:6;;;1773:21:11;-1:-1:-1;1810:18:11;;;1803:29;1849:18;;3366:34:6;1589:284:11;3366:34:6;3627:14:::1;::::0;;;:6:::1;:14;::::0;;;;:23:::1;;::::0;:36;-1:-1:-1;3623:159:6::1;;;3680:14;::::0;;;:6:::1;:14;::::0;;;;;;;;:24;;::::1;:31:::0;;-1:-1:-1;;3680:31:6::1;3707:4;3680:31;::::0;;3749:20;3731:39;;::::1;::::0;::::1;::::0;3687:6;;-1:-1:-1;;;;;3749:20:6::1;::::0;3731:39:::1;:::i;:::-;;;;;;;;3506:283:::0;;:::o;14:248:11:-;82:6;90;143:2;131:9;122:7;118:23;114:32;111:52;;;159:1;156;149:12;111:52;-1:-1:-1;;182:23:11;;;252:2;237:18;;;224:32;;-1:-1:-1;14:248:11:o;267:385::-;353:6;361;369;377;430:3;418:9;409:7;405:23;401:33;398:53;;;447:1;444;437:12;398:53;-1:-1:-1;;470:23:11;;;540:2;525:18;;512:32;;-1:-1:-1;591:2:11;576:18;;563:32;;642:2;627:18;614:32;;-1:-1:-1;267:385:11;-1:-1:-1;267:385:11:o;657:180::-;716:6;769:2;757:9;748:7;744:23;740:32;737:52;;;785:1;782;775:12;737:52;-1:-1:-1;808:23:11;;657:180;-1:-1:-1;657:180:11:o;1290:294::-;1357:6;1410:2;1398:9;1389:7;1385:23;1381:32;1378:52;;;1426:1;1423;1416:12;1378:52;1452:23;;-1:-1:-1;;;;;1504:31:11;;1494:42;;1484:70;;1550:1;1547;1540:12;1484:70;1573:5;1290:294;-1:-1:-1;;;1290:294:11:o;1878:290::-;2068:25;;;-1:-1:-1;;;;;2129:32:11;2124:2;2109:18;;2102:60;2056:2;2041:18;;1878:290::o",
  "source": "// SPDX-License-Identifier: CC-BY-4.0\r\npragma solidity >=0.4.22 <0.9.0;\r\n\r\n/**\r\n * From: https://github.com/Yassin-MT/EETP\r\n *\r\n * An Ethereum-Based Energy Trading Protocol\r\n * This is an P2P Energy Trading Protocol built on Ethereum's Smart Contract technology. On this platform, any entity can buy or sell electricity,\r\n * there is no limit on the number of participants, and there are no intermediaries (e.g. banks, traders and energy retailers).\r\n * The proposed solution uses off-chain and on-chain processing (and storage) with the objective to perform as much processing off-chain as possible,\r\n * without compromising the security of the solution.\r\n *\r\n * Using Ethereum's smart contract technology, the solution realizes a secure, decentralized, trustworthy, and low-cost energy trading in next generation smart grids.\r\n *\r\n * The Actors\r\n * There are four actors in the proposed protocol.\r\n *      a) the producer: an entity that has a block of electricity to sell sometime in the future;\r\n *      b) the consumer: an entity that wants to buy electricity;\r\n *      c) the energy agent: an entity that maintains an energy inventory, provided by producers, and matches it to consumer requests; and\r\n *     (d) the distribution network: an electric power network that transports electricity between two end points.\r\n */\r\ncontract EETP {\r\n    address payable agent; // energy agent owns smart contract\r\n    address payable network; // distribution network\r\n\r\n    uint penality; // penality for cancelling\r\n\r\n    struct offer {\r\n        address payable buyer;\r\n        uint starting;\r\n        uint duration;\r\n        bool confirmed;\r\n    }\r\n\r\n    // hash of energy offer (processed by energy agent) mapped to offer\r\n    mapping (bytes32 => offer) public offers;\r\n\r\n    event bought(bytes32 trans, address payable buyer);\r\n    event confirmed(bytes32 trans, address payable buyer);\r\n\r\n    constructor() {\r\n        agent = payable(msg.sender);\r\n        penality = 100;\r\n    }\r\n\r\n    modifier valid(uint _starting, uint _timestamp) {\r\n        require(_starting > _timestamp, \"\");\r\n        _;\r\n    }\r\n\r\n    function addNetwork(address payable _network)\r\n        public\r\n        payable\r\n    {\r\n        network = _network;\r\n    }\r\n\r\n    function buy(bytes32 _trans, uint _starting, uint _duration, uint _timestamp)\r\n        public\r\n        valid(_starting,_timestamp)\r\n        payable\r\n    {\r\n        offer memory anOffer;\r\n\r\n        // offer must be available (ie hasn't been bought yet)\r\n        if (offers[_trans].buyer == address(0x0)) {\r\n            anOffer.buyer = payable(msg.sender);\r\n            anOffer.starting = _starting;\r\n            anOffer.duration = _duration;\r\n\r\n            offers[_trans] = anOffer;\r\n            emit bought(_trans, payable(msg.sender));\r\n        }\r\n    }\r\n\r\n    function cancel(bytes32 _trans, uint _timestamp)\r\n        public\r\n        payable\r\n    {\r\n        if (offers[_trans].buyer == msg.sender) {\r\n        // buyer can cancel is starting time for energy transfer hasn't yet started\r\n        // must pay penality\r\n        if (offers[_trans].starting > _timestamp) {\r\n            offers[_trans].buyer = payable(address(0x0));\r\n            // person must pay penality\r\n            payable(msg.sender).transfer(penality);\r\n            agent.transfer(penality);\r\n        }\r\n        }\r\n    }\r\n\r\n    modifier identity() {\r\n        require(msg.sender == network, \"\");\r\n        _;\r\n    }\r\n\r\n    // network confrims energy transfer is possible, if not offer is invalid\r\n    function confirm(bytes32 _trans, uint _timestamp)\r\n        public\r\n        identity\r\n        payable\r\n    {\r\n        if (offers[_trans].starting > _timestamp) {\r\n            offers[_trans].confirmed = true;\r\n            emit confirmed(_trans, offers[_trans].buyer);\r\n        }\r\n    }\r\n\r\n    // buyer pays once offer has been confirmed\r\n    function pay(bytes32 _trans)\r\n        public\r\n        payable\r\n    {\r\n        if (offers[_trans].buyer == msg.sender && offers[_trans].confirmed == true) {\r\n            // payment\r\n            payable(msg.sender).transfer(msg.value);\r\n            agent.transfer(msg.value);\r\n        }\r\n    }\r\n}",
  "sourcePath": "/Volumes/My Book/projects/pingleware-contracts/contracts/energy/EETP.sol",
  "ast": {
    "absolutePath": "project:/contracts/energy/EETP.sol",
    "exportedSymbols": {
      "EETP": [
        731
      ]
    },
    "id": 732,
    "license": "CC-BY-4.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 451,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".22",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "39:32:6"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "EETP",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 452,
          "nodeType": "StructuredDocumentation",
          "src": "75:1251:6",
          "text": " From: https://github.com/Yassin-MT/EETP\n An Ethereum-Based Energy Trading Protocol\n This is an P2P Energy Trading Protocol built on Ethereum's Smart Contract technology. On this platform, any entity can buy or sell electricity,\n there is no limit on the number of participants, and there are no intermediaries (e.g. banks, traders and energy retailers).\n The proposed solution uses off-chain and on-chain processing (and storage) with the objective to perform as much processing off-chain as possible,\n without compromising the security of the solution.\n Using Ethereum's smart contract technology, the solution realizes a secure, decentralized, trustworthy, and low-cost energy trading in next generation smart grids.\n The Actors\n There are four actors in the proposed protocol.\n      a) the producer: an entity that has a block of electricity to sell sometime in the future;\n      b) the consumer: an entity that wants to buy electricity;\n      c) the energy agent: an entity that maintains an energy inventory, provided by producers, and matches it to consumer requests; and\n     (d) the distribution network: an electric power network that transports electricity between two end points."
        },
        "fullyImplemented": true,
        "id": 731,
        "linearizedBaseContracts": [
          731
        ],
        "name": "EETP",
        "nameLocation": "1337:4:6",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 454,
            "mutability": "mutable",
            "name": "agent",
            "nameLocation": "1365:5:6",
            "nodeType": "VariableDeclaration",
            "scope": 731,
            "src": "1349:21:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 453,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1349:15:6",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 456,
            "mutability": "mutable",
            "name": "network",
            "nameLocation": "1429:7:6",
            "nodeType": "VariableDeclaration",
            "scope": 731,
            "src": "1413:23:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 455,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1413:15:6",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 458,
            "mutability": "mutable",
            "name": "penality",
            "nameLocation": "1474:8:6",
            "nodeType": "VariableDeclaration",
            "scope": 731,
            "src": "1469:13:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 457,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "1469:4:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "canonicalName": "EETP.offer",
            "id": 467,
            "members": [
              {
                "constant": false,
                "id": 460,
                "mutability": "mutable",
                "name": "buyer",
                "nameLocation": "1558:5:6",
                "nodeType": "VariableDeclaration",
                "scope": 467,
                "src": "1542:21:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address_payable",
                  "typeString": "address payable"
                },
                "typeName": {
                  "id": 459,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1542:15:6",
                  "stateMutability": "payable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 462,
                "mutability": "mutable",
                "name": "starting",
                "nameLocation": "1579:8:6",
                "nodeType": "VariableDeclaration",
                "scope": 467,
                "src": "1574:13:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 461,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "1574:4:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 464,
                "mutability": "mutable",
                "name": "duration",
                "nameLocation": "1603:8:6",
                "nodeType": "VariableDeclaration",
                "scope": 467,
                "src": "1598:13:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 463,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "1598:4:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 466,
                "mutability": "mutable",
                "name": "confirmed",
                "nameLocation": "1627:9:6",
                "nodeType": "VariableDeclaration",
                "scope": 467,
                "src": "1622:14:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 465,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "1622:4:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "offer",
            "nameLocation": "1525:5:6",
            "nodeType": "StructDefinition",
            "scope": 731,
            "src": "1518:126:6",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "474d3ff0",
            "id": 472,
            "mutability": "mutable",
            "name": "offers",
            "nameLocation": "1759:6:6",
            "nodeType": "VariableDeclaration",
            "scope": 731,
            "src": "1725:40:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_offer_$467_storage_$",
              "typeString": "mapping(bytes32 => struct EETP.offer)"
            },
            "typeName": {
              "id": 471,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 468,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "1734:7:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "1725:26:6",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_offer_$467_storage_$",
                "typeString": "mapping(bytes32 => struct EETP.offer)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 470,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 469,
                  "name": "offer",
                  "nameLocations": [
                    "1745:5:6"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 467,
                  "src": "1745:5:6"
                },
                "referencedDeclaration": 467,
                "src": "1745:5:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_offer_$467_storage_ptr",
                  "typeString": "struct EETP.offer"
                }
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "eventSelector": "06f5197f3762f9c7dafa07d8f88482f284a316958188e5740761b4977cc3a5cc",
            "id": 478,
            "name": "bought",
            "nameLocation": "1780:6:6",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 477,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 474,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "trans",
                  "nameLocation": "1795:5:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 478,
                  "src": "1787:13:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 473,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1787:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 476,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "buyer",
                  "nameLocation": "1818:5:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 478,
                  "src": "1802:21:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 475,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1802:15:6",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1786:38:6"
            },
            "src": "1774:51:6"
          },
          {
            "anonymous": false,
            "eventSelector": "742aad2efac896a7d7524137017baa0eb43b638a52ee66cbcbfd697428006eee",
            "id": 484,
            "name": "confirmed",
            "nameLocation": "1837:9:6",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 483,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 480,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "trans",
                  "nameLocation": "1855:5:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 484,
                  "src": "1847:13:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 479,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1847:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 482,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "buyer",
                  "nameLocation": "1878:5:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 484,
                  "src": "1862:21:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 481,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1862:15:6",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1846:38:6"
            },
            "src": "1831:54:6"
          },
          {
            "body": {
              "id": 499,
              "nodeType": "Block",
              "src": "1907:71:6",
              "statements": [
                {
                  "expression": {
                    "id": 493,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 487,
                      "name": "agent",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 454,
                      "src": "1918:5:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 490,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1934:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 491,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1938:6:6",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1934:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 489,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1926:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_payable_$",
                          "typeString": "type(address payable)"
                        },
                        "typeName": {
                          "id": 488,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1926:8:6",
                          "stateMutability": "payable",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 492,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1926:19:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "1918:27:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 494,
                  "nodeType": "ExpressionStatement",
                  "src": "1918:27:6"
                },
                {
                  "expression": {
                    "id": 497,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 495,
                      "name": "penality",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 458,
                      "src": "1956:8:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "313030",
                      "id": 496,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1967:3:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_100_by_1",
                        "typeString": "int_const 100"
                      },
                      "value": "100"
                    },
                    "src": "1956:14:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 498,
                  "nodeType": "ExpressionStatement",
                  "src": "1956:14:6"
                }
              ]
            },
            "id": 500,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 485,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1904:2:6"
            },
            "returnParameters": {
              "id": 486,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1907:0:6"
            },
            "scope": 731,
            "src": "1893:85:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 514,
              "nodeType": "Block",
              "src": "2034:66:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 509,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 507,
                          "name": "_starting",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 502,
                          "src": "2053:9:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "id": 508,
                          "name": "_timestamp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 504,
                          "src": "2065:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2053:22:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 510,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2077:2:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "id": 506,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2045:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 511,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2045:35:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 512,
                  "nodeType": "ExpressionStatement",
                  "src": "2045:35:6"
                },
                {
                  "id": 513,
                  "nodeType": "PlaceholderStatement",
                  "src": "2091:1:6"
                }
              ]
            },
            "id": 515,
            "name": "valid",
            "nameLocation": "1995:5:6",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 505,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 502,
                  "mutability": "mutable",
                  "name": "_starting",
                  "nameLocation": "2006:9:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 515,
                  "src": "2001:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 501,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2001:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 504,
                  "mutability": "mutable",
                  "name": "_timestamp",
                  "nameLocation": "2022:10:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 515,
                  "src": "2017:15:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 503,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2017:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2000:33:6"
            },
            "src": "1986:114:6",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 524,
              "nodeType": "Block",
              "src": "2192:37:6",
              "statements": [
                {
                  "expression": {
                    "id": 522,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 520,
                      "name": "network",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 456,
                      "src": "2203:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 521,
                      "name": "_network",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 517,
                      "src": "2213:8:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "2203:18:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 523,
                  "nodeType": "ExpressionStatement",
                  "src": "2203:18:6"
                }
              ]
            },
            "functionSelector": "d567e4a4",
            "id": 525,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addNetwork",
            "nameLocation": "2117:10:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 518,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 517,
                  "mutability": "mutable",
                  "name": "_network",
                  "nameLocation": "2144:8:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 525,
                  "src": "2128:24:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 516,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2128:15:6",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2127:26:6"
            },
            "returnParameters": {
              "id": 519,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2192:0:6"
            },
            "scope": 731,
            "src": "2108:121:6",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 592,
              "nodeType": "Block",
              "src": "2390:401:6",
              "statements": [
                {
                  "assignments": [
                    542
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 542,
                      "mutability": "mutable",
                      "name": "anOffer",
                      "nameLocation": "2414:7:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 592,
                      "src": "2401:20:6",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_offer_$467_memory_ptr",
                        "typeString": "struct EETP.offer"
                      },
                      "typeName": {
                        "id": 541,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 540,
                          "name": "offer",
                          "nameLocations": [
                            "2401:5:6"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 467,
                          "src": "2401:5:6"
                        },
                        "referencedDeclaration": 467,
                        "src": "2401:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_offer_$467_storage_ptr",
                          "typeString": "struct EETP.offer"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 543,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2401:20:6"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 552,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 544,
                          "name": "offers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 472,
                          "src": "2502:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_offer_$467_storage_$",
                            "typeString": "mapping(bytes32 => struct EETP.offer storage ref)"
                          }
                        },
                        "id": 546,
                        "indexExpression": {
                          "id": 545,
                          "name": "_trans",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 527,
                          "src": "2509:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2502:14:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_offer_$467_storage",
                          "typeString": "struct EETP.offer storage ref"
                        }
                      },
                      "id": 547,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2517:5:6",
                      "memberName": "buyer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 460,
                      "src": "2502:20:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "307830",
                          "id": 550,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2534:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0x0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 549,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2526:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 548,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2526:7:6",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 551,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2526:12:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2502:36:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 591,
                  "nodeType": "IfStatement",
                  "src": "2498:286:6",
                  "trueBody": {
                    "id": 590,
                    "nodeType": "Block",
                    "src": "2540:244:6",
                    "statements": [
                      {
                        "expression": {
                          "id": 561,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 553,
                              "name": "anOffer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 542,
                              "src": "2555:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_offer_$467_memory_ptr",
                                "typeString": "struct EETP.offer memory"
                              }
                            },
                            "id": 555,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "2563:5:6",
                            "memberName": "buyer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 460,
                            "src": "2555:13:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 558,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "2579:3:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 559,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "2583:6:6",
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "2579:10:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 557,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2571:8:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_payable_$",
                                "typeString": "type(address payable)"
                              },
                              "typeName": {
                                "id": 556,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2571:8:6",
                                "stateMutability": "payable",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 560,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2571:19:6",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "src": "2555:35:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "id": 562,
                        "nodeType": "ExpressionStatement",
                        "src": "2555:35:6"
                      },
                      {
                        "expression": {
                          "id": 567,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 563,
                              "name": "anOffer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 542,
                              "src": "2605:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_offer_$467_memory_ptr",
                                "typeString": "struct EETP.offer memory"
                              }
                            },
                            "id": 565,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "2613:8:6",
                            "memberName": "starting",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 462,
                            "src": "2605:16:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 566,
                            "name": "_starting",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 529,
                            "src": "2624:9:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2605:28:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 568,
                        "nodeType": "ExpressionStatement",
                        "src": "2605:28:6"
                      },
                      {
                        "expression": {
                          "id": 573,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 569,
                              "name": "anOffer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 542,
                              "src": "2648:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_offer_$467_memory_ptr",
                                "typeString": "struct EETP.offer memory"
                              }
                            },
                            "id": 571,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "2656:8:6",
                            "memberName": "duration",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 464,
                            "src": "2648:16:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 572,
                            "name": "_duration",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 531,
                            "src": "2667:9:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2648:28:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 574,
                        "nodeType": "ExpressionStatement",
                        "src": "2648:28:6"
                      },
                      {
                        "expression": {
                          "id": 579,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 575,
                              "name": "offers",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 472,
                              "src": "2693:6:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_offer_$467_storage_$",
                                "typeString": "mapping(bytes32 => struct EETP.offer storage ref)"
                              }
                            },
                            "id": 577,
                            "indexExpression": {
                              "id": 576,
                              "name": "_trans",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 527,
                              "src": "2700:6:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2693:14:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_offer_$467_storage",
                              "typeString": "struct EETP.offer storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 578,
                            "name": "anOffer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 542,
                            "src": "2710:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_offer_$467_memory_ptr",
                              "typeString": "struct EETP.offer memory"
                            }
                          },
                          "src": "2693:24:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_offer_$467_storage",
                            "typeString": "struct EETP.offer storage ref"
                          }
                        },
                        "id": 580,
                        "nodeType": "ExpressionStatement",
                        "src": "2693:24:6"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 582,
                              "name": "_trans",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 527,
                              "src": "2744:6:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 585,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4294967281,
                                    "src": "2760:3:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 586,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "2764:6:6",
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "2760:10:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 584,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2752:8:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_payable_$",
                                  "typeString": "type(address payable)"
                                },
                                "typeName": {
                                  "id": 583,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2752:8:6",
                                  "stateMutability": "payable",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 587,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2752:19:6",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 581,
                            "name": "bought",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 478,
                            "src": "2737:6:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_payable_$returns$__$",
                              "typeString": "function (bytes32,address payable)"
                            }
                          },
                          "id": 588,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2737:35:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 589,
                        "nodeType": "EmitStatement",
                        "src": "2732:40:6"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "2c45df99",
            "id": 593,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 536,
                    "name": "_starting",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 529,
                    "src": "2346:9:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "id": 537,
                    "name": "_timestamp",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 533,
                    "src": "2356:10:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 538,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 535,
                  "name": "valid",
                  "nameLocations": [
                    "2340:5:6"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 515,
                  "src": "2340:5:6"
                },
                "nodeType": "ModifierInvocation",
                "src": "2340:27:6"
              }
            ],
            "name": "buy",
            "nameLocation": "2246:3:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 534,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 527,
                  "mutability": "mutable",
                  "name": "_trans",
                  "nameLocation": "2258:6:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 593,
                  "src": "2250:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 526,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2250:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 529,
                  "mutability": "mutable",
                  "name": "_starting",
                  "nameLocation": "2271:9:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 593,
                  "src": "2266:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 528,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2266:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 531,
                  "mutability": "mutable",
                  "name": "_duration",
                  "nameLocation": "2287:9:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 593,
                  "src": "2282:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 530,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2282:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 533,
                  "mutability": "mutable",
                  "name": "_timestamp",
                  "nameLocation": "2303:10:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 593,
                  "src": "2298:15:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 532,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2298:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2249:65:6"
            },
            "returnParameters": {
              "id": 539,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2390:0:6"
            },
            "scope": 731,
            "src": "2237:554:6",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 645,
              "nodeType": "Block",
              "src": "2886:441:6",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 606,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 600,
                          "name": "offers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 472,
                          "src": "2901:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_offer_$467_storage_$",
                            "typeString": "mapping(bytes32 => struct EETP.offer storage ref)"
                          }
                        },
                        "id": 602,
                        "indexExpression": {
                          "id": 601,
                          "name": "_trans",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 595,
                          "src": "2908:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2901:14:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_offer_$467_storage",
                          "typeString": "struct EETP.offer storage ref"
                        }
                      },
                      "id": 603,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2916:5:6",
                      "memberName": "buyer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 460,
                      "src": "2901:20:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 604,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "2925:3:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 605,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2929:6:6",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "2925:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2901:34:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 644,
                  "nodeType": "IfStatement",
                  "src": "2897:423:6",
                  "trueBody": {
                    "id": 643,
                    "nodeType": "Block",
                    "src": "2937:383:6",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 612,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 607,
                                "name": "offers",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 472,
                                "src": "3067:6:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_offer_$467_storage_$",
                                  "typeString": "mapping(bytes32 => struct EETP.offer storage ref)"
                                }
                              },
                              "id": 609,
                              "indexExpression": {
                                "id": 608,
                                "name": "_trans",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 595,
                                "src": "3074:6:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3067:14:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_offer_$467_storage",
                                "typeString": "struct EETP.offer storage ref"
                              }
                            },
                            "id": 610,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3082:8:6",
                            "memberName": "starting",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 462,
                            "src": "3067:23:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "id": 611,
                            "name": "_timestamp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 597,
                            "src": "3093:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3067:36:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 642,
                        "nodeType": "IfStatement",
                        "src": "3063:246:6",
                        "trueBody": {
                          "id": 641,
                          "nodeType": "Block",
                          "src": "3105:204:6",
                          "statements": [
                            {
                              "expression": {
                                "id": 624,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 613,
                                      "name": "offers",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 472,
                                      "src": "3120:6:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_offer_$467_storage_$",
                                        "typeString": "mapping(bytes32 => struct EETP.offer storage ref)"
                                      }
                                    },
                                    "id": 615,
                                    "indexExpression": {
                                      "id": 614,
                                      "name": "_trans",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 595,
                                      "src": "3127:6:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "3120:14:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_offer_$467_storage",
                                      "typeString": "struct EETP.offer storage ref"
                                    }
                                  },
                                  "id": 616,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberLocation": "3135:5:6",
                                  "memberName": "buyer",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 460,
                                  "src": "3120:20:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "hexValue": "307830",
                                          "id": 621,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "3159:3:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_0_by_1",
                                            "typeString": "int_const 0"
                                          },
                                          "value": "0x0"
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_rational_0_by_1",
                                            "typeString": "int_const 0"
                                          }
                                        ],
                                        "id": 620,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "3151:7:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_address_$",
                                          "typeString": "type(address)"
                                        },
                                        "typeName": {
                                          "id": 619,
                                          "name": "address",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "3151:7:6",
                                          "typeDescriptions": {}
                                        }
                                      },
                                      "id": 622,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "3151:12:6",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 618,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "3143:8:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_payable_$",
                                      "typeString": "type(address payable)"
                                    },
                                    "typeName": {
                                      "id": 617,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "3143:8:6",
                                      "stateMutability": "payable",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 623,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "3143:21:6",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                },
                                "src": "3120:44:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "id": 625,
                              "nodeType": "ExpressionStatement",
                              "src": "3120:44:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 632,
                                    "name": "penality",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 458,
                                    "src": "3249:8:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "expression": {
                                          "id": 628,
                                          "name": "msg",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 4294967281,
                                          "src": "3228:3:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_message",
                                            "typeString": "msg"
                                          }
                                        },
                                        "id": 629,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "3232:6:6",
                                        "memberName": "sender",
                                        "nodeType": "MemberAccess",
                                        "src": "3228:10:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 627,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "3220:8:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_payable_$",
                                        "typeString": "type(address payable)"
                                      },
                                      "typeName": {
                                        "id": 626,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "3220:8:6",
                                        "stateMutability": "payable",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 630,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "3220:19:6",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  },
                                  "id": 631,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "3240:8:6",
                                  "memberName": "transfer",
                                  "nodeType": "MemberAccess",
                                  "src": "3220:28:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                                    "typeString": "function (uint256)"
                                  }
                                },
                                "id": 633,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3220:38:6",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 634,
                              "nodeType": "ExpressionStatement",
                              "src": "3220:38:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 638,
                                    "name": "penality",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 458,
                                    "src": "3288:8:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 635,
                                    "name": "agent",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 454,
                                    "src": "3273:5:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  },
                                  "id": 637,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "3279:8:6",
                                  "memberName": "transfer",
                                  "nodeType": "MemberAccess",
                                  "src": "3273:14:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                                    "typeString": "function (uint256)"
                                  }
                                },
                                "id": 639,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3273:24:6",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 640,
                              "nodeType": "ExpressionStatement",
                              "src": "3273:24:6"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "069455a0",
            "id": 646,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "cancel",
            "nameLocation": "2808:6:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 598,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 595,
                  "mutability": "mutable",
                  "name": "_trans",
                  "nameLocation": "2823:6:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 646,
                  "src": "2815:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 594,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2815:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 597,
                  "mutability": "mutable",
                  "name": "_timestamp",
                  "nameLocation": "2836:10:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 646,
                  "src": "2831:15:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 596,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2831:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2814:33:6"
            },
            "returnParameters": {
              "id": 599,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2886:0:6"
            },
            "scope": 731,
            "src": "2799:528:6",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 657,
              "nodeType": "Block",
              "src": "3355:65:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 652,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 649,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "3374:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 650,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3378:6:6",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "3374:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 651,
                          "name": "network",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 456,
                          "src": "3388:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "3374:21:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 653,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3397:2:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "id": 648,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3366:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 654,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3366:34:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 655,
                  "nodeType": "ExpressionStatement",
                  "src": "3366:34:6"
                },
                {
                  "id": 656,
                  "nodeType": "PlaceholderStatement",
                  "src": "3411:1:6"
                }
              ]
            },
            "id": 658,
            "name": "identity",
            "nameLocation": "3344:8:6",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 647,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3352:2:6"
            },
            "src": "3335:85:6",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 690,
              "nodeType": "Block",
              "src": "3612:177:6",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 672,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 667,
                          "name": "offers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 472,
                          "src": "3627:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_offer_$467_storage_$",
                            "typeString": "mapping(bytes32 => struct EETP.offer storage ref)"
                          }
                        },
                        "id": 669,
                        "indexExpression": {
                          "id": 668,
                          "name": "_trans",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 660,
                          "src": "3634:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3627:14:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_offer_$467_storage",
                          "typeString": "struct EETP.offer storage ref"
                        }
                      },
                      "id": 670,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3642:8:6",
                      "memberName": "starting",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 462,
                      "src": "3627:23:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "id": 671,
                      "name": "_timestamp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 662,
                      "src": "3653:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3627:36:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 689,
                  "nodeType": "IfStatement",
                  "src": "3623:159:6",
                  "trueBody": {
                    "id": 688,
                    "nodeType": "Block",
                    "src": "3665:117:6",
                    "statements": [
                      {
                        "expression": {
                          "id": 678,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 673,
                                "name": "offers",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 472,
                                "src": "3680:6:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_offer_$467_storage_$",
                                  "typeString": "mapping(bytes32 => struct EETP.offer storage ref)"
                                }
                              },
                              "id": 675,
                              "indexExpression": {
                                "id": 674,
                                "name": "_trans",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 660,
                                "src": "3687:6:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3680:14:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_offer_$467_storage",
                                "typeString": "struct EETP.offer storage ref"
                              }
                            },
                            "id": 676,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "3695:9:6",
                            "memberName": "confirmed",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 466,
                            "src": "3680:24:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 677,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3707:4:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "3680:31:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 679,
                        "nodeType": "ExpressionStatement",
                        "src": "3680:31:6"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 681,
                              "name": "_trans",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 660,
                              "src": "3741:6:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 682,
                                  "name": "offers",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 472,
                                  "src": "3749:6:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_offer_$467_storage_$",
                                    "typeString": "mapping(bytes32 => struct EETP.offer storage ref)"
                                  }
                                },
                                "id": 684,
                                "indexExpression": {
                                  "id": 683,
                                  "name": "_trans",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 660,
                                  "src": "3756:6:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "3749:14:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_offer_$467_storage",
                                  "typeString": "struct EETP.offer storage ref"
                                }
                              },
                              "id": 685,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3764:5:6",
                              "memberName": "buyer",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 460,
                              "src": "3749:20:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 680,
                            "name": "confirmed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 484,
                            "src": "3731:9:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_payable_$returns$__$",
                              "typeString": "function (bytes32,address payable)"
                            }
                          },
                          "id": 686,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3731:39:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 687,
                        "nodeType": "EmitStatement",
                        "src": "3726:44:6"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "f2cb3d76",
            "id": 691,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 665,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 664,
                  "name": "identity",
                  "nameLocations": [
                    "3581:8:6"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 658,
                  "src": "3581:8:6"
                },
                "nodeType": "ModifierInvocation",
                "src": "3581:8:6"
              }
            ],
            "name": "confirm",
            "nameLocation": "3515:7:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 663,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 660,
                  "mutability": "mutable",
                  "name": "_trans",
                  "nameLocation": "3531:6:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 691,
                  "src": "3523:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 659,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3523:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 662,
                  "mutability": "mutable",
                  "name": "_timestamp",
                  "nameLocation": "3544:10:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 691,
                  "src": "3539:15:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 661,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3539:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3522:33:6"
            },
            "returnParameters": {
              "id": 666,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3612:0:6"
            },
            "scope": 731,
            "src": "3506:283:6",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 729,
              "nodeType": "Block",
              "src": "3913:224:6",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 709,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 702,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "baseExpression": {
                            "id": 696,
                            "name": "offers",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 472,
                            "src": "3928:6:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_offer_$467_storage_$",
                              "typeString": "mapping(bytes32 => struct EETP.offer storage ref)"
                            }
                          },
                          "id": 698,
                          "indexExpression": {
                            "id": 697,
                            "name": "_trans",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 693,
                            "src": "3935:6:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3928:14:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_offer_$467_storage",
                            "typeString": "struct EETP.offer storage ref"
                          }
                        },
                        "id": 699,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3943:5:6",
                        "memberName": "buyer",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 460,
                        "src": "3928:20:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "expression": {
                          "id": 700,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3952:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 701,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3956:6:6",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3952:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "3928:34:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 708,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "baseExpression": {
                            "id": 703,
                            "name": "offers",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 472,
                            "src": "3966:6:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_offer_$467_storage_$",
                              "typeString": "mapping(bytes32 => struct EETP.offer storage ref)"
                            }
                          },
                          "id": 705,
                          "indexExpression": {
                            "id": 704,
                            "name": "_trans",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 693,
                            "src": "3973:6:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3966:14:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_offer_$467_storage",
                            "typeString": "struct EETP.offer storage ref"
                          }
                        },
                        "id": 706,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3981:9:6",
                        "memberName": "confirmed",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 466,
                        "src": "3966:24:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "74727565",
                        "id": 707,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3994:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      "src": "3966:32:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "3928:70:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 728,
                  "nodeType": "IfStatement",
                  "src": "3924:206:6",
                  "trueBody": {
                    "id": 727,
                    "nodeType": "Block",
                    "src": "4000:130:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 716,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "4068:3:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 717,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4072:5:6",
                              "memberName": "value",
                              "nodeType": "MemberAccess",
                              "src": "4068:9:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 712,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4294967281,
                                    "src": "4047:3:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 713,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "4051:6:6",
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "4047:10:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 711,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "4039:8:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_payable_$",
                                  "typeString": "type(address payable)"
                                },
                                "typeName": {
                                  "id": 710,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "4039:8:6",
                                  "stateMutability": "payable",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 714,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4039:19:6",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "id": 715,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4059:8:6",
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "src": "4039:28:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 718,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4039:39:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 719,
                        "nodeType": "ExpressionStatement",
                        "src": "4039:39:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 723,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "4108:3:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 724,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4112:5:6",
                              "memberName": "value",
                              "nodeType": "MemberAccess",
                              "src": "4108:9:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 720,
                              "name": "agent",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 454,
                              "src": "4093:5:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "id": 722,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4099:8:6",
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "src": "4093:14:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 725,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4093:25:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 726,
                        "nodeType": "ExpressionStatement",
                        "src": "4093:25:6"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "8609cad1",
            "id": 730,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "pay",
            "nameLocation": "3855:3:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 694,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 693,
                  "mutability": "mutable",
                  "name": "_trans",
                  "nameLocation": "3867:6:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 730,
                  "src": "3859:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 692,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3859:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3858:16:6"
            },
            "returnParameters": {
              "id": 695,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3913:0:6"
            },
            "scope": 731,
            "src": "3846:291:6",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 732,
        "src": "1328:2812:6",
        "usedErrors": []
      }
    ],
    "src": "39:4101:6"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.18+commit.87f61d96.Emscripten.clang"
  },
  "networks": {
    "1697930746463": {
      "events": {},
      "links": {},
      "address": "0x640B4F401a4436D69d00389b206f6B9a21CCEdF4",
      "transactionHash": "0xe31e0e0746fe94ded7bbdab6ecf469dc5223f94da9a9ea12da04e0e3ea982d93"
    }
  },
  "schemaVersion": "3.4.12",
  "updatedAt": "2023-10-24T15:53:24.036Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "notice": "From: https://github.com/Yassin-MT/EETP An Ethereum-Based Energy Trading Protocol This is an P2P Energy Trading Protocol built on Ethereum's Smart Contract technology. On this platform, any entity can buy or sell electricity, there is no limit on the number of participants, and there are no intermediaries (e.g. banks, traders and energy retailers). The proposed solution uses off-chain and on-chain processing (and storage) with the objective to perform as much processing off-chain as possible, without compromising the security of the solution. Using Ethereum's smart contract technology, the solution realizes a secure, decentralized, trustworthy, and low-cost energy trading in next generation smart grids. The Actors There are four actors in the proposed protocol.      a) the producer: an entity that has a block of electricity to sell sometime in the future;      b) the consumer: an entity that wants to buy electricity;      c) the energy agent: an entity that maintains an energy inventory, provided by producers, and matches it to consumer requests; and     (d) the distribution network: an electric power network that transports electricity between two end points.",
    "version": 1
  }
}