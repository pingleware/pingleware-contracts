{
  "contractName": "DisputeResolution",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "arbitrationAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "arbitrators",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "party",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "asPartyA",
          "type": "bool"
        }
      ],
      "name": "addParty",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "dispute",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "reason",
          "type": "string"
        }
      ],
      "name": "submitDispute",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "dispute",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "resolvedInFavorOfPartyA",
          "type": "bool"
        }
      ],
      "name": "resolveDispute",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "dispute",
          "type": "address"
        }
      ],
      "name": "resetDispute",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"arbitrationAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"party\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"asPartyA\",\"type\":\"bool\"}],\"name\":\"addParty\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"arbitrators\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"dispute\",\"type\":\"address\"}],\"name\":\"resetDispute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"dispute\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"resolvedInFavorOfPartyA\",\"type\":\"bool\"}],\"name\":\"resolveDispute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"dispute\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"submitDispute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/legal/DisputeReolution.sol\":\"DisputeResolution\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"project:/contracts/legal/DisputeReolution.sol\":{\"keccak256\":\"0xccfc1b6078e213d6968476844e26a32180014d401b9d8eaf5c71bce7f1fbbad0\",\"license\":\"CC-BY-4.0\",\"urls\":[\"bzz-raw://0e10179fc698dc4ed00de4d342468bf66a5895a0021e3bc82b62faefc047707e\",\"dweb:/ipfs/QmcXsKB3GQuNrALorPVQkfUhPrriba22wQHjBeuJWm7gUJ\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5060405161081638038061081683398101604081905261002f91610054565b60048054600160a060020a031916600160a060020a0392909216919091179055610084565b60006020828403121561006657600080fd5b8151600160a060020a038116811461007d57600080fd5b9392505050565b610783806100936000396000f3fe608060405234801561001057600080fd5b506004361061005a5760e060020a60003504633738de3f811461005f57806351d0ea371461007457806357c1d4ff146100ab5780638d1ff7cc146100be578063fb833b33146100d1575b600080fd5b61007261006d3660046105bd565b6100e4565b005b6100976100823660046105f4565b60026020526000908152604090205460ff1681565b604051901515815260200160405180910390f35b6100726100b93660046105bd565b6102ba565b6100726100cc366004610616565b610341565b6100726100df3660046105f4565b61053d565b3360009081526002602052604090205460ff1661011f5760405160e560020a62461bcd02815260040161011690610698565b60405180910390fd5b600160a060020a038216600090815260036020819052604082205460ff169081111561014d5761014d6106e7565b036101af5760405160e560020a62461bcd02815260206004820152602660248201527f5468657265206973206e6f20616374697665206469737075746520746f207265604482015260d160020a6539b7b63b3297026064820152608401610116565b600480546040805160e060020a639a8e813d0281529051600160a060020a0390921692639a8e813d92828201926020929082900301816000875af11580156101fb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061021f9190610701565b61026a5760405160e560020a62461bcd0281526020600482015260166024820152605260020a751d9bdd1a5b99c81a185cc81b9bdd08195e1c1a5c9959026044820152606401610116565b80156102985750600160a060020a03166000908152600360208190526040909120805460ff19169091179055565b50600160a060020a03166000908152600360205260409020805460ff19169055565b3360009081526002602052604090205460ff166102ec5760405160e560020a62461bcd02815260040161011690610698565b801561031957600160a060020a0382166000908152602081905260409020805460ff191660011790555050565b50600160a060020a03166000908152600160208190526040909120805460ff19169091179055565b3360009081526020819052604090205460ff168061036e57503360009081526001602052604090205460ff165b6103cc5760405160e560020a62461bcd028152602060048201526024808201527f596f7520617265206e6f74206120706172747920746f2074686520636f6e7472604482015260e160020a6330b1ba17026064820152608401610116565b600160a060020a038316600090815260036020819052604082205460ff16908111156103fa576103fa6106e7565b1461044a5760405160e560020a62461bcd02815260206004820152601b60248201527f546865726520697320616c7265616479206120646973707574652e00000000006044820152606401610116565b3360009081526020819052604090205460ff16156104eb57600160a060020a0383811660009081526003602052604090819020805460ff1916600117905560048054915160e360020a6304aaeb9f02815291909216916325575cf8916104b491869186910161071e565b600060405180830381600087803b1580156104ce57600080fd5b505af11580156104e2573d6000803e3d6000fd5b50505050505050565b600160a060020a0383811660009081526003602052604090819020805460ff1916600217905560048054915160e060020a63366262e7028152919092169163366262e7916104b491869186910161071e565b3360009081526002602052604090205460ff1661056f5760405160e560020a62461bcd02815260040161011690610698565b600160a060020a03166000908152600360205260409020805460ff19169055565b8035600160a060020a03811681146105a757600080fd5b919050565b80151581146105ba57600080fd5b50565b600080604083850312156105d057600080fd5b6105d983610590565b915060208301356105e9816105ac565b809150509250929050565b60006020828403121561060657600080fd5b61060f82610590565b9392505050565b60008060006040848603121561062b57600080fd5b61063484610590565b925060208401356001604060020a038082111561065057600080fd5b818601915086601f83011261066457600080fd5b81358181111561067357600080fd5b87602082850101111561068557600080fd5b6020830194508093505050509250925092565b6020808252602c908201527f4f6e6c79207468652061726269747261746f722063616e20706572666f726d20604082015260a160020a6b3a3434b99030b1ba34b7b71702606082015260800190565b60e060020a634e487b710260009081526021600452602490fd5b60006020828403121561071357600080fd5b815161060f816105ac565b60208152816020820152818360408301376000818301604090810191909152601f909201601f1916010191905056fea2646970667358221220f570489b8d4a0f172a0e12107085e0c852c3c81d11a4f3fadab4b5a6caf57a6964736f6c63430008120033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061005a5760e060020a60003504633738de3f811461005f57806351d0ea371461007457806357c1d4ff146100ab5780638d1ff7cc146100be578063fb833b33146100d1575b600080fd5b61007261006d3660046105bd565b6100e4565b005b6100976100823660046105f4565b60026020526000908152604090205460ff1681565b604051901515815260200160405180910390f35b6100726100b93660046105bd565b6102ba565b6100726100cc366004610616565b610341565b6100726100df3660046105f4565b61053d565b3360009081526002602052604090205460ff1661011f5760405160e560020a62461bcd02815260040161011690610698565b60405180910390fd5b600160a060020a038216600090815260036020819052604082205460ff169081111561014d5761014d6106e7565b036101af5760405160e560020a62461bcd02815260206004820152602660248201527f5468657265206973206e6f20616374697665206469737075746520746f207265604482015260d160020a6539b7b63b3297026064820152608401610116565b600480546040805160e060020a639a8e813d0281529051600160a060020a0390921692639a8e813d92828201926020929082900301816000875af11580156101fb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061021f9190610701565b61026a5760405160e560020a62461bcd0281526020600482015260166024820152605260020a751d9bdd1a5b99c81a185cc81b9bdd08195e1c1a5c9959026044820152606401610116565b80156102985750600160a060020a03166000908152600360208190526040909120805460ff19169091179055565b50600160a060020a03166000908152600360205260409020805460ff19169055565b3360009081526002602052604090205460ff166102ec5760405160e560020a62461bcd02815260040161011690610698565b801561031957600160a060020a0382166000908152602081905260409020805460ff191660011790555050565b50600160a060020a03166000908152600160208190526040909120805460ff19169091179055565b3360009081526020819052604090205460ff168061036e57503360009081526001602052604090205460ff165b6103cc5760405160e560020a62461bcd028152602060048201526024808201527f596f7520617265206e6f74206120706172747920746f2074686520636f6e7472604482015260e160020a6330b1ba17026064820152608401610116565b600160a060020a038316600090815260036020819052604082205460ff16908111156103fa576103fa6106e7565b1461044a5760405160e560020a62461bcd02815260206004820152601b60248201527f546865726520697320616c7265616479206120646973707574652e00000000006044820152606401610116565b3360009081526020819052604090205460ff16156104eb57600160a060020a0383811660009081526003602052604090819020805460ff1916600117905560048054915160e360020a6304aaeb9f02815291909216916325575cf8916104b491869186910161071e565b600060405180830381600087803b1580156104ce57600080fd5b505af11580156104e2573d6000803e3d6000fd5b50505050505050565b600160a060020a0383811660009081526003602052604090819020805460ff1916600217905560048054915160e060020a63366262e7028152919092169163366262e7916104b491869186910161071e565b3360009081526002602052604090205460ff1661056f5760405160e560020a62461bcd02815260040161011690610698565b600160a060020a03166000908152600360205260409020805460ff19169055565b8035600160a060020a03811681146105a757600080fd5b919050565b80151581146105ba57600080fd5b50565b600080604083850312156105d057600080fd5b6105d983610590565b915060208301356105e9816105ac565b809150509250929050565b60006020828403121561060657600080fd5b61060f82610590565b9392505050565b60008060006040848603121561062b57600080fd5b61063484610590565b925060208401356001604060020a038082111561065057600080fd5b818601915086601f83011261066457600080fd5b81358181111561067357600080fd5b87602082850101111561068557600080fd5b6020830194508093505050509250925092565b6020808252602c908201527f4f6e6c79207468652061726269747261746f722063616e20706572666f726d20604082015260a160020a6b3a3434b99030b1ba34b7b71702606082015260800190565b60e060020a634e487b710260009081526021600452602490fd5b60006020828403121561071357600080fd5b815161060f816105ac565b60208152816020820152818360408301376000818301604090810191909152601f909201601f1916010191905056fea2646970667358221220f570489b8d4a0f172a0e12107085e0c852c3c81d11a4f3fadab4b5a6caf57a6964736f6c63430008120033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:306:7",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:7",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "95:209:7",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "141:16:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "150:1:7",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "153:1:7",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "143:6:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "143:12:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "143:12:7"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "116:7:7"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "125:9:7"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "112:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "112:23:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "137:2:7",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "108:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "108:32:7"
                  },
                  "nodeType": "YulIf",
                  "src": "105:52:7"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "166:29:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "185:9:7"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "179:5:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "179:16:7"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "170:5:7",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "258:16:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "267:1:7",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "270:1:7",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "260:6:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "260:12:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "260:12:7"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "217:5:7"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "228:5:7"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "243:1:7",
                                        "type": "",
                                        "value": "2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "246:3:7",
                                        "type": "",
                                        "value": "160"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "exp",
                                      "nodeType": "YulIdentifier",
                                      "src": "239:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "239:11:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "252:1:7",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "235:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "235:19:7"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "224:3:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "224:31:7"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "214:2:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "214:42:7"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "207:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "207:50:7"
                  },
                  "nodeType": "YulIf",
                  "src": "204:70:7"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "283:15:7",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "293:5:7"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "283:6:7"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "61:9:7",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "72:7:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "84:6:7",
                "type": ""
              }
            ],
            "src": "14:290:7"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(exp(2, 160), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n}",
      "id": 7,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:4403:7",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:7",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "63:124:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "73:29:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "95:6:7"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "82:12:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "82:20:7"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "73:5:7"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "165:16:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "174:1:7",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "177:1:7",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "167:6:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "167:12:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "167:12:7"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "124:5:7"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "135:5:7"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "150:1:7",
                                        "type": "",
                                        "value": "2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "153:3:7",
                                        "type": "",
                                        "value": "160"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "exp",
                                      "nodeType": "YulIdentifier",
                                      "src": "146:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "146:11:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "159:1:7",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "142:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "142:19:7"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "131:3:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "131:31:7"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "121:2:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "121:42:7"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "114:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "114:50:7"
                  },
                  "nodeType": "YulIf",
                  "src": "111:70:7"
                }
              ]
            },
            "name": "abi_decode_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "42:6:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "53:5:7",
                "type": ""
              }
            ],
            "src": "14:173:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "234:76:7",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "288:16:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "297:1:7",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "300:1:7",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "290:6:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "290:12:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "290:12:7"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "257:5:7"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "278:5:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "271:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "271:13:7"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "264:6:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "264:21:7"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "254:2:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "254:32:7"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "247:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "247:40:7"
                  },
                  "nodeType": "YulIf",
                  "src": "244:60:7"
                }
              ]
            },
            "name": "validator_revert_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "223:5:7",
                "type": ""
              }
            ],
            "src": "192:118:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "399:231:7",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "445:16:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "454:1:7",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "457:1:7",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "447:6:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "447:12:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "447:12:7"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "420:7:7"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "429:9:7"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "416:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "416:23:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "441:2:7",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "412:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "412:32:7"
                  },
                  "nodeType": "YulIf",
                  "src": "409:52:7"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "470:39:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "499:9:7"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "480:18:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "480:29:7"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "470:6:7"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "518:45:7",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "548:9:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "559:2:7",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "544:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "544:18:7"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "531:12:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "531:32:7"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "522:5:7",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "594:5:7"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_bool",
                      "nodeType": "YulIdentifier",
                      "src": "572:21:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "572:28:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "572:28:7"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "609:15:7",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "619:5:7"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "609:6:7"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "357:9:7",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "368:7:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "380:6:7",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "388:6:7",
                "type": ""
              }
            ],
            "src": "315:315:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "705:116:7",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "751:16:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "760:1:7",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "763:1:7",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "753:6:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "753:12:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "753:12:7"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "726:7:7"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "735:9:7"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "722:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "722:23:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "747:2:7",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "718:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "718:32:7"
                  },
                  "nodeType": "YulIf",
                  "src": "715:52:7"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "776:39:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "805:9:7"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "786:18:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "786:29:7"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "776:6:7"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "671:9:7",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "682:7:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "694:6:7",
                "type": ""
              }
            ],
            "src": "635:186:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "921:92:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "931:26:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "943:9:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "954:2:7",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "939:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "939:18:7"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "931:4:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "973:9:7"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "998:6:7"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "991:6:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "991:14:7"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "984:6:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "984:22:7"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "966:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "966:41:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "966:41:7"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "890:9:7",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "901:6:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "912:4:7",
                "type": ""
              }
            ],
            "src": "826:187:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1125:559:7",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1171:16:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1180:1:7",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1183:1:7",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1173:6:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1173:12:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1173:12:7"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1146:7:7"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1155:9:7"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1142:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1142:23:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1167:2:7",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1138:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1138:32:7"
                  },
                  "nodeType": "YulIf",
                  "src": "1135:52:7"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1196:39:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1225:9:7"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "1206:18:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1206:29:7"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1196:6:7"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1244:46:7",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1275:9:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1286:2:7",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1271:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1271:18:7"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1258:12:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1258:32:7"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "1248:6:7",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1299:28:7",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1317:1:7",
                            "type": "",
                            "value": "2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1320:2:7",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "exp",
                          "nodeType": "YulIdentifier",
                          "src": "1313:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1313:10:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1325:1:7",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "1309:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1309:18:7"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "1303:2:7",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1354:16:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1363:1:7",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1366:1:7",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1356:6:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1356:12:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1356:12:7"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1342:6:7"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "1350:2:7"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1339:2:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1339:14:7"
                  },
                  "nodeType": "YulIf",
                  "src": "1336:34:7"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1379:32:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1393:9:7"
                      },
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1404:6:7"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1389:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1389:22:7"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "1383:2:7",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1459:16:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1468:1:7",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1471:1:7",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1461:6:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1461:12:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1461:12:7"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "1438:2:7"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1442:4:7",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1434:3:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1434:13:7"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1449:7:7"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "1430:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1430:27:7"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1423:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1423:35:7"
                  },
                  "nodeType": "YulIf",
                  "src": "1420:55:7"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1484:30:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "1511:2:7"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1498:12:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1498:16:7"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "1488:6:7",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1541:16:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1550:1:7",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1553:1:7",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1543:6:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1543:12:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1543:12:7"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1529:6:7"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "1537:2:7"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1526:2:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1526:14:7"
                  },
                  "nodeType": "YulIf",
                  "src": "1523:34:7"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1607:16:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1616:1:7",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1619:1:7",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1609:6:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1609:12:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1609:12:7"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "1580:2:7"
                              },
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "1584:6:7"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1576:3:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1576:15:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1593:2:7",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1572:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1572:24:7"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "1598:7:7"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1569:2:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1569:37:7"
                  },
                  "nodeType": "YulIf",
                  "src": "1566:57:7"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1632:21:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "1646:2:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1650:2:7",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1642:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1642:11:7"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1632:6:7"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1662:16:7",
                  "value": {
                    "name": "length",
                    "nodeType": "YulIdentifier",
                    "src": "1672:6:7"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "1662:6:7"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_string_calldata_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1075:9:7",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1086:7:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1098:6:7",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1106:6:7",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "1114:6:7",
                "type": ""
              }
            ],
            "src": "1018:666:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1863:234:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1880:9:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1891:2:7",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1873:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1873:21:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1873:21:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1914:9:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1925:2:7",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1910:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1910:18:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1930:2:7",
                        "type": "",
                        "value": "44"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1903:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1903:30:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1903:30:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1953:9:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1964:2:7",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1949:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1949:18:7"
                      },
                      {
                        "hexValue": "4f6e6c79207468652061726269747261746f722063616e20706572666f726d20",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1969:34:7",
                        "type": "",
                        "value": "Only the arbitrator can perform "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1942:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1942:62:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1942:62:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2024:9:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2035:2:7",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2020:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2020:18:7"
                      },
                      {
                        "hexValue": "7468697320616374696f6e2e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2040:14:7",
                        "type": "",
                        "value": "this action."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2013:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2013:42:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2013:42:7"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2064:27:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2076:9:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2087:3:7",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2072:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2072:19:7"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2064:4:7"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_d786a1d49d0128888c74c94e32a1f61a5a4b1fcb321f05f64a05bb13bbb188b1__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1840:9:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1854:4:7",
                "type": ""
              }
            ],
            "src": "1689:408:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2134:103:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2151:1:7",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2158:10:7",
                            "type": "",
                            "value": "0x4e487b71"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2174:1:7",
                                "type": "",
                                "value": "2"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2177:3:7",
                                "type": "",
                                "value": "224"
                              }
                            ],
                            "functionName": {
                              "name": "exp",
                              "nodeType": "YulIdentifier",
                              "src": "2170:3:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2170:11:7"
                          }
                        ],
                        "functionName": {
                          "name": "mul",
                          "nodeType": "YulIdentifier",
                          "src": "2154:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2154:28:7"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2144:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2144:39:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2144:39:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2199:1:7",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2202:4:7",
                        "type": "",
                        "value": "0x21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2192:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2192:15:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2192:15:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2223:1:7",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2226:4:7",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "2216:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2216:15:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2216:15:7"
                }
              ]
            },
            "name": "panic_error_0x21",
            "nodeType": "YulFunctionDefinition",
            "src": "2102:135:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2416:228:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2433:9:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2444:2:7",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2426:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2426:21:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2426:21:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2467:9:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2478:2:7",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2463:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2463:18:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2483:2:7",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2456:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2456:30:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2456:30:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2506:9:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2517:2:7",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2502:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2502:18:7"
                      },
                      {
                        "hexValue": "5468657265206973206e6f20616374697665206469737075746520746f207265",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2522:34:7",
                        "type": "",
                        "value": "There is no active dispute to re"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2495:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2495:62:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2495:62:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2577:9:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2588:2:7",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2573:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2573:18:7"
                      },
                      {
                        "hexValue": "736f6c76652e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2593:8:7",
                        "type": "",
                        "value": "solve."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2566:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2566:36:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2566:36:7"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2611:27:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2623:9:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2634:3:7",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2619:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2619:19:7"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2611:4:7"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_68890c23bff95f8d142d42899cc9d85496f99eca7868c2fe006680acf72dd6ed__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2393:9:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2407:4:7",
                "type": ""
              }
            ],
            "src": "2242:402:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2727:167:7",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2773:16:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2782:1:7",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2785:1:7",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2775:6:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2775:12:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2775:12:7"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2748:7:7"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2757:9:7"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2744:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2744:23:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2769:2:7",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2740:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2740:32:7"
                  },
                  "nodeType": "YulIf",
                  "src": "2737:52:7"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2798:29:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2817:9:7"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "2811:5:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2811:16:7"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "2802:5:7",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2858:5:7"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_bool",
                      "nodeType": "YulIdentifier",
                      "src": "2836:21:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2836:28:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2836:28:7"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2873:15:7",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "2883:5:7"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2873:6:7"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2693:9:7",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2704:7:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2716:6:7",
                "type": ""
              }
            ],
            "src": "2649:245:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3073:172:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3090:9:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3101:2:7",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3083:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3083:21:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3083:21:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3124:9:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3135:2:7",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3120:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3120:18:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3140:2:7",
                        "type": "",
                        "value": "22"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3113:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3113:30:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3113:30:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3163:9:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3174:2:7",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3159:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3159:18:7"
                      },
                      {
                        "hexValue": "766f74696e6720686173206e6f742065787069726564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3179:24:7",
                        "type": "",
                        "value": "voting has not expired"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3152:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3152:52:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3152:52:7"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3213:26:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3225:9:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3236:2:7",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3221:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3221:18:7"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3213:4:7"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_0ec6819cbe4b75da2d44be1fd436ebf8523837a4b0ffe30e5e0a41cb7df2d738__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3050:9:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3064:4:7",
                "type": ""
              }
            ],
            "src": "2899:346:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3424:226:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3441:9:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3452:2:7",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3434:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3434:21:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3434:21:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3475:9:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3486:2:7",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3471:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3471:18:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3491:2:7",
                        "type": "",
                        "value": "36"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3464:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3464:30:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3464:30:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3514:9:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3525:2:7",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3510:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3510:18:7"
                      },
                      {
                        "hexValue": "596f7520617265206e6f74206120706172747920746f2074686520636f6e7472",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3530:34:7",
                        "type": "",
                        "value": "You are not a party to the contr"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3503:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3503:62:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3503:62:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3585:9:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3596:2:7",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3581:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3581:18:7"
                      },
                      {
                        "hexValue": "6163742e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3601:6:7",
                        "type": "",
                        "value": "act."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3574:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3574:34:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3574:34:7"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3617:27:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3629:9:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3640:3:7",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3625:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3625:19:7"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3617:4:7"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_d617bf225a8c49134b33bac187422b6cbdcd547fc5ee2678f0c74d0d91394361__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3401:9:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3415:4:7",
                "type": ""
              }
            ],
            "src": "3250:400:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3829:177:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3846:9:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3857:2:7",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3839:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3839:21:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3839:21:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3880:9:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3891:2:7",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3876:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3876:18:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3896:2:7",
                        "type": "",
                        "value": "27"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3869:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3869:30:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3869:30:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3919:9:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3930:2:7",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3915:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3915:18:7"
                      },
                      {
                        "hexValue": "546865726520697320616c7265616479206120646973707574652e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3935:29:7",
                        "type": "",
                        "value": "There is already a dispute."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3908:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3908:57:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3908:57:7"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3974:26:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3986:9:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3997:2:7",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3982:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3982:18:7"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3974:4:7"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_8cc9397048ec5a2ec9c3686905c84c018a6acefca7d85059203dc478a5ba1a28__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3806:9:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3820:4:7",
                "type": ""
              }
            ],
            "src": "3655:351:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4142:259:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4159:9:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4170:2:7",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4152:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4152:21:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4152:21:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4193:9:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4204:2:7",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4189:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4189:18:7"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "4209:6:7"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4182:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4182:34:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4182:34:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4242:9:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4253:2:7",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4238:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4238:18:7"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4258:6:7"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "4266:6:7"
                      }
                    ],
                    "functionName": {
                      "name": "calldatacopy",
                      "nodeType": "YulIdentifier",
                      "src": "4225:12:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4225:48:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4225:48:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4297:9:7"
                              },
                              {
                                "name": "value1",
                                "nodeType": "YulIdentifier",
                                "src": "4308:6:7"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4293:3:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4293:22:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4317:2:7",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4289:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4289:31:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4322:1:7",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4282:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4282:42:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4282:42:7"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4333:62:7",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4349:9:7"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "4368:6:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4376:2:7",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "4364:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4364:15:7"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4385:2:7",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "4381:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4381:7:7"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "4360:3:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4360:29:7"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4345:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4345:45:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4392:2:7",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4341:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4341:54:7"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4333:4:7"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_calldata_ptr__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4103:9:7",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4114:6:7",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4122:6:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4133:4:7",
                "type": ""
              }
            ],
            "src": "4011:390:7"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(exp(2, 160), 1)))) { revert(0, 0) }\n    }\n    function validator_revert_bool(value)\n    {\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        validator_revert_bool(value)\n        value1 := value\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_addresst_string_calldata_ptr(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let offset := calldataload(add(headStart, 32))\n        let _1 := sub(exp(2, 64), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := calldataload(_2)\n        if gt(length, _1) { revert(0, 0) }\n        if gt(add(add(_2, length), 32), dataEnd) { revert(0, 0) }\n        value1 := add(_2, 32)\n        value2 := length\n    }\n    function abi_encode_tuple_t_stringliteral_d786a1d49d0128888c74c94e32a1f61a5a4b1fcb321f05f64a05bb13bbb188b1__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 44)\n        mstore(add(headStart, 64), \"Only the arbitrator can perform \")\n        mstore(add(headStart, 96), \"this action.\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x21()\n    {\n        mstore(0, mul(0x4e487b71, exp(2, 224)))\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_stringliteral_68890c23bff95f8d142d42899cc9d85496f99eca7868c2fe006680acf72dd6ed__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"There is no active dispute to re\")\n        mstore(add(headStart, 96), \"solve.\")\n        tail := add(headStart, 128)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bool(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_0ec6819cbe4b75da2d44be1fd436ebf8523837a4b0ffe30e5e0a41cb7df2d738__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"voting has not expired\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_d617bf225a8c49134b33bac187422b6cbdcd547fc5ee2678f0c74d0d91394361__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"You are not a party to the contr\")\n        mstore(add(headStart, 96), \"act.\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_8cc9397048ec5a2ec9c3686905c84c018a6acefca7d85059203dc478a5ba1a28__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"There is already a dispute.\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_string_calldata_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), value1)\n        calldatacopy(add(headStart, 64), value0, value1)\n        mstore(add(add(headStart, value1), 64), 0)\n        tail := add(add(headStart, and(add(value1, 31), not(31))), 64)\n    }\n}",
      "id": 7,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "295:2273:4:-:0;;;656:257;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;706:19;:54;;-1:-1:-1;;;;;;706:54:4;-1:-1:-1;;;;;706:54:4;;;;;;;;;;295:2273;;14:290:7;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:7;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:7:o;:::-;295:2273:4;;;;;;",
  "deployedSourceMap": "295:2273:4:-:0;;;;;;;;;;;;;;;;;;-1:-1:-1;;;295:2273:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1939:493;;;;;;:::i;:::-;;:::i;:::-;;423:43;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;991:14:7;;984:22;966:41;;954:2;939:18;423:43:4;;;;;;;1209:201;;;;;;:::i;:::-;;:::i;1416:517::-;;;;;;:::i;:::-;;:::i;2438:128::-;;;;;;:::i;:::-;;:::i;1939:493::-;1125:10;1113:23;;;;:11;:23;;;;;;;;1105:80;;;;-1:-1:-1;;;;;1105:80:4;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;;;2051:22:4;::::1;2077:23;2051:22:::0;;;:13:::1;:22;::::0;;;;;;;::::1;;::::0;:49;::::1;;;;;;:::i;:::-;::::0;2043:100:::1;;;::::0;-1:-1:-1;;;;;2043:100:4;;2444:2:7;2043:100:4::1;::::0;::::1;2426:21:7::0;2483:2;2463:18;;;2456:30;2522:34;2502:18;;;2495:62;-1:-1:-1;;;;;2573:18:7;;;2566:36;2619:19;;2043:100:4::1;2242:402:7::0;2043:100:4::1;2161:19;::::0;;:40:::1;::::0;;-1:-1:-1;;;;;2161:40:4;;;;-1:-1:-1;;;;;2161:19:4;;::::1;::::0;:38:::1;::::0;:40;;::::1;::::0;::::1;::::0;;;;;;;:19:::1;::::0;:40:::1;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2153:74;;;::::0;-1:-1:-1;;;;;2153:74:4;;3101:2:7;2153:74:4::1;::::0;::::1;3083:21:7::0;3140:2;3120:18;;;3113:30;-1:-1:-1;;;;;3159:18:7;;;3152:52;3221:18;;2153:74:4::1;2899:346:7::0;2153:74:4::1;2250:23;2246:180;;;-1:-1:-1::0;;;;;;2289:22:4::1;;::::0;;;2314::::1;2289;::::0;;;;;;;:47;;-1:-1:-1;;2289:47:4::1;::::0;;::::1;::::0;;1939:493::o;2246:180::-:1;-1:-1:-1::0;;;;;;2367:22:4::1;2392:23;2367:22:::0;;;:13:::1;:22;::::0;;;;:48;;-1:-1:-1;;2367:48:4::1;::::0;;1939:493::o;1209:201::-;1125:10;1113:23;;;;:11;:23;;;;;;;;1105:80;;;;-1:-1:-1;;;;;1105:80:4;;;;;;;:::i;:::-;1294:8:::1;1290:114;;;-1:-1:-1::0;;;;;1318:15:4;::::1;:8;:15:::0;;;::::1;::::0;;;;;;:22;;-1:-1:-1;;1318:22:4::1;1336:4;1318:22;::::0;;1939:493;;:::o;1290:114::-:1;-1:-1:-1::0;;;;;;1371:15:4::1;;::::0;;;1389:4:::1;1371:15;::::0;;;;;;;:22;;-1:-1:-1;;1371:22:4::1;::::0;;::::1;::::0;;1209:201::o;1416:517::-;969:10;960:8;:20;;;;;;;;;;;;;;:44;;-1:-1:-1;993:10:4;984:20;;;;:8;:20;;;;;;;;960:44;952:93;;;;-1:-1:-1;;;;;952:93:4;;3452:2:7;952:93:4;;;3434:21:7;3491:2;3471:18;;;3464:30;3530:34;3510:18;;;3503:62;-1:-1:-1;;;;;3581:18:7;;;3574:34;3625:19;;952:93:4;3250:400:7;952:93:4;-1:-1:-1;;;;;1518:22:4;::::1;1544:23;1518:22:::0;;;:13:::1;:22;::::0;;;;;;;::::1;;::::0;:49;::::1;;;;;;:::i;:::-;;1510:89;;;::::0;-1:-1:-1;;;;;1510:89:4;;3857:2:7;1510:89:4::1;::::0;::::1;3839:21:7::0;3896:2;3876:18;;;3869:30;3935:29;3915:18;;;3908:57;3982:18;;1510:89:4::1;3655:351:7::0;1510:89:4::1;1622:10;1613:8;:20:::0;;;::::1;::::0;;;;;;;::::1;;1609:318;;;-1:-1:-1::0;;;;;1649:22:4;;::::1;;::::0;;;:13:::1;:22;::::0;;;;;;:52;;-1:-1:-1;;1649:52:4::1;1674:27;1649:52;::::0;;1715:19:::1;::::0;;:52;;-1:-1:-1;;;;;1715:52:4;;:19;;;::::1;::::0;:44:::1;::::0;:52:::1;::::0;1760:6;;;;1715:52:::1;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;1416:517:::0;;;:::o;1609:318::-:1;-1:-1:-1::0;;;;;1798:22:4;;::::1;;::::0;;;:13:::1;:22;::::0;;;;;;:52;;-1:-1:-1;;1798:52:4::1;1823:27;1798:52;::::0;;1864:19:::1;::::0;;:52;;-1:-1:-1;;;;;1864:52:4;;:19;;;::::1;::::0;:44:::1;::::0;:52:::1;::::0;1909:6;;;;1864:52:::1;;:::i;2438:128::-:0;1125:10;1113:23;;;;:11;:23;;;;;;;;1105:80;;;;-1:-1:-1;;;;;1105:80:4;;;;;;;:::i;:::-;-1:-1:-1;;;;;2511:22:4::1;2536:23;2511:22:::0;;;:13:::1;:22;::::0;;;;:48;;-1:-1:-1;;2511:48:4::1;::::0;;2438:128::o;14:173:7:-;82:20;;-1:-1:-1;;;;;131:31:7;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:118::-;278:5;271:13;264:21;257:5;254:32;244:60;;300:1;297;290:12;244:60;192:118;:::o;315:315::-;380:6;388;441:2;429:9;420:7;416:23;412:32;409:52;;;457:1;454;447:12;409:52;480:29;499:9;480:29;:::i;:::-;470:39;;559:2;548:9;544:18;531:32;572:28;594:5;572:28;:::i;:::-;619:5;609:15;;;315:315;;;;;:::o;635:186::-;694:6;747:2;735:9;726:7;722:23;718:32;715:52;;;763:1;760;753:12;715:52;786:29;805:9;786:29;:::i;:::-;776:39;635:186;-1:-1:-1;;;635:186:7:o;1018:666::-;1098:6;1106;1114;1167:2;1155:9;1146:7;1142:23;1138:32;1135:52;;;1183:1;1180;1173:12;1135:52;1206:29;1225:9;1206:29;:::i;:::-;1196:39;-1:-1:-1;1286:2:7;1271:18;;1258:32;-1:-1:-1;;;;;1339:14:7;;;1336:34;;;1366:1;1363;1356:12;1336:34;1404:6;1393:9;1389:22;1379:32;;1449:7;1442:4;1438:2;1434:13;1430:27;1420:55;;1471:1;1468;1461:12;1420:55;1511:2;1498:16;1537:2;1529:6;1526:14;1523:34;;;1553:1;1550;1543:12;1523:34;1598:7;1593:2;1584:6;1580:2;1576:15;1572:24;1569:37;1566:57;;;1619:1;1616;1609:12;1566:57;1650:2;1646;1642:11;1632:21;;1672:6;1662:16;;;;;1018:666;;;;;:::o;1689:408::-;1891:2;1873:21;;;1930:2;1910:18;;;1903:30;1969:34;1964:2;1949:18;;1942:62;-1:-1:-1;;;;;2035:2:7;2020:18;;2013:42;2087:3;2072:19;;1689:408::o;2102:135::-;-1:-1:-1;;;;;2151:1:7;2144:39;;;2202:4;2199:1;2192:15;2226:4;;2216:15;2649:245;2716:6;2769:2;2757:9;2748:7;2744:23;2740:32;2737:52;;;2785:1;2782;2775:12;2737:52;2817:9;2811:16;2836:28;2858:5;2836:28;:::i;4011:390::-;4170:2;4159:9;4152:21;4209:6;4204:2;4193:9;4189:18;4182:34;4266:6;4258;4253:2;4242:9;4238:18;4225:48;4322:1;4293:22;;;4317:2;4289:31;;;4282:42;;;;4385:2;4364:15;;;-1:-1:-1;;4360:29:7;4345:45;4341:54;;4011:390;-1:-1:-1;4011:390:7:o",
  "source": "// SPDX-License-Identifier: CC-BY-4.0\npragma solidity >=0.4.22 <0.9.0;\n\ninterface IArbitration {\n    function hasVoteTimeExpired() external returns (bool);\n    function addSideAViewpointComment(string calldata _A) external;\n    function addSideBViewpointComment(string calldata _B) external;\n}\n\ncontract DisputeResolution {\n\n    mapping(address => bool) private partiesA;\n    mapping(address => bool) private partiesB;\n    mapping(address => bool) public arbitrators;\n    \n    enum DisputeStatus { NoDispute, PartyADispute, PartyBDispute, Resolved }\n\n    mapping(address => DisputeStatus) private disputeStatus;\n\n    IArbitration arbitrationContract;\n\n    constructor(address arbitrationAddress) {\n        arbitrationContract = IArbitration(arbitrationAddress);\n        //partyA = msg.sender;\n        //partyB = _partyB;\n        //arbitrator = _arbitrator;\n        //disputeStatus = DisputeStatus.NoDispute;\n    }\n\n    modifier onlyParties() {\n        require(partiesA[msg.sender] || partiesB[msg.sender], \"You are not a party to the contract.\");\n        _;\n    }\n\n    modifier onlyArbitrator() {\n        require(arbitrators[msg.sender], \"Only the arbitrator can perform this action.\");\n        _;\n    }\n\n    function addParty(address party,bool asPartyA) external onlyArbitrator {\n        if (asPartyA) {\n            partiesA[party] = true;\n        } else {\n            partiesB[party] = true;\n        }\n    }\n\n    function submitDispute(address dispute,string calldata reason) external onlyParties {\n        require(disputeStatus[dispute] == DisputeStatus.NoDispute, \"There is already a dispute.\");\n        if (partiesA[msg.sender]) {\n            disputeStatus[dispute] = DisputeStatus.PartyADispute;\n            arbitrationContract.addSideAViewpointComment(reason);\n        } else {\n            disputeStatus[dispute] = DisputeStatus.PartyBDispute;\n            arbitrationContract.addSideBViewpointComment(reason);\n        }\n    }\n\n    function resolveDispute(address dispute,bool resolvedInFavorOfPartyA) external onlyArbitrator {\n        require(disputeStatus[dispute] != DisputeStatus.NoDispute, \"There is no active dispute to resolve.\");\n        require(arbitrationContract.hasVoteTimeExpired(),\"voting has not expired\");\n        \n        if (resolvedInFavorOfPartyA) {\n            disputeStatus[dispute] = DisputeStatus.Resolved;\n        } else {\n            disputeStatus[dispute] = DisputeStatus.NoDispute;\n        }\n    }\n\n    function resetDispute(address dispute) external onlyArbitrator {\n        disputeStatus[dispute] = DisputeStatus.NoDispute;\n    }\n}\n",
  "sourcePath": "/Volumes/My Book/projects/pingleware-contracts/contracts/legal/DisputeReolution.sol",
  "ast": {
    "absolutePath": "project:/contracts/legal/DisputeReolution.sol",
    "exportedSymbols": {
      "DisputeResolution": [
        897
      ],
      "IArbitration": [
        691
      ]
    },
    "id": 898,
    "license": "CC-BY-4.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 675,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".22",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "38:32:4"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "IArbitration",
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": false,
        "id": 691,
        "linearizedBaseContracts": [
          691
        ],
        "name": "IArbitration",
        "nameLocation": "82:12:4",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "functionSelector": "9a8e813d",
            "id": 680,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "hasVoteTimeExpired",
            "nameLocation": "110:18:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 676,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "128:2:4"
            },
            "returnParameters": {
              "id": 679,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 678,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 680,
                  "src": "149:4:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 677,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "149:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "148:6:4"
            },
            "scope": 691,
            "src": "101:54:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "functionSelector": "25575cf8",
            "id": 685,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "addSideAViewpointComment",
            "nameLocation": "169:24:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 683,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 682,
                  "mutability": "mutable",
                  "name": "_A",
                  "nameLocation": "210:2:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 685,
                  "src": "194:18:4",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 681,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "194:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "193:20:4"
            },
            "returnParameters": {
              "id": 684,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "222:0:4"
            },
            "scope": 691,
            "src": "160:63:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "functionSelector": "366262e7",
            "id": 690,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "addSideBViewpointComment",
            "nameLocation": "237:24:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 688,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 687,
                  "mutability": "mutable",
                  "name": "_B",
                  "nameLocation": "278:2:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 690,
                  "src": "262:18:4",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 686,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "262:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "261:20:4"
            },
            "returnParameters": {
              "id": 689,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "290:0:4"
            },
            "scope": 691,
            "src": "228:63:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 898,
        "src": "72:221:4",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "DisputeResolution",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 897,
        "linearizedBaseContracts": [
          897
        ],
        "name": "DisputeResolution",
        "nameLocation": "304:17:4",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 695,
            "mutability": "mutable",
            "name": "partiesA",
            "nameLocation": "362:8:4",
            "nodeType": "VariableDeclaration",
            "scope": 897,
            "src": "329:41:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 694,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 692,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "337:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "329:24:4",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 693,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "348:4:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 699,
            "mutability": "mutable",
            "name": "partiesB",
            "nameLocation": "409:8:4",
            "nodeType": "VariableDeclaration",
            "scope": 897,
            "src": "376:41:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 698,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 696,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "384:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "376:24:4",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 697,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "395:4:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "functionSelector": "51d0ea37",
            "id": 703,
            "mutability": "mutable",
            "name": "arbitrators",
            "nameLocation": "455:11:4",
            "nodeType": "VariableDeclaration",
            "scope": 897,
            "src": "423:43:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 702,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 700,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "431:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "423:24:4",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 701,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "442:4:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "canonicalName": "DisputeResolution.DisputeStatus",
            "id": 708,
            "members": [
              {
                "id": 704,
                "name": "NoDispute",
                "nameLocation": "498:9:4",
                "nodeType": "EnumValue",
                "src": "498:9:4"
              },
              {
                "id": 705,
                "name": "PartyADispute",
                "nameLocation": "509:13:4",
                "nodeType": "EnumValue",
                "src": "509:13:4"
              },
              {
                "id": 706,
                "name": "PartyBDispute",
                "nameLocation": "524:13:4",
                "nodeType": "EnumValue",
                "src": "524:13:4"
              },
              {
                "id": 707,
                "name": "Resolved",
                "nameLocation": "539:8:4",
                "nodeType": "EnumValue",
                "src": "539:8:4"
              }
            ],
            "name": "DisputeStatus",
            "nameLocation": "482:13:4",
            "nodeType": "EnumDefinition",
            "src": "477:72:4"
          },
          {
            "constant": false,
            "id": 713,
            "mutability": "mutable",
            "name": "disputeStatus",
            "nameLocation": "597:13:4",
            "nodeType": "VariableDeclaration",
            "scope": 897,
            "src": "555:55:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_enum$_DisputeStatus_$708_$",
              "typeString": "mapping(address => enum DisputeResolution.DisputeStatus)"
            },
            "typeName": {
              "id": 712,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 709,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "563:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "555:33:4",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_enum$_DisputeStatus_$708_$",
                "typeString": "mapping(address => enum DisputeResolution.DisputeStatus)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 711,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 710,
                  "name": "DisputeStatus",
                  "nameLocations": [
                    "574:13:4"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 708,
                  "src": "574:13:4"
                },
                "referencedDeclaration": 708,
                "src": "574:13:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_DisputeStatus_$708",
                  "typeString": "enum DisputeResolution.DisputeStatus"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 716,
            "mutability": "mutable",
            "name": "arbitrationContract",
            "nameLocation": "630:19:4",
            "nodeType": "VariableDeclaration",
            "scope": 897,
            "src": "617:32:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IArbitration_$691",
              "typeString": "contract IArbitration"
            },
            "typeName": {
              "id": 715,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 714,
                "name": "IArbitration",
                "nameLocations": [
                  "617:12:4"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 691,
                "src": "617:12:4"
              },
              "referencedDeclaration": 691,
              "src": "617:12:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IArbitration_$691",
                "typeString": "contract IArbitration"
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 727,
              "nodeType": "Block",
              "src": "696:217:4",
              "statements": [
                {
                  "expression": {
                    "id": 725,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 721,
                      "name": "arbitrationContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 716,
                      "src": "706:19:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IArbitration_$691",
                        "typeString": "contract IArbitration"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 723,
                          "name": "arbitrationAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 718,
                          "src": "741:18:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 722,
                        "name": "IArbitration",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 691,
                        "src": "728:12:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IArbitration_$691_$",
                          "typeString": "type(contract IArbitration)"
                        }
                      },
                      "id": 724,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "728:32:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IArbitration_$691",
                        "typeString": "contract IArbitration"
                      }
                    },
                    "src": "706:54:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IArbitration_$691",
                      "typeString": "contract IArbitration"
                    }
                  },
                  "id": 726,
                  "nodeType": "ExpressionStatement",
                  "src": "706:54:4"
                }
              ]
            },
            "id": 728,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 719,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 718,
                  "mutability": "mutable",
                  "name": "arbitrationAddress",
                  "nameLocation": "676:18:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 728,
                  "src": "668:26:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 717,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "668:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "667:28:4"
            },
            "returnParameters": {
              "id": 720,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "696:0:4"
            },
            "scope": 897,
            "src": "656:257:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 744,
              "nodeType": "Block",
              "src": "942:121:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 739,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 731,
                            "name": "partiesA",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 695,
                            "src": "960:8:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 734,
                          "indexExpression": {
                            "expression": {
                              "id": 732,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "969:3:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 733,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "973:6:4",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "969:10:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "960:20:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "baseExpression": {
                            "id": 735,
                            "name": "partiesB",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 699,
                            "src": "984:8:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 738,
                          "indexExpression": {
                            "expression": {
                              "id": 736,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "993:3:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 737,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "997:6:4",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "993:10:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "984:20:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "960:44:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f7520617265206e6f74206120706172747920746f2074686520636f6e74726163742e",
                        "id": 740,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1006:38:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d617bf225a8c49134b33bac187422b6cbdcd547fc5ee2678f0c74d0d91394361",
                          "typeString": "literal_string \"You are not a party to the contract.\""
                        },
                        "value": "You are not a party to the contract."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d617bf225a8c49134b33bac187422b6cbdcd547fc5ee2678f0c74d0d91394361",
                          "typeString": "literal_string \"You are not a party to the contract.\""
                        }
                      ],
                      "id": 730,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "952:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 741,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "952:93:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 742,
                  "nodeType": "ExpressionStatement",
                  "src": "952:93:4"
                },
                {
                  "id": 743,
                  "nodeType": "PlaceholderStatement",
                  "src": "1055:1:4"
                }
              ]
            },
            "id": 745,
            "name": "onlyParties",
            "nameLocation": "928:11:4",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 729,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "939:2:4"
            },
            "src": "919:144:4",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 756,
              "nodeType": "Block",
              "src": "1095:108:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 748,
                          "name": "arbitrators",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 703,
                          "src": "1113:11:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 751,
                        "indexExpression": {
                          "expression": {
                            "id": 749,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1125:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 750,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1129:6:4",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1125:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1113:23:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c79207468652061726269747261746f722063616e20706572666f726d207468697320616374696f6e2e",
                        "id": 752,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1138:46:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d786a1d49d0128888c74c94e32a1f61a5a4b1fcb321f05f64a05bb13bbb188b1",
                          "typeString": "literal_string \"Only the arbitrator can perform this action.\""
                        },
                        "value": "Only the arbitrator can perform this action."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d786a1d49d0128888c74c94e32a1f61a5a4b1fcb321f05f64a05bb13bbb188b1",
                          "typeString": "literal_string \"Only the arbitrator can perform this action.\""
                        }
                      ],
                      "id": 747,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1105:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 753,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1105:80:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 754,
                  "nodeType": "ExpressionStatement",
                  "src": "1105:80:4"
                },
                {
                  "id": 755,
                  "nodeType": "PlaceholderStatement",
                  "src": "1195:1:4"
                }
              ]
            },
            "id": 757,
            "name": "onlyArbitrator",
            "nameLocation": "1078:14:4",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 746,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1092:2:4"
            },
            "src": "1069:134:4",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 782,
              "nodeType": "Block",
              "src": "1280:130:4",
              "statements": [
                {
                  "condition": {
                    "id": 766,
                    "name": "asPartyA",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 761,
                    "src": "1294:8:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 780,
                    "nodeType": "Block",
                    "src": "1357:47:4",
                    "statements": [
                      {
                        "expression": {
                          "id": 778,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 774,
                              "name": "partiesB",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 699,
                              "src": "1371:8:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 776,
                            "indexExpression": {
                              "id": 775,
                              "name": "party",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 759,
                              "src": "1380:5:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1371:15:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 777,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1389:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "1371:22:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 779,
                        "nodeType": "ExpressionStatement",
                        "src": "1371:22:4"
                      }
                    ]
                  },
                  "id": 781,
                  "nodeType": "IfStatement",
                  "src": "1290:114:4",
                  "trueBody": {
                    "id": 773,
                    "nodeType": "Block",
                    "src": "1304:47:4",
                    "statements": [
                      {
                        "expression": {
                          "id": 771,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 767,
                              "name": "partiesA",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 695,
                              "src": "1318:8:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 769,
                            "indexExpression": {
                              "id": 768,
                              "name": "party",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 759,
                              "src": "1327:5:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1318:15:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 770,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1336:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "1318:22:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 772,
                        "nodeType": "ExpressionStatement",
                        "src": "1318:22:4"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "57c1d4ff",
            "id": 783,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 764,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 763,
                  "name": "onlyArbitrator",
                  "nameLocations": [
                    "1265:14:4"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 757,
                  "src": "1265:14:4"
                },
                "nodeType": "ModifierInvocation",
                "src": "1265:14:4"
              }
            ],
            "name": "addParty",
            "nameLocation": "1218:8:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 762,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 759,
                  "mutability": "mutable",
                  "name": "party",
                  "nameLocation": "1235:5:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 783,
                  "src": "1227:13:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 758,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1227:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 761,
                  "mutability": "mutable",
                  "name": "asPartyA",
                  "nameLocation": "1246:8:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 783,
                  "src": "1241:13:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 760,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1241:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1226:29:4"
            },
            "returnParameters": {
              "id": 765,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1280:0:4"
            },
            "scope": 897,
            "src": "1209:201:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 835,
              "nodeType": "Block",
              "src": "1500:433:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_DisputeStatus_$708",
                          "typeString": "enum DisputeResolution.DisputeStatus"
                        },
                        "id": 798,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 793,
                            "name": "disputeStatus",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 713,
                            "src": "1518:13:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_enum$_DisputeStatus_$708_$",
                              "typeString": "mapping(address => enum DisputeResolution.DisputeStatus)"
                            }
                          },
                          "id": 795,
                          "indexExpression": {
                            "id": 794,
                            "name": "dispute",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 785,
                            "src": "1532:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1518:22:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_DisputeStatus_$708",
                            "typeString": "enum DisputeResolution.DisputeStatus"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 796,
                            "name": "DisputeStatus",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 708,
                            "src": "1544:13:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_DisputeStatus_$708_$",
                              "typeString": "type(enum DisputeResolution.DisputeStatus)"
                            }
                          },
                          "id": 797,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "1558:9:4",
                          "memberName": "NoDispute",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 704,
                          "src": "1544:23:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_DisputeStatus_$708",
                            "typeString": "enum DisputeResolution.DisputeStatus"
                          }
                        },
                        "src": "1518:49:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546865726520697320616c7265616479206120646973707574652e",
                        "id": 799,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1569:29:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8cc9397048ec5a2ec9c3686905c84c018a6acefca7d85059203dc478a5ba1a28",
                          "typeString": "literal_string \"There is already a dispute.\""
                        },
                        "value": "There is already a dispute."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8cc9397048ec5a2ec9c3686905c84c018a6acefca7d85059203dc478a5ba1a28",
                          "typeString": "literal_string \"There is already a dispute.\""
                        }
                      ],
                      "id": 792,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1510:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 800,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1510:89:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 801,
                  "nodeType": "ExpressionStatement",
                  "src": "1510:89:4"
                },
                {
                  "condition": {
                    "baseExpression": {
                      "id": 802,
                      "name": "partiesA",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 695,
                      "src": "1613:8:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 805,
                    "indexExpression": {
                      "expression": {
                        "id": 803,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "1622:3:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 804,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1626:6:4",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "1622:10:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1613:20:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 833,
                    "nodeType": "Block",
                    "src": "1784:143:4",
                    "statements": [
                      {
                        "expression": {
                          "id": 825,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 820,
                              "name": "disputeStatus",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 713,
                              "src": "1798:13:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_enum$_DisputeStatus_$708_$",
                                "typeString": "mapping(address => enum DisputeResolution.DisputeStatus)"
                              }
                            },
                            "id": 822,
                            "indexExpression": {
                              "id": 821,
                              "name": "dispute",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 785,
                              "src": "1812:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1798:22:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_DisputeStatus_$708",
                              "typeString": "enum DisputeResolution.DisputeStatus"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 823,
                              "name": "DisputeStatus",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 708,
                              "src": "1823:13:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_DisputeStatus_$708_$",
                                "typeString": "type(enum DisputeResolution.DisputeStatus)"
                              }
                            },
                            "id": 824,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "1837:13:4",
                            "memberName": "PartyBDispute",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 706,
                            "src": "1823:27:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_DisputeStatus_$708",
                              "typeString": "enum DisputeResolution.DisputeStatus"
                            }
                          },
                          "src": "1798:52:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_DisputeStatus_$708",
                            "typeString": "enum DisputeResolution.DisputeStatus"
                          }
                        },
                        "id": 826,
                        "nodeType": "ExpressionStatement",
                        "src": "1798:52:4"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 830,
                              "name": "reason",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 787,
                              "src": "1909:6:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_calldata_ptr",
                                "typeString": "string calldata"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_calldata_ptr",
                                "typeString": "string calldata"
                              }
                            ],
                            "expression": {
                              "id": 827,
                              "name": "arbitrationContract",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 716,
                              "src": "1864:19:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IArbitration_$691",
                                "typeString": "contract IArbitration"
                              }
                            },
                            "id": 829,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1884:24:4",
                            "memberName": "addSideBViewpointComment",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 690,
                            "src": "1864:44:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory) external"
                            }
                          },
                          "id": 831,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1864:52:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 832,
                        "nodeType": "ExpressionStatement",
                        "src": "1864:52:4"
                      }
                    ]
                  },
                  "id": 834,
                  "nodeType": "IfStatement",
                  "src": "1609:318:4",
                  "trueBody": {
                    "id": 819,
                    "nodeType": "Block",
                    "src": "1635:143:4",
                    "statements": [
                      {
                        "expression": {
                          "id": 811,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 806,
                              "name": "disputeStatus",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 713,
                              "src": "1649:13:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_enum$_DisputeStatus_$708_$",
                                "typeString": "mapping(address => enum DisputeResolution.DisputeStatus)"
                              }
                            },
                            "id": 808,
                            "indexExpression": {
                              "id": 807,
                              "name": "dispute",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 785,
                              "src": "1663:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1649:22:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_DisputeStatus_$708",
                              "typeString": "enum DisputeResolution.DisputeStatus"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 809,
                              "name": "DisputeStatus",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 708,
                              "src": "1674:13:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_DisputeStatus_$708_$",
                                "typeString": "type(enum DisputeResolution.DisputeStatus)"
                              }
                            },
                            "id": 810,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "1688:13:4",
                            "memberName": "PartyADispute",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 705,
                            "src": "1674:27:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_DisputeStatus_$708",
                              "typeString": "enum DisputeResolution.DisputeStatus"
                            }
                          },
                          "src": "1649:52:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_DisputeStatus_$708",
                            "typeString": "enum DisputeResolution.DisputeStatus"
                          }
                        },
                        "id": 812,
                        "nodeType": "ExpressionStatement",
                        "src": "1649:52:4"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 816,
                              "name": "reason",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 787,
                              "src": "1760:6:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_calldata_ptr",
                                "typeString": "string calldata"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_calldata_ptr",
                                "typeString": "string calldata"
                              }
                            ],
                            "expression": {
                              "id": 813,
                              "name": "arbitrationContract",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 716,
                              "src": "1715:19:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IArbitration_$691",
                                "typeString": "contract IArbitration"
                              }
                            },
                            "id": 815,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1735:24:4",
                            "memberName": "addSideAViewpointComment",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 685,
                            "src": "1715:44:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory) external"
                            }
                          },
                          "id": 817,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1715:52:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 818,
                        "nodeType": "ExpressionStatement",
                        "src": "1715:52:4"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "8d1ff7cc",
            "id": 836,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 790,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 789,
                  "name": "onlyParties",
                  "nameLocations": [
                    "1488:11:4"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 745,
                  "src": "1488:11:4"
                },
                "nodeType": "ModifierInvocation",
                "src": "1488:11:4"
              }
            ],
            "name": "submitDispute",
            "nameLocation": "1425:13:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 788,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 785,
                  "mutability": "mutable",
                  "name": "dispute",
                  "nameLocation": "1447:7:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 836,
                  "src": "1439:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 784,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1439:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 787,
                  "mutability": "mutable",
                  "name": "reason",
                  "nameLocation": "1471:6:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 836,
                  "src": "1455:22:4",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 786,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1455:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1438:40:4"
            },
            "returnParameters": {
              "id": 791,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1500:0:4"
            },
            "scope": 897,
            "src": "1416:517:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 880,
              "nodeType": "Block",
              "src": "2033:399:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_DisputeStatus_$708",
                          "typeString": "enum DisputeResolution.DisputeStatus"
                        },
                        "id": 851,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 846,
                            "name": "disputeStatus",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 713,
                            "src": "2051:13:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_enum$_DisputeStatus_$708_$",
                              "typeString": "mapping(address => enum DisputeResolution.DisputeStatus)"
                            }
                          },
                          "id": 848,
                          "indexExpression": {
                            "id": 847,
                            "name": "dispute",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 838,
                            "src": "2065:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2051:22:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_DisputeStatus_$708",
                            "typeString": "enum DisputeResolution.DisputeStatus"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "expression": {
                            "id": 849,
                            "name": "DisputeStatus",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 708,
                            "src": "2077:13:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_DisputeStatus_$708_$",
                              "typeString": "type(enum DisputeResolution.DisputeStatus)"
                            }
                          },
                          "id": 850,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "2091:9:4",
                          "memberName": "NoDispute",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 704,
                          "src": "2077:23:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_DisputeStatus_$708",
                            "typeString": "enum DisputeResolution.DisputeStatus"
                          }
                        },
                        "src": "2051:49:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5468657265206973206e6f20616374697665206469737075746520746f207265736f6c76652e",
                        "id": 852,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2102:40:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_68890c23bff95f8d142d42899cc9d85496f99eca7868c2fe006680acf72dd6ed",
                          "typeString": "literal_string \"There is no active dispute to resolve.\""
                        },
                        "value": "There is no active dispute to resolve."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_68890c23bff95f8d142d42899cc9d85496f99eca7868c2fe006680acf72dd6ed",
                          "typeString": "literal_string \"There is no active dispute to resolve.\""
                        }
                      ],
                      "id": 845,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2043:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 853,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2043:100:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 854,
                  "nodeType": "ExpressionStatement",
                  "src": "2043:100:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 856,
                            "name": "arbitrationContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 716,
                            "src": "2161:19:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IArbitration_$691",
                              "typeString": "contract IArbitration"
                            }
                          },
                          "id": 857,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2181:18:4",
                          "memberName": "hasVoteTimeExpired",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 680,
                          "src": "2161:38:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$__$returns$_t_bool_$",
                            "typeString": "function () external returns (bool)"
                          }
                        },
                        "id": 858,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2161:40:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "766f74696e6720686173206e6f742065787069726564",
                        "id": 859,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2202:24:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0ec6819cbe4b75da2d44be1fd436ebf8523837a4b0ffe30e5e0a41cb7df2d738",
                          "typeString": "literal_string \"voting has not expired\""
                        },
                        "value": "voting has not expired"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0ec6819cbe4b75da2d44be1fd436ebf8523837a4b0ffe30e5e0a41cb7df2d738",
                          "typeString": "literal_string \"voting has not expired\""
                        }
                      ],
                      "id": 855,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2153:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 860,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2153:74:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 861,
                  "nodeType": "ExpressionStatement",
                  "src": "2153:74:4"
                },
                {
                  "condition": {
                    "id": 862,
                    "name": "resolvedInFavorOfPartyA",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 840,
                    "src": "2250:23:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 878,
                    "nodeType": "Block",
                    "src": "2353:73:4",
                    "statements": [
                      {
                        "expression": {
                          "id": 876,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 871,
                              "name": "disputeStatus",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 713,
                              "src": "2367:13:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_enum$_DisputeStatus_$708_$",
                                "typeString": "mapping(address => enum DisputeResolution.DisputeStatus)"
                              }
                            },
                            "id": 873,
                            "indexExpression": {
                              "id": 872,
                              "name": "dispute",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 838,
                              "src": "2381:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2367:22:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_DisputeStatus_$708",
                              "typeString": "enum DisputeResolution.DisputeStatus"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 874,
                              "name": "DisputeStatus",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 708,
                              "src": "2392:13:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_DisputeStatus_$708_$",
                                "typeString": "type(enum DisputeResolution.DisputeStatus)"
                              }
                            },
                            "id": 875,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "2406:9:4",
                            "memberName": "NoDispute",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 704,
                            "src": "2392:23:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_DisputeStatus_$708",
                              "typeString": "enum DisputeResolution.DisputeStatus"
                            }
                          },
                          "src": "2367:48:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_DisputeStatus_$708",
                            "typeString": "enum DisputeResolution.DisputeStatus"
                          }
                        },
                        "id": 877,
                        "nodeType": "ExpressionStatement",
                        "src": "2367:48:4"
                      }
                    ]
                  },
                  "id": 879,
                  "nodeType": "IfStatement",
                  "src": "2246:180:4",
                  "trueBody": {
                    "id": 870,
                    "nodeType": "Block",
                    "src": "2275:72:4",
                    "statements": [
                      {
                        "expression": {
                          "id": 868,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 863,
                              "name": "disputeStatus",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 713,
                              "src": "2289:13:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_enum$_DisputeStatus_$708_$",
                                "typeString": "mapping(address => enum DisputeResolution.DisputeStatus)"
                              }
                            },
                            "id": 865,
                            "indexExpression": {
                              "id": 864,
                              "name": "dispute",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 838,
                              "src": "2303:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2289:22:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_DisputeStatus_$708",
                              "typeString": "enum DisputeResolution.DisputeStatus"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 866,
                              "name": "DisputeStatus",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 708,
                              "src": "2314:13:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_DisputeStatus_$708_$",
                                "typeString": "type(enum DisputeResolution.DisputeStatus)"
                              }
                            },
                            "id": 867,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "2328:8:4",
                            "memberName": "Resolved",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 707,
                            "src": "2314:22:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_DisputeStatus_$708",
                              "typeString": "enum DisputeResolution.DisputeStatus"
                            }
                          },
                          "src": "2289:47:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_DisputeStatus_$708",
                            "typeString": "enum DisputeResolution.DisputeStatus"
                          }
                        },
                        "id": 869,
                        "nodeType": "ExpressionStatement",
                        "src": "2289:47:4"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "3738de3f",
            "id": 881,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 843,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 842,
                  "name": "onlyArbitrator",
                  "nameLocations": [
                    "2018:14:4"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 757,
                  "src": "2018:14:4"
                },
                "nodeType": "ModifierInvocation",
                "src": "2018:14:4"
              }
            ],
            "name": "resolveDispute",
            "nameLocation": "1948:14:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 841,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 838,
                  "mutability": "mutable",
                  "name": "dispute",
                  "nameLocation": "1971:7:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 881,
                  "src": "1963:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 837,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1963:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 840,
                  "mutability": "mutable",
                  "name": "resolvedInFavorOfPartyA",
                  "nameLocation": "1984:23:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 881,
                  "src": "1979:28:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 839,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1979:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1962:46:4"
            },
            "returnParameters": {
              "id": 844,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2033:0:4"
            },
            "scope": 897,
            "src": "1939:493:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 895,
              "nodeType": "Block",
              "src": "2501:65:4",
              "statements": [
                {
                  "expression": {
                    "id": 893,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 888,
                        "name": "disputeStatus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 713,
                        "src": "2511:13:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_enum$_DisputeStatus_$708_$",
                          "typeString": "mapping(address => enum DisputeResolution.DisputeStatus)"
                        }
                      },
                      "id": 890,
                      "indexExpression": {
                        "id": 889,
                        "name": "dispute",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 883,
                        "src": "2525:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2511:22:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_DisputeStatus_$708",
                        "typeString": "enum DisputeResolution.DisputeStatus"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 891,
                        "name": "DisputeStatus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 708,
                        "src": "2536:13:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_DisputeStatus_$708_$",
                          "typeString": "type(enum DisputeResolution.DisputeStatus)"
                        }
                      },
                      "id": 892,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "2550:9:4",
                      "memberName": "NoDispute",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 704,
                      "src": "2536:23:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_DisputeStatus_$708",
                        "typeString": "enum DisputeResolution.DisputeStatus"
                      }
                    },
                    "src": "2511:48:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_DisputeStatus_$708",
                      "typeString": "enum DisputeResolution.DisputeStatus"
                    }
                  },
                  "id": 894,
                  "nodeType": "ExpressionStatement",
                  "src": "2511:48:4"
                }
              ]
            },
            "functionSelector": "fb833b33",
            "id": 896,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 886,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 885,
                  "name": "onlyArbitrator",
                  "nameLocations": [
                    "2486:14:4"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 757,
                  "src": "2486:14:4"
                },
                "nodeType": "ModifierInvocation",
                "src": "2486:14:4"
              }
            ],
            "name": "resetDispute",
            "nameLocation": "2447:12:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 884,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 883,
                  "mutability": "mutable",
                  "name": "dispute",
                  "nameLocation": "2468:7:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 896,
                  "src": "2460:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 882,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2460:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2459:17:4"
            },
            "returnParameters": {
              "id": 887,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2501:0:4"
            },
            "scope": 897,
            "src": "2438:128:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 898,
        "src": "295:2273:4",
        "usedErrors": []
      }
    ],
    "src": "38:2531:4"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.18+commit.87f61d96.Emscripten.clang"
  },
  "networks": {
    "1697930746463": {
      "events": {},
      "links": {},
      "address": "0x83f6E9E079A813FC50C1A991a2e6f4Ae37b5dD78",
      "transactionHash": "0xd10e548633cfa80b931a892cda5431b5728b177922030e9b506d96963d44af87"
    }
  },
  "schemaVersion": "3.4.12",
  "updatedAt": "2023-10-24T12:20:00.304Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}