{
  "contractName": "NFTCollection",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_nftContractAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        }
      ],
      "name": "NFTListed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "NFTUnlisted",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "nftContract",
      "outputs": [
        {
          "internalType": "contract IERC721",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "nfts",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "forSale",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        }
      ],
      "name": "listNFTForSale",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "unlistNFT",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "purchaseNFT",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function",
      "payable": true
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_nftContractAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"NFTListed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"NFTUnlisted\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"listNFTForSale\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nftContract\",\"outputs\":[{\"internalType\":\"contract IERC721\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"nfts\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"forSale\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"purchaseNFT\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"unlistNFT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/nft/NFTCollection.sol\":\"NFTCollection\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"project:/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xf8daa3ffe4e249c311bf05a300a56682c0470a5f0aa2402cd72ee7624476c3da\",\"license\":\"CC-BY-4.0\",\"urls\":[\"bzz-raw://d777dc785170daa1f5dbcd2446f01579e02ca85d6cd51dbd150cecf09f119e64\",\"dweb:/ipfs/QmYHX6F5pery5K3JAuAnGjDAXF59Run52CckV6fjmXpMbc\"]},\"project:/contracts/interfaces/IERC721.sol\":{\"keccak256\":\"0xa54368d218445f5c9be1869695c8d941682da51433eba183fb5b2bb3b1fe7805\",\"license\":\"CC-BY-4.0\",\"urls\":[\"bzz-raw://4d2b8c4ff01819ca0da61ec086efa784d4a2e80522c5fddc5af3356690e10882\",\"dweb:/ipfs/QmbNbt5SLCYySAqhZyp2fYqiqVUeNRamHtve5hiDQ3wVfG\"]},\"project:/contracts/nft/NFTCollection.sol\":{\"keccak256\":\"0x3aacd84de260271823a56b2e29d1734deb0ea825b21d72f00b9f5931d7ac8459\",\"license\":\"BSL-1.1\",\"urls\":[\"bzz-raw://4a20021413b13fea88a1f42db4e82a103dcfeddb39ba45cc72e3144263a0a467\",\"dweb:/ipfs/QmeYxgKyqfNotYqhSWj1xkukNxZNN6e9SczvyUGkVGHUaX\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506040516106ab3803806106ab83398101604081905261002f91610054565b60008054600160a060020a031916600160a060020a0392909216919091179055610084565b60006020828403121561006657600080fd5b8151600160a060020a038116811461007d57600080fd5b9392505050565b610618806100936000396000f3fe60806040526004361061004d5760e060020a6000350463150bde038114610052578063265aa62114610067578063961f0944146100e6578063b2733b3914610106578063d56d229d14610126575b600080fd5b610065610060366004610543565b61015e565b005b34801561007357600080fd5b506100b7610082366004610543565b60016020819052600091825260409091208054918101546002820154600390920154600160a060020a03909116919060ff1684565b60408051948552600160a060020a03909316602085015291830152151560608201526080015b60405180910390f35b3480156100f257600080fd5b50610065610101366004610543565b6102fa565b34801561011257600080fd5b5061006561012136600461055c565b6103aa565b34801561013257600080fd5b5060005461014690600160a060020a031681565b604051600160a060020a0390911681526020016100dd565b6000818152600160205260409020600381015460ff166101c25760405160e560020a62461bcd0281526020600482015260146024820152606160020a7327232a1034b9903737ba103337b91039b0b632970260448201526064015b60405180910390fd5b80600201543410156102175760405160e560020a62461bcd0281526020600482015260186024820152604160020a7724b739bab33334b1b4b2b73a10333ab732399039b2b73a170260448201526064016101b9565b60005460405160e160020a632142170702815230600482015233602482015260448101849052600160a060020a03909116906342842e0e90606401600060405180830381600087803b15801561026c57600080fd5b505af1158015610280573d6000803e3d6000fd5b5050506001820154604051600160a060020a0390911691503480156108fc02916000818181858888f193505050501580156102bf573d6000803e3d6000fd5b5050600090815260016020819052604082208281559081018054600160a060020a03191690556002810191909155600301805460ff19169055565b60008181526001602081905260409091200154600160a060020a031633146103375760405160e560020a62461bcd0281526004016101b99061057e565b60008181526001602081905260408083208381559182018054600160a060020a03191690556002820192909255600301805460ff19169055517fcd14eb7ebf273ed59a9fd1cf8651f3f40d9a04355b3511376f0d17b37ba224ff9061039f9083815260200190565b60405180910390a150565b60005460405160e160020a6331a9108f028152600481018490523391600160a060020a031690636352211e90602401602060405180830381865afa1580156103f6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061041a91906105b2565b600160a060020a0316146104435760405160e560020a62461bcd0281526004016101b99061057e565b600081116104965760405160e560020a62461bcd02815260206004820152601c60248201527f5072696365206d7573742062652067726561746572207468616e20300000000060448201526064016101b9565b6040805160808101825283815233602080830191825282840185815260016060850181815260008981528285528790209551865593519085018054600160a060020a031916600160a060020a0390921691909117905551600284015590516003909201805460ff19169215159290921790915581518481529081018390527fa6cd73580a273eec6c1026108f6b63479fbaef5356dde4ff43e4b38dd187485f910160405180910390a15050565b60006020828403121561055557600080fd5b5035919050565b6000806040838503121561056f57600080fd5b50508035926020909101359150565b6020808252601790820152604960020a762cb7ba903237b713ba1037bbb7103a3434b99027232a1702604082015260600190565b6000602082840312156105c457600080fd5b8151600160a060020a03811681146105db57600080fd5b939250505056fea2646970667358221220d9cde9de8179ff2850ec5a682f6eff462c36bec32724b805798645b11f699ee364736f6c63430008120033",
  "deployedBytecode": "0x60806040526004361061004d5760e060020a6000350463150bde038114610052578063265aa62114610067578063961f0944146100e6578063b2733b3914610106578063d56d229d14610126575b600080fd5b610065610060366004610543565b61015e565b005b34801561007357600080fd5b506100b7610082366004610543565b60016020819052600091825260409091208054918101546002820154600390920154600160a060020a03909116919060ff1684565b60408051948552600160a060020a03909316602085015291830152151560608201526080015b60405180910390f35b3480156100f257600080fd5b50610065610101366004610543565b6102fa565b34801561011257600080fd5b5061006561012136600461055c565b6103aa565b34801561013257600080fd5b5060005461014690600160a060020a031681565b604051600160a060020a0390911681526020016100dd565b6000818152600160205260409020600381015460ff166101c25760405160e560020a62461bcd0281526020600482015260146024820152606160020a7327232a1034b9903737ba103337b91039b0b632970260448201526064015b60405180910390fd5b80600201543410156102175760405160e560020a62461bcd0281526020600482015260186024820152604160020a7724b739bab33334b1b4b2b73a10333ab732399039b2b73a170260448201526064016101b9565b60005460405160e160020a632142170702815230600482015233602482015260448101849052600160a060020a03909116906342842e0e90606401600060405180830381600087803b15801561026c57600080fd5b505af1158015610280573d6000803e3d6000fd5b5050506001820154604051600160a060020a0390911691503480156108fc02916000818181858888f193505050501580156102bf573d6000803e3d6000fd5b5050600090815260016020819052604082208281559081018054600160a060020a03191690556002810191909155600301805460ff19169055565b60008181526001602081905260409091200154600160a060020a031633146103375760405160e560020a62461bcd0281526004016101b99061057e565b60008181526001602081905260408083208381559182018054600160a060020a03191690556002820192909255600301805460ff19169055517fcd14eb7ebf273ed59a9fd1cf8651f3f40d9a04355b3511376f0d17b37ba224ff9061039f9083815260200190565b60405180910390a150565b60005460405160e160020a6331a9108f028152600481018490523391600160a060020a031690636352211e90602401602060405180830381865afa1580156103f6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061041a91906105b2565b600160a060020a0316146104435760405160e560020a62461bcd0281526004016101b99061057e565b600081116104965760405160e560020a62461bcd02815260206004820152601c60248201527f5072696365206d7573742062652067726561746572207468616e20300000000060448201526064016101b9565b6040805160808101825283815233602080830191825282840185815260016060850181815260008981528285528790209551865593519085018054600160a060020a031916600160a060020a0390921691909117905551600284015590516003909201805460ff19169215159290921790915581518481529081018390527fa6cd73580a273eec6c1026108f6b63479fbaef5356dde4ff43e4b38dd187485f910160405180910390a15050565b60006020828403121561055557600080fd5b5035919050565b6000806040838503121561056f57600080fd5b50508035926020909101359150565b6020808252601790820152604960020a762cb7ba903237b713ba1037bbb7103a3434b99027232a1702604082015260600190565b6000602082840312156105c457600080fd5b8151600160a060020a03811681146105db57600080fd5b939250505056fea2646970667358221220d9cde9de8179ff2850ec5a682f6eff462c36bec32724b805798645b11f699ee364736f6c63430008120033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:306:5",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:5",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "95:209:5",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "141:16:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "150:1:5",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "153:1:5",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "143:6:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "143:12:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "143:12:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "116:7:5"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "125:9:5"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "112:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "112:23:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "137:2:5",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "108:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "108:32:5"
                  },
                  "nodeType": "YulIf",
                  "src": "105:52:5"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "166:29:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "185:9:5"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "179:5:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "179:16:5"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "170:5:5",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "258:16:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "267:1:5",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "270:1:5",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "260:6:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "260:12:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "260:12:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "217:5:5"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "228:5:5"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "243:1:5",
                                        "type": "",
                                        "value": "2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "246:3:5",
                                        "type": "",
                                        "value": "160"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "exp",
                                      "nodeType": "YulIdentifier",
                                      "src": "239:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "239:11:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "252:1:5",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "235:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "235:19:5"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "224:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "224:31:5"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "214:2:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "214:42:5"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "207:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "207:50:5"
                  },
                  "nodeType": "YulIf",
                  "src": "204:70:5"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "283:15:5",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "293:5:5"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "283:6:5"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "61:9:5",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "72:7:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "84:6:5",
                "type": ""
              }
            ],
            "src": "14:290:5"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(exp(2, 160), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n}",
      "id": 5,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:3625:5",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:5",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "84:110:5",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "130:16:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "139:1:5",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "142:1:5",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "132:6:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "132:12:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "132:12:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "105:7:5"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "114:9:5"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "101:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "101:23:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "126:2:5",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "97:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "97:32:5"
                  },
                  "nodeType": "YulIf",
                  "src": "94:52:5"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "155:33:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "178:9:5"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "165:12:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "165:23:5"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "155:6:5"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "50:9:5",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "61:7:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "73:6:5",
                "type": ""
              }
            ],
            "src": "14:180:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "378:248:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "388:27:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "400:9:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "411:3:5",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "396:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "396:19:5"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "388:4:5"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "431:9:5"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "442:6:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "424:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "424:25:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "424:25:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "469:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "480:2:5",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "465:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "465:18:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "489:6:5"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "505:1:5",
                                    "type": "",
                                    "value": "2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "508:3:5",
                                    "type": "",
                                    "value": "160"
                                  }
                                ],
                                "functionName": {
                                  "name": "exp",
                                  "nodeType": "YulIdentifier",
                                  "src": "501:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "501:11:5"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "514:1:5",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "497:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "497:19:5"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "485:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "485:32:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "458:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "458:60:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "458:60:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "538:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "549:2:5",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "534:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "534:18:5"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "554:6:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "527:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "527:34:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "527:34:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "581:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "592:2:5",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "577:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "577:18:5"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value3",
                                "nodeType": "YulIdentifier",
                                "src": "611:6:5"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "604:6:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "604:14:5"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "597:6:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "597:22:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "570:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "570:50:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "570:50:5"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_address_t_uint256_t_bool__to_t_uint256_t_address_t_uint256_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "323:9:5",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "334:6:5",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "342:6:5",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "350:6:5",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "358:6:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "369:4:5",
                "type": ""
              }
            ],
            "src": "199:427:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "718:161:5",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "764:16:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "773:1:5",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "776:1:5",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "766:6:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "766:12:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "766:12:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "739:7:5"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "748:9:5"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "735:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "735:23:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "760:2:5",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "731:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "731:32:5"
                  },
                  "nodeType": "YulIf",
                  "src": "728:52:5"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "789:33:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "812:9:5"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "799:12:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "799:23:5"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "789:6:5"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "831:42:5",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "858:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "869:2:5",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "854:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "854:18:5"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "841:12:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "841:32:5"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "831:6:5"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "676:9:5",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "687:7:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "699:6:5",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "707:6:5",
                "type": ""
              }
            ],
            "src": "631:248:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1000:102:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1010:26:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1022:9:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1033:2:5",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1018:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1018:18:5"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1010:4:5"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1052:9:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1067:6:5"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1083:1:5",
                                    "type": "",
                                    "value": "2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1086:3:5",
                                    "type": "",
                                    "value": "160"
                                  }
                                ],
                                "functionName": {
                                  "name": "exp",
                                  "nodeType": "YulIdentifier",
                                  "src": "1079:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1079:11:5"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1092:1:5",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "1075:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1075:19:5"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1063:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1063:32:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1045:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1045:51:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1045:51:5"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_IERC721_$278__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "969:9:5",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "980:6:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "991:4:5",
                "type": ""
              }
            ],
            "src": "884:218:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1281:170:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1298:9:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1309:2:5",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1291:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1291:21:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1291:21:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1332:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1343:2:5",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1328:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1328:18:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1348:2:5",
                        "type": "",
                        "value": "20"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1321:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1321:30:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1321:30:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1371:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1382:2:5",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1367:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1367:18:5"
                      },
                      {
                        "hexValue": "4e4654206973206e6f7420666f722073616c652e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1387:22:5",
                        "type": "",
                        "value": "NFT is not for sale."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1360:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1360:50:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1360:50:5"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1419:26:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1431:9:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1442:2:5",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1427:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1427:18:5"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1419:4:5"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_226a6a462c2c4b49b29c4cf0f7bf9fc27b240ead3b653cec4e9cb8c4f8723dfe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1258:9:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1272:4:5",
                "type": ""
              }
            ],
            "src": "1107:344:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1630:174:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1647:9:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1658:2:5",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1640:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1640:21:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1640:21:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1681:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1692:2:5",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1677:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1677:18:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1697:2:5",
                        "type": "",
                        "value": "24"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1670:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1670:30:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1670:30:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1720:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1731:2:5",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1716:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1716:18:5"
                      },
                      {
                        "hexValue": "496e73756666696369656e742066756e64732073656e742e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1736:26:5",
                        "type": "",
                        "value": "Insufficient funds sent."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1709:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1709:54:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1709:54:5"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1772:26:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1784:9:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1795:2:5",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1780:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1780:18:5"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1772:4:5"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_78dbdd222de53a46dba3b77c13845f9b482f3ef3c1be1429d39da0b1c08c5688__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1607:9:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1621:4:5",
                "type": ""
              }
            ],
            "src": "1456:348:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1966:218:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1976:26:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1988:9:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1999:2:5",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1984:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1984:18:5"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1976:4:5"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2011:29:5",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2029:1:5",
                            "type": "",
                            "value": "2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2032:3:5",
                            "type": "",
                            "value": "160"
                          }
                        ],
                        "functionName": {
                          "name": "exp",
                          "nodeType": "YulIdentifier",
                          "src": "2025:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2025:11:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2038:1:5",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "2021:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2021:19:5"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "2015:2:5",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2056:9:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2071:6:5"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "2079:2:5"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2067:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2067:15:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2049:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2049:34:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2049:34:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2103:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2114:2:5",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2099:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2099:18:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "2123:6:5"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "2131:2:5"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2119:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2119:15:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2092:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2092:43:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2092:43:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2155:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2166:2:5",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2151:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2151:18:5"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "2171:6:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2144:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2144:34:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2144:34:5"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1919:9:5",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "1930:6:5",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1938:6:5",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1946:6:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1957:4:5",
                "type": ""
              }
            ],
            "src": "1809:375:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2363:173:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2380:9:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2391:2:5",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2373:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2373:21:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2373:21:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2414:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2425:2:5",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2410:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2410:18:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2430:2:5",
                        "type": "",
                        "value": "23"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2403:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2403:30:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2403:30:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2453:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2464:2:5",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2449:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2449:18:5"
                      },
                      {
                        "hexValue": "596f7520646f6e2774206f776e2074686973204e46542e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2469:25:5",
                        "type": "",
                        "value": "You don't own this NFT."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2442:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2442:53:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2442:53:5"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2504:26:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2516:9:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2527:2:5",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2512:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2512:18:5"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2504:4:5"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_6f2a62d8852f82b50eb85b4e9c99dc77d5787d1bc03f35c350184a38c9f660ff__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2340:9:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2354:4:5",
                "type": ""
              }
            ],
            "src": "2189:347:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2642:76:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2652:26:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2664:9:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2675:2:5",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2660:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2660:18:5"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2652:4:5"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2694:9:5"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2705:6:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2687:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2687:25:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2687:25:5"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2611:9:5",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2622:6:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2633:4:5",
                "type": ""
              }
            ],
            "src": "2541:177:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2804:209:5",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2850:16:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2859:1:5",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2862:1:5",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2852:6:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2852:12:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2852:12:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2825:7:5"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2834:9:5"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2821:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2821:23:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2846:2:5",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2817:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2817:32:5"
                  },
                  "nodeType": "YulIf",
                  "src": "2814:52:5"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2875:29:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2894:9:5"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "2888:5:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2888:16:5"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "2879:5:5",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2967:16:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2976:1:5",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2979:1:5",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2969:6:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2969:12:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2969:12:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2926:5:5"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "2937:5:5"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2952:1:5",
                                        "type": "",
                                        "value": "2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2955:3:5",
                                        "type": "",
                                        "value": "160"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "exp",
                                      "nodeType": "YulIdentifier",
                                      "src": "2948:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2948:11:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2961:1:5",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "2944:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2944:19:5"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "2933:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2933:31:5"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "2923:2:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2923:42:5"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2916:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2916:50:5"
                  },
                  "nodeType": "YulIf",
                  "src": "2913:70:5"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2992:15:5",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "3002:5:5"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2992:6:5"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2770:9:5",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2781:7:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2793:6:5",
                "type": ""
              }
            ],
            "src": "2723:290:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3192:178:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3209:9:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3220:2:5",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3202:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3202:21:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3202:21:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3243:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3254:2:5",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3239:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3239:18:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3259:2:5",
                        "type": "",
                        "value": "28"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3232:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3232:30:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3232:30:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3282:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3293:2:5",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3278:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3278:18:5"
                      },
                      {
                        "hexValue": "5072696365206d7573742062652067726561746572207468616e2030",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3298:30:5",
                        "type": "",
                        "value": "Price must be greater than 0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3271:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3271:58:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3271:58:5"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3338:26:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3350:9:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3361:2:5",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3346:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3346:18:5"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3338:4:5"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_f496d2a6b8c6dfd2fdeb51133639f7cbcc6985234f7207231dd11f4a16998dde__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3169:9:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3183:4:5",
                "type": ""
              }
            ],
            "src": "3018:352:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3504:119:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3514:26:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3526:9:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3537:2:5",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3522:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3522:18:5"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3514:4:5"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3556:9:5"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3567:6:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3549:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3549:25:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3549:25:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3594:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3605:2:5",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3590:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3590:18:5"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "3610:6:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3583:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3583:34:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3583:34:5"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3465:9:5",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3476:6:5",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3484:6:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3495:4:5",
                "type": ""
              }
            ],
            "src": "3375:248:5"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_uint256_t_address_t_uint256_t_bool__to_t_uint256_t_address_t_uint256_t_bool__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, sub(exp(2, 160), 1)))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), iszero(iszero(value3)))\n    }\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_contract$_IERC721_$278__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(exp(2, 160), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_226a6a462c2c4b49b29c4cf0f7bf9fc27b240ead3b653cec4e9cb8c4f8723dfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"NFT is not for sale.\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_78dbdd222de53a46dba3b77c13845f9b482f3ef3c1be1429d39da0b1c08c5688__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"Insufficient funds sent.\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(exp(2, 160), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_stringliteral_6f2a62d8852f82b50eb85b4e9c99dc77d5787d1bc03f35c350184a38c9f660ff__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"You don't own this NFT.\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(exp(2, 160), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_f496d2a6b8c6dfd2fdeb51133639f7cbcc6985234f7207231dd11f4a16998dde__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"Price must be greater than 0\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n}",
      "id": 5,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "1146:1743:4:-:0;;;1673:100;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1724:11;:42;;-1:-1:-1;;;;;;1724:42:4;-1:-1:-1;;;;;1724:42:4;;;;;;;;;;1146:1743;;14:290:5;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:5;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:5:o;:::-;1146:1743:4;;;;;;",
  "deployedSourceMap": "1146:1743:4:-:0;;;;;;;;-1:-1:-1;;;1146:1743:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2389:498;;;;;;:::i;:::-;;:::i;:::-;;1420:35;;;;;;;;;;-1:-1:-1;1420:35:4;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1420:35:4;;;;;;;;;;;;;424:25:5;;;-1:-1:-1;;;;;485:32:5;;;480:2;465:18;;458:60;534:18;;;527:34;604:14;597:22;592:2;577:18;;570:50;411:3;396:19;1420:35:4;;;;;;;;2166:194;;;;;;;;;;-1:-1:-1;2166:194:4;;;;;:::i;:::-;;:::i;1807:322::-;;;;;;;;;;-1:-1:-1;1807:322:4;;;;;:::i;:::-;;:::i;1210:26::-;;;;;;;;;;-1:-1:-1;1210:26:4;;;;-1:-1:-1;;;;;1210:26:4;;;;;;-1:-1:-1;;;;;1063:32:5;;;1045:51;;1033:2;1018:18;1210:26:4;884:218:5;2389:498:4;2452:15;2470:13;;;:4;:13;;;;;2501:11;;;;;;2493:44;;;;-1:-1:-1;;;;;2493:44:4;;1309:2:5;2493:44:4;;;1291:21:5;1348:2;1328:18;;;1321:30;-1:-1:-1;;;;;1367:18:5;;;1360:50;1427:18;;2493:44:4;;;;;;;;;2568:3;:9;;;2555;:22;;2547:59;;;;-1:-1:-1;;;;;2547:59:4;;1658:2:5;2547:59:4;;;1640:21:5;1697:2;1677:18;;;1670:30;-1:-1:-1;;;;;1716:18:5;;;1709:54;1780:18;;2547:59:4;1456:348:5;2547:59:4;2654:11;;:64;;-1:-1:-1;;;;;2654:64:4;;2691:4;2654:64;;;2049:34:5;2698:10:4;2099:18:5;;;2092:43;2151:18;;;2144:34;;;-1:-1:-1;;;;;2654:11:4;;;;:28;;1984:18:5;;2654:64:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2779:9:4;;;;2771:38;;-1:-1:-1;;;;;2779:9:4;;;;-1:-1:-1;2799:9:4;2771:38;;;;;2779:9;2771:38;2779:9;2771:38;2799:9;2779;2771:38;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2867:13:4;;;;:4;:13;;;;;;;2860:20;;;;;;;;-1:-1:-1;;;;;;2860:20:4;;;;;;;;;;;;;;-1:-1:-1;;2860:20:4;;;2389:498::o;2166:194::-;2227:13;;;;:4;:13;;;;;;;;:19;;-1:-1:-1;;;;;2227:19:4;2250:10;2227:33;2219:69;;;;-1:-1:-1;;;;;2219:69:4;;;;;;;:::i;:::-;2305:13;;;;:4;:13;;;;;;;;2298:20;;;;;;;;-1:-1:-1;;;;;;2298:20:4;;;;;;;;;;;;;;-1:-1:-1;;2298:20:4;;;2333;;;;;2310:7;2687:25:5;;2675:2;2660:18;;2541:177;2333:20:4;;;;;;;;2166:194;:::o;1807:322::-;1888:11;;:28;;-1:-1:-1;;;;;1888:28:4;;;;;2687:25:5;;;1920:10:4;;-1:-1:-1;;;;;1888:11:4;;:19;;2660:18:5;;1888:28:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1888:42:4;;1880:78;;;;-1:-1:-1;;;;;1880:78:4;;;;;;;:::i;:::-;1984:1;1976:5;:9;1968:50;;;;-1:-1:-1;;;;;1968:50:4;;3220:2:5;1968:50:4;;;3202:21:5;3259:2;3239:18;;;3232:30;3298;3278:18;;;3271:58;3346:18;;1968:50:4;3018:352:5;1968:50:4;2045:37;;;;;;;;;;;2058:10;2045:37;;;;;;;;;;;;;2077:4;2045:37;;;;;;-1:-1:-1;2029:13:4;;;;;;;;;:53;;;;;;;;;;;-1:-1:-1;;;;;;2029:53:4;-1:-1:-1;;;;;2029:53:4;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2029:53:4;;;;;;;;;;;2097:25;;3549::5;;;3590:18;;;3583:34;;;2097:25:4;;3522:18:5;2097:25:4;;;;;;;1807:322;;:::o;14:180:5:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:5;;14:180;-1:-1:-1;14:180:5:o;631:248::-;699:6;707;760:2;748:9;739:7;735:23;731:32;728:52;;;776:1;773;766:12;728:52;-1:-1:-1;;799:23:5;;;869:2;854:18;;;841:32;;-1:-1:-1;631:248:5:o;2189:347::-;2391:2;2373:21;;;2430:2;2410:18;;;2403:30;-1:-1:-1;;;;;2464:2:5;2449:18;;2442:53;2527:2;2512:18;;2189:347::o;2723:290::-;2793:6;2846:2;2834:9;2825:7;2821:23;2817:32;2814:52;;;2862:1;2859;2852:12;2814:52;2888:16;;-1:-1:-1;;;;;2933:31:5;;2923:42;;2913:70;;2979:1;2976;2969:12;2913:70;3002:5;2723:290;-1:-1:-1;;;2723:290:5:o",
  "source": "// SPDX-License-Identifier: BSL-1.1\npragma solidity >=0.4.22 <0.9.0;\n\n/**\n * Please note the following:\n *\n * 1. This contract assumes that you are using OpenZeppelin ERC721 library for handling NFTs. You should install this library using npm or yarn and import it as shown in the code.\n * 2. Users need to approve the contract to spend their NFTs on their behalf before listing them for sale. This contract does not handle the approval process but assumes that NFTs \n *    have already been approved.\n * 3. The contract handles basic listing and unlisting of NFTs and allows users to purchase NFTs listed for sale. More advanced features like royalties, auctions, \n *    or a marketplace interface would require additional development.\n * 4. Ensure proper testing, security audits, and legal considerations before deploying any smart contract to a live blockchain network.\n * 5. Be aware that the Ethereum blockchain and Solidity language are continually evolving, and it's essential to use the latest best practices when creating smart contracts.\n */\n\nimport \"../interfaces/IERC721.sol\";\n//import \"@openzeppelin/contracts/access/Ownable.sol\";\n\ncontract NFTCollection {\n    // Address of the NFT contract\n    IERC721 public nftContract;\n\n    // NFT Struct\n    struct NFT {\n        uint256 tokenId;\n        address owner;\n        uint256 price;\n        bool forSale;\n    }\n\n    // Mapping from NFT ID to NFT details\n    mapping(uint256 => NFT) public nfts;\n\n    // Event for when an NFT is listed for sale\n    event NFTListed(uint256 tokenId, uint256 price);\n    \n    // Event for when an NFT is unlisted (taken off the market)\n    event NFTUnlisted(uint256 tokenId);\n\n    constructor(address _nftContractAddress) {\n        nftContract = IERC721(_nftContractAddress);\n    }\n\n    // List an NFT for sale\n    function listNFTForSale(uint256 tokenId, uint256 price) public {\n        require(nftContract.ownerOf(tokenId) == msg.sender, \"You don't own this NFT.\");\n        require(price > 0, \"Price must be greater than 0\");\n\n        nfts[tokenId] = NFT(tokenId, msg.sender, price, true);\n        emit NFTListed(tokenId, price);\n    }\n\n    // Unlist an NFT from sale\n    function unlistNFT(uint256 tokenId) public {\n        require(nfts[tokenId].owner == msg.sender, \"You don't own this NFT.\");\n        delete nfts[tokenId];\n        emit NFTUnlisted(tokenId);\n    }\n\n    // Purchase an NFT\n    function purchaseNFT(uint256 tokenId) public payable {\n        NFT storage nft = nfts[tokenId];\n        require(nft.forSale, \"NFT is not for sale.\");\n        require(msg.value >= nft.price, \"Insufficient funds sent.\");\n\n        // Transfer NFT to the buyer\n        nftContract.safeTransferFrom(address(this), msg.sender, tokenId);\n\n        // Transfer payment to the seller\n        payable(nft.owner).transfer(msg.value);\n\n        // Remove the NFT from the list\n        delete nfts[tokenId];\n    }\n}\n",
  "sourcePath": "/Volumes/My Book/projects/pingleware-contracts/contracts/nft/NFTCollection.sol",
  "ast": {
    "absolutePath": "project:/contracts/nft/NFTCollection.sol",
    "exportedSymbols": {
      "IERC165": [
        175
      ],
      "IERC721": [
        278
      ],
      "NFTCollection": [
        499
      ]
    },
    "id": 500,
    "license": "BSL-1.1",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 334,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".22",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "36:32:4"
      },
      {
        "absolutePath": "project:/contracts/interfaces/IERC721.sol",
        "file": "../interfaces/IERC721.sol",
        "id": 335,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 500,
        "sourceUnit": 279,
        "src": "1054:35:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "NFTCollection",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 499,
        "linearizedBaseContracts": [
          499
        ],
        "name": "NFTCollection",
        "nameLocation": "1155:13:4",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "d56d229d",
            "id": 338,
            "mutability": "mutable",
            "name": "nftContract",
            "nameLocation": "1225:11:4",
            "nodeType": "VariableDeclaration",
            "scope": 499,
            "src": "1210:26:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC721_$278",
              "typeString": "contract IERC721"
            },
            "typeName": {
              "id": 337,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 336,
                "name": "IERC721",
                "nameLocations": [
                  "1210:7:4"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 278,
                "src": "1210:7:4"
              },
              "referencedDeclaration": 278,
              "src": "1210:7:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC721_$278",
                "typeString": "contract IERC721"
              }
            },
            "visibility": "public"
          },
          {
            "canonicalName": "NFTCollection.NFT",
            "id": 347,
            "members": [
              {
                "constant": false,
                "id": 340,
                "mutability": "mutable",
                "name": "tokenId",
                "nameLocation": "1290:7:4",
                "nodeType": "VariableDeclaration",
                "scope": 347,
                "src": "1282:15:4",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 339,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1282:7:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 342,
                "mutability": "mutable",
                "name": "owner",
                "nameLocation": "1315:5:4",
                "nodeType": "VariableDeclaration",
                "scope": 347,
                "src": "1307:13:4",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 341,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1307:7:4",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 344,
                "mutability": "mutable",
                "name": "price",
                "nameLocation": "1338:5:4",
                "nodeType": "VariableDeclaration",
                "scope": 347,
                "src": "1330:13:4",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 343,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1330:7:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 346,
                "mutability": "mutable",
                "name": "forSale",
                "nameLocation": "1358:7:4",
                "nodeType": "VariableDeclaration",
                "scope": 347,
                "src": "1353:12:4",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 345,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "1353:4:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "NFT",
            "nameLocation": "1268:3:4",
            "nodeType": "StructDefinition",
            "scope": 499,
            "src": "1261:111:4",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "265aa621",
            "id": 352,
            "mutability": "mutable",
            "name": "nfts",
            "nameLocation": "1451:4:4",
            "nodeType": "VariableDeclaration",
            "scope": 499,
            "src": "1420:35:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NFT_$347_storage_$",
              "typeString": "mapping(uint256 => struct NFTCollection.NFT)"
            },
            "typeName": {
              "id": 351,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 348,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1428:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1420:23:4",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NFT_$347_storage_$",
                "typeString": "mapping(uint256 => struct NFTCollection.NFT)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 350,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 349,
                  "name": "NFT",
                  "nameLocations": [
                    "1439:3:4"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 347,
                  "src": "1439:3:4"
                },
                "referencedDeclaration": 347,
                "src": "1439:3:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_NFT_$347_storage_ptr",
                  "typeString": "struct NFTCollection.NFT"
                }
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "eventSelector": "a6cd73580a273eec6c1026108f6b63479fbaef5356dde4ff43e4b38dd187485f",
            "id": 358,
            "name": "NFTListed",
            "nameLocation": "1516:9:4",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 357,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 354,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "1534:7:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 358,
                  "src": "1526:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 353,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1526:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 356,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "price",
                  "nameLocation": "1551:5:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 358,
                  "src": "1543:13:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 355,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1543:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1525:32:4"
            },
            "src": "1510:48:4"
          },
          {
            "anonymous": false,
            "eventSelector": "cd14eb7ebf273ed59a9fd1cf8651f3f40d9a04355b3511376f0d17b37ba224ff",
            "id": 362,
            "name": "NFTUnlisted",
            "nameLocation": "1638:11:4",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 361,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 360,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "1658:7:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 362,
                  "src": "1650:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 359,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1650:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1649:17:4"
            },
            "src": "1632:35:4"
          },
          {
            "body": {
              "id": 373,
              "nodeType": "Block",
              "src": "1714:59:4",
              "statements": [
                {
                  "expression": {
                    "id": 371,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 367,
                      "name": "nftContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 338,
                      "src": "1724:11:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC721_$278",
                        "typeString": "contract IERC721"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 369,
                          "name": "_nftContractAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 364,
                          "src": "1746:19:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 368,
                        "name": "IERC721",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 278,
                        "src": "1738:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC721_$278_$",
                          "typeString": "type(contract IERC721)"
                        }
                      },
                      "id": 370,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1738:28:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC721_$278",
                        "typeString": "contract IERC721"
                      }
                    },
                    "src": "1724:42:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC721_$278",
                      "typeString": "contract IERC721"
                    }
                  },
                  "id": 372,
                  "nodeType": "ExpressionStatement",
                  "src": "1724:42:4"
                }
              ]
            },
            "id": 374,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 365,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 364,
                  "mutability": "mutable",
                  "name": "_nftContractAddress",
                  "nameLocation": "1693:19:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 374,
                  "src": "1685:27:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 363,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1685:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1684:29:4"
            },
            "returnParameters": {
              "id": 366,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1714:0:4"
            },
            "scope": 499,
            "src": "1673:100:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 416,
              "nodeType": "Block",
              "src": "1870:259:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 388,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 384,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 376,
                              "src": "1908:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 382,
                              "name": "nftContract",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 338,
                              "src": "1888:11:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC721_$278",
                                "typeString": "contract IERC721"
                              }
                            },
                            "id": 383,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1900:7:4",
                            "memberName": "ownerOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 218,
                            "src": "1888:19:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) view external returns (address)"
                            }
                          },
                          "id": 385,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1888:28:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 386,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1920:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 387,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1924:6:4",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1920:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1888:42:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f7520646f6e2774206f776e2074686973204e46542e",
                        "id": 389,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1932:25:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6f2a62d8852f82b50eb85b4e9c99dc77d5787d1bc03f35c350184a38c9f660ff",
                          "typeString": "literal_string \"You don't own this NFT.\""
                        },
                        "value": "You don't own this NFT."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6f2a62d8852f82b50eb85b4e9c99dc77d5787d1bc03f35c350184a38c9f660ff",
                          "typeString": "literal_string \"You don't own this NFT.\""
                        }
                      ],
                      "id": 381,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1880:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 390,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1880:78:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 391,
                  "nodeType": "ExpressionStatement",
                  "src": "1880:78:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 395,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 393,
                          "name": "price",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 378,
                          "src": "1976:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 394,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1984:1:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1976:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5072696365206d7573742062652067726561746572207468616e2030",
                        "id": 396,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1987:30:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f496d2a6b8c6dfd2fdeb51133639f7cbcc6985234f7207231dd11f4a16998dde",
                          "typeString": "literal_string \"Price must be greater than 0\""
                        },
                        "value": "Price must be greater than 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f496d2a6b8c6dfd2fdeb51133639f7cbcc6985234f7207231dd11f4a16998dde",
                          "typeString": "literal_string \"Price must be greater than 0\""
                        }
                      ],
                      "id": 392,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1968:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 397,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1968:50:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 398,
                  "nodeType": "ExpressionStatement",
                  "src": "1968:50:4"
                },
                {
                  "expression": {
                    "id": 409,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 399,
                        "name": "nfts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 352,
                        "src": "2029:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NFT_$347_storage_$",
                          "typeString": "mapping(uint256 => struct NFTCollection.NFT storage ref)"
                        }
                      },
                      "id": 401,
                      "indexExpression": {
                        "id": 400,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 376,
                        "src": "2034:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2029:13:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_NFT_$347_storage",
                        "typeString": "struct NFTCollection.NFT storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 403,
                          "name": "tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 376,
                          "src": "2049:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "expression": {
                            "id": 404,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2058:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 405,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2062:6:4",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2058:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 406,
                          "name": "price",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 378,
                          "src": "2070:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "hexValue": "74727565",
                          "id": 407,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2077:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "id": 402,
                        "name": "NFT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 347,
                        "src": "2045:3:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_NFT_$347_storage_ptr_$",
                          "typeString": "type(struct NFTCollection.NFT storage pointer)"
                        }
                      },
                      "id": 408,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2045:37:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_NFT_$347_memory_ptr",
                        "typeString": "struct NFTCollection.NFT memory"
                      }
                    },
                    "src": "2029:53:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_NFT_$347_storage",
                      "typeString": "struct NFTCollection.NFT storage ref"
                    }
                  },
                  "id": 410,
                  "nodeType": "ExpressionStatement",
                  "src": "2029:53:4"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 412,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 376,
                        "src": "2107:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 413,
                        "name": "price",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 378,
                        "src": "2116:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 411,
                      "name": "NFTListed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 358,
                      "src": "2097:9:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 414,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2097:25:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 415,
                  "nodeType": "EmitStatement",
                  "src": "2092:30:4"
                }
              ]
            },
            "functionSelector": "b2733b39",
            "id": 417,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "listNFTForSale",
            "nameLocation": "1816:14:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 379,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 376,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "1839:7:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 417,
                  "src": "1831:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 375,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1831:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 378,
                  "mutability": "mutable",
                  "name": "price",
                  "nameLocation": "1856:5:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 417,
                  "src": "1848:13:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 377,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1848:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1830:32:4"
            },
            "returnParameters": {
              "id": 380,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1870:0:4"
            },
            "scope": 499,
            "src": "1807:322:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 442,
              "nodeType": "Block",
              "src": "2209:151:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 429,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 423,
                              "name": "nfts",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 352,
                              "src": "2227:4:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NFT_$347_storage_$",
                                "typeString": "mapping(uint256 => struct NFTCollection.NFT storage ref)"
                              }
                            },
                            "id": 425,
                            "indexExpression": {
                              "id": 424,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 419,
                              "src": "2232:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2227:13:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_NFT_$347_storage",
                              "typeString": "struct NFTCollection.NFT storage ref"
                            }
                          },
                          "id": 426,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2241:5:4",
                          "memberName": "owner",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 342,
                          "src": "2227:19:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 427,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2250:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 428,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2254:6:4",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2250:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2227:33:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f7520646f6e2774206f776e2074686973204e46542e",
                        "id": 430,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2262:25:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6f2a62d8852f82b50eb85b4e9c99dc77d5787d1bc03f35c350184a38c9f660ff",
                          "typeString": "literal_string \"You don't own this NFT.\""
                        },
                        "value": "You don't own this NFT."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6f2a62d8852f82b50eb85b4e9c99dc77d5787d1bc03f35c350184a38c9f660ff",
                          "typeString": "literal_string \"You don't own this NFT.\""
                        }
                      ],
                      "id": 422,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2219:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 431,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2219:69:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 432,
                  "nodeType": "ExpressionStatement",
                  "src": "2219:69:4"
                },
                {
                  "expression": {
                    "id": 436,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "2298:20:4",
                    "subExpression": {
                      "baseExpression": {
                        "id": 433,
                        "name": "nfts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 352,
                        "src": "2305:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NFT_$347_storage_$",
                          "typeString": "mapping(uint256 => struct NFTCollection.NFT storage ref)"
                        }
                      },
                      "id": 435,
                      "indexExpression": {
                        "id": 434,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 419,
                        "src": "2310:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2305:13:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_NFT_$347_storage",
                        "typeString": "struct NFTCollection.NFT storage ref"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 437,
                  "nodeType": "ExpressionStatement",
                  "src": "2298:20:4"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 439,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 419,
                        "src": "2345:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 438,
                      "name": "NFTUnlisted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 362,
                      "src": "2333:11:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 440,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2333:20:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 441,
                  "nodeType": "EmitStatement",
                  "src": "2328:25:4"
                }
              ]
            },
            "functionSelector": "961f0944",
            "id": 443,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "unlistNFT",
            "nameLocation": "2175:9:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 420,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 419,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "2193:7:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 443,
                  "src": "2185:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 418,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2185:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2184:17:4"
            },
            "returnParameters": {
              "id": 421,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2209:0:4"
            },
            "scope": 499,
            "src": "2166:194:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 497,
              "nodeType": "Block",
              "src": "2442:445:4",
              "statements": [
                {
                  "assignments": [
                    450
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 450,
                      "mutability": "mutable",
                      "name": "nft",
                      "nameLocation": "2464:3:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 497,
                      "src": "2452:15:4",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_NFT_$347_storage_ptr",
                        "typeString": "struct NFTCollection.NFT"
                      },
                      "typeName": {
                        "id": 449,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 448,
                          "name": "NFT",
                          "nameLocations": [
                            "2452:3:4"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 347,
                          "src": "2452:3:4"
                        },
                        "referencedDeclaration": 347,
                        "src": "2452:3:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_NFT_$347_storage_ptr",
                          "typeString": "struct NFTCollection.NFT"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 454,
                  "initialValue": {
                    "baseExpression": {
                      "id": 451,
                      "name": "nfts",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 352,
                      "src": "2470:4:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NFT_$347_storage_$",
                        "typeString": "mapping(uint256 => struct NFTCollection.NFT storage ref)"
                      }
                    },
                    "id": 453,
                    "indexExpression": {
                      "id": 452,
                      "name": "tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 445,
                      "src": "2475:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2470:13:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_NFT_$347_storage",
                      "typeString": "struct NFTCollection.NFT storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2452:31:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 456,
                          "name": "nft",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 450,
                          "src": "2501:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_NFT_$347_storage_ptr",
                            "typeString": "struct NFTCollection.NFT storage pointer"
                          }
                        },
                        "id": 457,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2505:7:4",
                        "memberName": "forSale",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 346,
                        "src": "2501:11:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e4654206973206e6f7420666f722073616c652e",
                        "id": 458,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2514:22:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_226a6a462c2c4b49b29c4cf0f7bf9fc27b240ead3b653cec4e9cb8c4f8723dfe",
                          "typeString": "literal_string \"NFT is not for sale.\""
                        },
                        "value": "NFT is not for sale."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_226a6a462c2c4b49b29c4cf0f7bf9fc27b240ead3b653cec4e9cb8c4f8723dfe",
                          "typeString": "literal_string \"NFT is not for sale.\""
                        }
                      ],
                      "id": 455,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2493:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 459,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2493:44:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 460,
                  "nodeType": "ExpressionStatement",
                  "src": "2493:44:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 466,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 462,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2555:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 463,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2559:5:4",
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "2555:9:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "expression": {
                            "id": 464,
                            "name": "nft",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 450,
                            "src": "2568:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_NFT_$347_storage_ptr",
                              "typeString": "struct NFTCollection.NFT storage pointer"
                            }
                          },
                          "id": 465,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2572:5:4",
                          "memberName": "price",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 344,
                          "src": "2568:9:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2555:22:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e73756666696369656e742066756e64732073656e742e",
                        "id": 467,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2579:26:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_78dbdd222de53a46dba3b77c13845f9b482f3ef3c1be1429d39da0b1c08c5688",
                          "typeString": "literal_string \"Insufficient funds sent.\""
                        },
                        "value": "Insufficient funds sent."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_78dbdd222de53a46dba3b77c13845f9b482f3ef3c1be1429d39da0b1c08c5688",
                          "typeString": "literal_string \"Insufficient funds sent.\""
                        }
                      ],
                      "id": 461,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2547:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 468,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2547:59:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 469,
                  "nodeType": "ExpressionStatement",
                  "src": "2547:59:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 475,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "2691:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_NFTCollection_$499",
                              "typeString": "contract NFTCollection"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_NFTCollection_$499",
                              "typeString": "contract NFTCollection"
                            }
                          ],
                          "id": 474,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2683:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 473,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2683:7:4",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 476,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2683:13:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 477,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2698:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 478,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2702:6:4",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2698:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 479,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 445,
                        "src": "2710:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 470,
                        "name": "nftContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 338,
                        "src": "2654:11:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC721_$278",
                          "typeString": "contract IERC721"
                        }
                      },
                      "id": 472,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2666:16:4",
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 227,
                      "src": "2654:28:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 480,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2654:64:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 481,
                  "nodeType": "ExpressionStatement",
                  "src": "2654:64:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 488,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2799:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 489,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2803:5:4",
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "2799:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 484,
                              "name": "nft",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 450,
                              "src": "2779:3:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_NFT_$347_storage_ptr",
                                "typeString": "struct NFTCollection.NFT storage pointer"
                              }
                            },
                            "id": 485,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2783:5:4",
                            "memberName": "owner",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 342,
                            "src": "2779:9:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 483,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2771:8:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 482,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2771:8:4",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 486,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2771:18:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 487,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2790:8:4",
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "2771:27:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 490,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2771:38:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 491,
                  "nodeType": "ExpressionStatement",
                  "src": "2771:38:4"
                },
                {
                  "expression": {
                    "id": 495,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "2860:20:4",
                    "subExpression": {
                      "baseExpression": {
                        "id": 492,
                        "name": "nfts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 352,
                        "src": "2867:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NFT_$347_storage_$",
                          "typeString": "mapping(uint256 => struct NFTCollection.NFT storage ref)"
                        }
                      },
                      "id": 494,
                      "indexExpression": {
                        "id": 493,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 445,
                        "src": "2872:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2867:13:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_NFT_$347_storage",
                        "typeString": "struct NFTCollection.NFT storage ref"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 496,
                  "nodeType": "ExpressionStatement",
                  "src": "2860:20:4"
                }
              ]
            },
            "functionSelector": "150bde03",
            "id": 498,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "purchaseNFT",
            "nameLocation": "2398:11:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 446,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 445,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "2418:7:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 498,
                  "src": "2410:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 444,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2410:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2409:17:4"
            },
            "returnParameters": {
              "id": 447,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2442:0:4"
            },
            "scope": 499,
            "src": "2389:498:4",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 500,
        "src": "1146:1743:4",
        "usedErrors": []
      }
    ],
    "src": "36:2854:4"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.18+commit.87f61d96.Emscripten.clang"
  },
  "networks": {
    "1697930746463": {
      "events": {},
      "links": {},
      "address": "0x08EA1B6A091eFD503EB22bB98fA58C7F840e08Cd",
      "transactionHash": "0xe7f5e292537fc75faf1c23c42eb32d171c29de911f0ebf1b50303411fac35cfa"
    }
  },
  "schemaVersion": "3.4.12",
  "updatedAt": "2023-10-24T03:01:32.447Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}