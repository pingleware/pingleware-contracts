{
  "contractName": "BAToken",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "tokenOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokens",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "tokenHolder",
          "type": "address"
        }
      ],
      "name": "Buyerlist",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "CreateBAT",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "Destroyed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "FallbackEvent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "LogRefund",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "ReceiveEvent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "reason",
          "type": "bytes"
        }
      ],
      "name": "Started",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "reason",
          "type": "bytes"
        }
      ],
      "name": "Stopped",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "reason",
          "type": "string"
        }
      ],
      "name": "Termination",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokens",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "tokenHolder",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "issueDivi",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "fromtime",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "totime",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "rate",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "supply",
          "type": "uint256"
        }
      ],
      "name": "startSale",
      "type": "event"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "DECIMALS",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "VERSION",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "WAIT",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "batFund",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "batFundDeposit",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "destroy",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_recipient",
          "type": "address"
        }
      ],
      "name": "destroyAndSend",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ethFundDeposit",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fundingEndBlock",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fundingStartBlock",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isFinalized",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "setBalance",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "setTotalSupply",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tokenCreationCap",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tokenCreationMin",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tokenExchangeRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "wallet",
          "type": "address"
        }
      ],
      "name": "setETHFundsDepositWallet",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "wallet",
          "type": "address"
        }
      ],
      "name": "setBATFundDepositWallet",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "blocknumber",
          "type": "uint256"
        }
      ],
      "name": "setFundingStartingBlock",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "blocknumber",
          "type": "uint256"
        }
      ],
      "name": "setFundingEndingBlock",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "createBATFund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "createTokens",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "finalize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "refund",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenHolder\",\"type\":\"address\"}],\"name\":\"Buyerlist\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"CreateBAT\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"Destroyed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"FallbackEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"LogRefund\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ReceiveEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"reason\",\"type\":\"bytes\"}],\"name\":\"Started\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"reason\",\"type\":\"bytes\"}],\"name\":\"Stopped\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"Termination\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenHolder\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"issueDivi\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fromtime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rate\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"supply\",\"type\":\"uint256\"}],\"name\":\"startSale\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"DECIMALS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WAIT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"batFund\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"batFundDeposit\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"createBATFund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"createTokens\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"destroy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"}],\"name\":\"destroyAndSend\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ethFundDeposit\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"finalize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fundingEndBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fundingStartBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isFinalized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"refund\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"wallet\",\"type\":\"address\"}],\"name\":\"setBATFundDepositWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"setBalance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"wallet\",\"type\":\"address\"}],\"name\":\"setETHFundsDepositWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"blocknumber\",\"type\":\"uint256\"}],\"name\":\"setFundingEndingBlock\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"blocknumber\",\"type\":\"uint256\"}],\"name\":\"setFundingStartingBlock\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"setTotalSupply\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenCreationCap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenCreationMin\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenExchangeRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"createTokens()\":{\"details\":\"Accepts ether and creates new BAT tokens.\"},\"finalize()\":{\"details\":\"Ends the funding period and sends the ETH home\"},\"refund()\":{\"details\":\"Allows contributors to recover their ether in the case of a failed funding campaign.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/finance/utility/BAToken.sol\":\"BAToken\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[],\"viaIR\":true},\"sources\":{\"project:/contracts/common/Destructible.sol\":{\"keccak256\":\"0xb45b42ac103b81f401b1a1a2271336d4672be7f2cebb1c53a36b97cc4fcc21e4\",\"license\":\"CC-BY-4.0\",\"urls\":[\"bzz-raw://29dd6190744792dc81cd78b53f55581047a10f785c040995b084fb9fcf5fc81f\",\"dweb:/ipfs/QmeAp1kr7D9rB7dxxSWxEmyiUqxagUcuW77ZzW5KLgePQY\"]},\"project:/contracts/common/Frozen.sol\":{\"keccak256\":\"0x213e022147889e959c7745d86f7d4ad73b2938472156f989ba2b18be8f46a07d\",\"license\":\"CC-BY-4.0\",\"urls\":[\"bzz-raw://2438589f997234e1d3724952892278717faba109879be9bbbcab85fdb7ea52e6\",\"dweb:/ipfs/QmVmeFhcYRCHyrtVsAtYBas2JxBbzLwUxjoFU2P4HsHdZm\"]},\"project:/contracts/common/Owned.sol\":{\"keccak256\":\"0x70b5d810421ce2fb7f4ca6e84429a3363ce70149179e26cfc08d3dfaa58ec9cf\",\"license\":\"CC-BY-4.0\",\"urls\":[\"bzz-raw://d47b6af54361f7c634897d3c11f3e34c4a086ce771ffcb9105fd4490471e3523\",\"dweb:/ipfs/QmZiTEchqHUvPGrYDKVd5tbarTFYxsjWsiB7D9R6ecmL6n\"]},\"project:/contracts/common/ReentrancyGuard.sol\":{\"keccak256\":\"0x53b711e6d31b96e71abf2252156ae0d06d145ad0fcdcb19d01ef026cac9686e7\",\"license\":\"CC-BY-4.0\",\"urls\":[\"bzz-raw://a74125750675bde70e958756c24892d8e930764b506e72cb586ec9663e65e269\",\"dweb:/ipfs/QmdXpkNZ9cBALh3zZd8jYWcwTH2XYvLvp19pJWEXAQ5hAm\"]},\"project:/contracts/common/Token.sol\":{\"keccak256\":\"0x717fcc45d8a022b0e78bbe3954b75a827f28cba5567a97148f96edba1149505a\",\"license\":\"CC-BY-4.0\",\"urls\":[\"bzz-raw://1db88f500c3408bf009f989f8c02db27d14e465c318c3fbfd610525feaf72c84\",\"dweb:/ipfs/QmQFi2jpqqS84MnR9AMkPgMTyt2YNSzcDvggWEDrr1BWNP\"]},\"project:/contracts/common/Version.sol\":{\"keccak256\":\"0x90d05a30d71e57db083bbff1b497e29e287d5e7110731e226b619b137baf9d72\",\"license\":\"CC-BY-4.0\",\"urls\":[\"bzz-raw://57ec20c8ecc4481268b0902169e2954dd407ef3cde738a5e0dc856c5ad59f2b6\",\"dweb:/ipfs/QmNniGpizWnGbmHDpNEc4ru17MJnxsg7R3FReZjqThBL9b\"]},\"project:/contracts/finance/utility/BAToken.sol\":{\"keccak256\":\"0x4a0e4330f5d72bc133ab720a4186715818453919e5c0faf7d6b2bbce5fd84f8b\",\"license\":\"CC-BY-4.0\",\"urls\":[\"bzz-raw://069316d472fc1a19c4bbae501dfd9ee2da10cb2b9e1d97a10b36691d580b6625\",\"dweb:/ipfs/QmYDMDs8LX6aKzKN1uNUTV3yPxGcMqBhJmZEYRKCd7uUex\"]},\"project:/contracts/interfaces/IToken.sol\":{\"keccak256\":\"0xda146f53355fda1b49529350adaf4cbde1743a76efd21c765a797a11f9c2b394\",\"license\":\"CC-BY-4.0\",\"urls\":[\"bzz-raw://15e32e58ad7e52c1b2edf80c7c79151e603b3a2a38e591dcdaa5cb953e45f064\",\"dweb:/ipfs/QmbwxrhdAwqxWpX7Q7idqsjeTo9Jb3MphyLYKhqFDxwgCv\"]},\"project:/contracts/libs/SafeMath.sol\":{\"keccak256\":\"0x7942f714b5d3e6a063c7aeef6b25e10554459b1f45644c99b968c7b9ba3eb6f4\",\"license\":\"BSL-1.1\",\"urls\":[\"bzz-raw://3bb3b0102f75648ee0bb2694e9899eac623a4b69f9df08ef14888706a8ae8fe4\",\"dweb:/ipfs/QmPTNwjtyLkdmithRkp176b2ZBLyJgQCyV1BG1Ur6CBmZR\"]},\"project:/contracts/libs/ecverify.sol\":{\"keccak256\":\"0x7a9d362ccc49715a3c3cc1de529df39f723b5b70f2eefd17f2f14d8139af381b\",\"license\":\"CC-BY-4.0\",\"urls\":[\"bzz-raw://a48e0036fc134b9eb423f2c228097d780d122fa2f06210be1f252e52a5466493\",\"dweb:/ipfs/Qmb9yVvUziQpVDFWUMcvbhpTpK9ZKtuDbLUoS2bcjzKcZG\"]}},\"version\":1}",
  "bytecode": "0x6080604052346200039e5762001d65803803806200001d81620003a3565b9283398101906040818303126200039e5780516001604060020a03908181116200039e57836200004f918401620003f8565b91602093848201518381116200039e576200006b9201620003f8565b9160009333600160a060020a031986541617855560019342855533867f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08180a360ff19600354166003558251958487116200029b576007549660029487868a049916801562000393575b858a101462000263578190601f998a811162000340575b5085908a8311600114620002d4578492620002c8575b505060088202860a600019041916908502176007555b81519485116200029b576008968754878682049116801562000290575b8582101462000263578181116200021d575b5083818711600114620001ae57505084955093620001a2575b5050828102928402900a6000190419161790555b74ff000000000000000000000000000000000000000019600a5416600a556040516118fa90816200046b8239f35b01519150388062000160565b88835280832095969594919391928691601f19831691905b8a838310620002025750505010620001e7575b505050500201905562000174565b01519083168602840a600019041916905538808080620001d9565b858701518955909701969485019488935090810190620001c6565b888352848320858381818b0104830193828b1062000259575b0104019088905b8281106200024d57505062000147565b8481550188906200023d565b9350829362000236565b6024837f4e487b710000000000000000000000000000000000000000000000000000000081526022600452fd5b90607f169062000135565b807f4e487b7100000000000000000000000000000000000000000000000000000000602492526041600452fd5b01519050388062000102565b600785528685208a94508893929091601f198416875b8a8282106200032657505084116200030b575b505050020160075562000118565b01516008838d1602840a6000190419169055388080620002fd565b8484015186558e988d9850909501949384019301620002ea565b90915060078452858420868b818187010483019382871062000389575b9186959493918d93010401915b8281106200037a575050620000ec565b8681558594508b91016200036a565b935082936200035d565b98607f1698620000d5565b600080fd5b6040519190601f01601f191682016001604060020a03811183821017620003c957604052565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b919080601f840112156200039e5782516001604060020a038111620003c9576020906200042e601f8201601f19168301620003a3565b928184528282870101116200039e5760005b8181106200045657508260009394955001015290565b85810183015184820184015282016200044056fe60806040526004361015610026575b361561001e5761001c61135a565b005b61001c6113dd565b60e060020a600035046301a7a8c0811461028457806306fdde031461027f578063095ea7b31461027a57806318160ddd1461027557806319eef57514610270578063229a49781461026b57806323b872dd146102665780632e0f262514610261578063313ce56714610261578063395093511461025c5780634172d080146102575780634bb278f314610252578063590e1ae31461024d5780635a74c56e146102485780636f7920fd1461024357806370a082311461023e578063715018a614610239578063808a59ed1461023457806383197ef01461022f578063893d20e81461022a5780638d4e40831461022557806391b43d1314610220578063938e961a1461021b57806395d89b4114610216578063a457c2d714610211578063a81c3bdf1461020c578063a9059cbb14610207578063b442726314610202578063b8fb3a51146101fd578063c039daf6146101f8578063d36a1449146101f3578063d648a647146101ee578063dd62ed3e146101e9578063e30443bc146101e4578063f2fde38b146101df578063f5074f41146101da578063f7ea7a3d146101d55763ffa1ad740361000e57611211565b6111b6565b611170565b6110b8565b611080565b611034565b611016565b610f2f565b610f08565b610eec565b610d71565b610d4b565b610d22565b610c80565b610bbd565b610b73565b610b55565b610b2c565b610b04565b610a9d565b610a6e565b610a28565b6109ee565b6109c7565b610998565b610877565b61066f565b610652565b610606565b6105ea565b610520565b6104f9565b610495565b610477565b610446565b61030c565b610295565b600160a060020a031690565b346102be5760003660031901126102be57600a54604051600160a060020a039091168152602090f35b600080fd5b6020808252825181830181905290939260005b8281106102f857505060409293506000838284010152601f8019910116010190565b8181018601518482016040015285016102d6565b346102be57600080600319360112610417576040519080600754906002820491600180821692831561040d575b60209283861085146103f65785885260208801949081156103d6575060011461037d575b6103798761036d818903826111e9565b604051918291826102c3565b0390f35b600760005294509192917fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c6885b8386106103c5575050509101905061036d82610379388061035d565b8054858701529482019481016103a9565b60ff1916855250505091151590910201905061036d82610379388061035d565b60e060020a634e487b710282526022600452602482fd5b93607f1693610339565b80fd5b60043590600160a060020a03821682036102be57565b60243590600160a060020a03821682036102be57565b346102be5760403660031901126102be5761046c61046261041a565b6024359033611638565b602060405160018152f35b346102be5760003660031901126102be576020600654604051908152f35b346102be5760203660031901126102be576104ae61041a565b600054600160a060020a0391906104c89083163314611269565b16600160a060020a0319600a541617600a55600080f35b60e060020a634e487b710260009081526011600452602490fd5b346102be5760003660031901126102be5760206040516b019d971e4fe8401e740000008152f35b346102be5760603660031901126102be5761053961041a565b610541610430565b60443590600160a060020a0383166000526005602052610565336040600020611473565b549260018401610586575b61057a935061154a565b60405160018152602090f35b8284106105a25761059d8361057a95033383611638565b610570565b60405160e560020a62461bcd02815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606490fd5b346102be5760003660031901126102be57602060405160128152f35b346102be5760403660031901126102be5761061f61041a565b336000526005602052610636816040600020611473565b54602435810180911161064d5761046c9133611638565b6104df565b346102be5760003660031901126102be5760206040516119008152f35b346102be5760008060031936011261041757600a5460a060020a900460ff1661083f576106a56106a0600954610289565b610289565b33036107f7576006546b022e58cf5246568f8300000081106107bb57600c5443111561076f576b04d8c55aefb8c05b5c0000000361072a57600a805460a060020a60ff02191660a060020a179055808080806107086106a06106a0600954610289565b303190828215610721575bf11561071c5780f35b61175e565b506108fc610713565b60405160e560020a62461bcd0281526020600482015260136024820152606860020a72696e73756666696369656e7420737570706c79026044820152606490fd5b0390fd5b60405160e560020a62461bcd0281528061076b600482016020808252808201527f6c6f636b206e756d626572206d616e6970756c6174696f6e20617474656d7074604082015260600190565b60405160e560020a62461bcd02815260206004820152600e6024820152609060020a6d6578636565647320737570706c79026044820152606490fd5b60405160e560020a62461bcd02815260206004820152601a60248201527f63616e6e6f74206265207468652073616d65206163636f756e740000000000006044820152606490fd5b60405160e560020a62461bcd02815260206004820152600a602482015260b060020a696e6f7420616374697665026044820152606490fd5b346102be5760008060031936011261041757600a5460a060020a810460ff1661083f57600c5443111561076f576b022e58cf5246568f83000000600654101561076f57600160a060020a03163314610958576108d233611459565b5480156109585781808080843082f11561071c57818080611900846109026108fd8497600654611777565b600655565b046040517fb6c0eca8138e097d71e2dd31e19a1266487f0553f170b7260ffe68bcbe9ff8a733918061093985829190602083019252565b0390a281811561094f575b3390f11561071c5780f35b506108fc610944565b60405160e560020a62461bcd0281526020600482015260126024820152607060020a71696e73756666696369656e742066756e6473026044820152606490fd5b346102be5760203660031901126102be576109bf600160a060020a03600054163314611269565b600435600b55005b346102be5760003660031901126102be5760206040516b04d8c55aefb8c05b5c0000008152f35b346102be5760203660031901126102be57600160a060020a03610a0f61041a565b1660005260046020526020604060002054604051908152f35b60008060031936011261041757805481600160a060020a038216610a4d33821461140d565b6000805160206118858339815191528280a3600160a060020a031916815580f35b346102be5760203660031901126102be57610a95600160a060020a03600054163314611269565b600435600c55005b346102be5760008060031936011261041757610ac4600160a060020a038254163314611269565b600080516020611865833981519152610afe610ade61130a565b60408051338152600160a060020a03909216602083015290918291820190565b0390a180f35b60003660031901126102be576020610b1a61130a565b604051600160a060020a039091168152f35b346102be5760003660031901126102be57602060ff60a060020a600a5404166040519015158152f35b346102be5760003660031901126102be576020600c54604051908152f35b346102be5760203660031901126102be57610b8c61041a565b600054600160a060020a039190610ba69083163314611269565b16600160a060020a03196009541617600955600080f35b346102be576000806003193601126104175760405190806008549060028204916001808216928315610c76575b60209283861085146103f65785885260208801949081156103d65750600114610c1d576103798761036d818903826111e9565b600860005294509192917ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee35b838610610c65575050509101905061036d82610379388061035d565b805485870152948201948101610c49565b93607f1693610bea565b346102be5760403660031901126102be57610c9961041a565b60243590336000526005602052610cb4816040600020611473565b5491808310610cc95761057a92039033611638565b60405160e560020a62461bcd02815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015260d860020a64207a65726f026064820152608490fd5b346102be5760003660031901126102be57600954604051600160a060020a039091168152602090f35b346102be5760403660031901126102be5761046c610d6761041a565b602435903361154a565b60008060031936011261041757600a5460a060020a900460ff1661083f57600b544310610e9757600c544311610e97573415610e5657610db0346117d5565b610dbc8160065461176a565b806b04d8c55aefb8c05b5c00000010610e18576006558180828015610e0e575b8280929181923390f11561071c5760405190815233906000805160206118a58339815191529080602081015b0390a280f35b6108fc9150610ddc565b60405160e560020a62461bcd0281526020600482015260106024820152608060020a6f657863656564696e6720737570706c79026044820152606490fd5b60405160e560020a62461bcd0281526020600482015260136024820152606860020a72656d70747920726571756573742076616c7565026044820152606490fd5b60405160e560020a62461bcd02815260206004820152602160248201527f426c6f636b206e756d626572206d616e6970756c6174696f6e20617474656d70604482015260fa60020a601d026064820152608490fd5b346102be5760003660031901126102be576020604051601e8152f35b346102be5760003660031901126102be5760206040516b022e58cf5246568f830000008152f35b600080600319360112610417578054600160a060020a0390610f549082163314611269565b6006546b019d971e4fe8401e7400000090818101908110610fce5783808093610f7d8294600655565b610f8e6106a06106a0600a54610289565b82f11561071c57610fa0600a54610289565b166000805160206118a583398151915260405180610e0881906b019d971e4fe8401e74000000602083019252565b60405160e560020a62461bcd02815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f7700000000006044820152606490fd5b346102be5760003660031901126102be576020600b54604051908152f35b346102be5760403660031901126102be57602061107761105261041a565b61105a610430565b600160a060020a0390911660009081526005845260409020611473565b54604051908152f35b346102be5760403660031901126102be57600160a060020a036110a161041a565b166000526004602052602435604060002055600080f35b60203660031901126102be576110cc61041a565b600080549091600160a060020a0380831692916110ea33851461140d565b169182156111165782906000805160206118858339815191528580a3600160a060020a03191617815580f35b60405160e560020a62461bcd02815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061604482015260d060020a65646472657373026064820152608490fd5b346102be5760203660031901126102be576000805160206118658339815191526111b161119b61041a565b610ade600160a060020a03600054163314611269565b0390a1005b346102be5760203660031901126102be57600435600655005b60e060020a634e487b710260009081526041600452602490fd5b601f909101601f19168101906001604060020a0382119082101761120c57604052565b6111cf565b346102be5760003660031901126102be5760408051908101906001604060020a0382118183101761120c5761037991604052600a815260b060020a69312e362e342d62657461026020820152604051918291826102c3565b1561127057565b60405160e560020a62461bcd02815260206004820152601b60248201527f756e617574686f72697a65642c206e6f7420746865206f776e657200000000006044820152606490fd5b9190820180921161064d57565b156112cc57565b60405160e560020a62461bcd0281526020600482015260106024820152608160020a6f3930ba32903634b6b4ba1032b93937b9026044820152606490fd5b600154601e810180911161064d5761132c904211611327816112c5565b6112c5565b42600155600054600160a060020a031690565b600160a060020a039091168152602081019190915260400190565b333203611396577f26875833861a2b006512a11f1b86edf95df96131040f3caeed72989ee98580836040518061139134338361133f565b0390a1565b60405160e560020a62461bcd0281526020600482015260196024820152603860020a787068697368696e672061747461636b2064657465637465643f026044820152606490fd5b7fcc85d09d309785db93d6df19917f2e6cc07fe27cd01c08c8279145deb5cf45266040518061139134338361133f565b1561141457565b60405160e560020a62461bcd0281526020600482015260176024820152604960020a7630b1b1b2b9b9903232b734b2b2103337b91037bbb732b9026044820152606490fd5b600160a060020a0316600090815260046020526040902090565b90600160a060020a0316600052602052604060002090565b1561149257565b60405160e560020a62461bcd02815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f2061646472604482015260e860020a62657373026064820152608490fd5b156114f057565b60405160e560020a62461bcd02815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015260d060020a65616c616e6365026064820152608490fd5b91600160a060020a0380841692909183156115df576115bd827fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef946115da94169661159688151561148b565b6115b7846115a383611459565b546115b0828210156114e9565b0391611459565b55611459565b6115c88282546112b8565b90556040519081529081906020820190565b0390a3565b60405160e560020a62461bcd02815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015260d860020a646472657373026064820152608490fd5b600160a060020a0380821692919083156117075782169384156116b157806116a07f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259461169b6115da95600160a060020a03166000526005602052604060002090565b611473565b556040519081529081906020820190565b60405160e560020a62461bcd02815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015260f060020a617373026064820152608490fd5b60405160e560020a62461bcd028152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f20616464604482015260e060020a6372657373026064820152608490fd5b6040513d6000823e3d90fd5b908101908110610fce5790565b80821161178d5781810391190181036102be5790565b60405160e560020a62461bcd02815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f7700006044820152606490fd5b6119008082029180828404036102be57801561184a578204036117f55790565b60405160e560020a62461bcd02815260206004820152602160248201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f604482015260f860020a6077026064820152608490fd5b60e060020a634e487b710260009081526012600452602490fdfe91ca00fdf29069527d658f8dfc6d1c0bf9861780bb45ff36436f938d3595a8d68be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0b33527d2e0d30b7aece2c5e82927985866c1b75173d671c14f4457bf67aa6910a264697066735822122090082fdbf8277b8ea0299e588a6232ece380725420e0480dbc412f21de8e9e0b64736f6c63430008120033",
  "deployedBytecode": "0x60806040526004361015610026575b361561001e5761001c61135a565b005b61001c6113dd565b60e060020a600035046301a7a8c0811461028457806306fdde031461027f578063095ea7b31461027a57806318160ddd1461027557806319eef57514610270578063229a49781461026b57806323b872dd146102665780632e0f262514610261578063313ce56714610261578063395093511461025c5780634172d080146102575780634bb278f314610252578063590e1ae31461024d5780635a74c56e146102485780636f7920fd1461024357806370a082311461023e578063715018a614610239578063808a59ed1461023457806383197ef01461022f578063893d20e81461022a5780638d4e40831461022557806391b43d1314610220578063938e961a1461021b57806395d89b4114610216578063a457c2d714610211578063a81c3bdf1461020c578063a9059cbb14610207578063b442726314610202578063b8fb3a51146101fd578063c039daf6146101f8578063d36a1449146101f3578063d648a647146101ee578063dd62ed3e146101e9578063e30443bc146101e4578063f2fde38b146101df578063f5074f41146101da578063f7ea7a3d146101d55763ffa1ad740361000e57611211565b6111b6565b611170565b6110b8565b611080565b611034565b611016565b610f2f565b610f08565b610eec565b610d71565b610d4b565b610d22565b610c80565b610bbd565b610b73565b610b55565b610b2c565b610b04565b610a9d565b610a6e565b610a28565b6109ee565b6109c7565b610998565b610877565b61066f565b610652565b610606565b6105ea565b610520565b6104f9565b610495565b610477565b610446565b61030c565b610295565b600160a060020a031690565b346102be5760003660031901126102be57600a54604051600160a060020a039091168152602090f35b600080fd5b6020808252825181830181905290939260005b8281106102f857505060409293506000838284010152601f8019910116010190565b8181018601518482016040015285016102d6565b346102be57600080600319360112610417576040519080600754906002820491600180821692831561040d575b60209283861085146103f65785885260208801949081156103d6575060011461037d575b6103798761036d818903826111e9565b604051918291826102c3565b0390f35b600760005294509192917fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c6885b8386106103c5575050509101905061036d82610379388061035d565b8054858701529482019481016103a9565b60ff1916855250505091151590910201905061036d82610379388061035d565b60e060020a634e487b710282526022600452602482fd5b93607f1693610339565b80fd5b60043590600160a060020a03821682036102be57565b60243590600160a060020a03821682036102be57565b346102be5760403660031901126102be5761046c61046261041a565b6024359033611638565b602060405160018152f35b346102be5760003660031901126102be576020600654604051908152f35b346102be5760203660031901126102be576104ae61041a565b600054600160a060020a0391906104c89083163314611269565b16600160a060020a0319600a541617600a55600080f35b60e060020a634e487b710260009081526011600452602490fd5b346102be5760003660031901126102be5760206040516b019d971e4fe8401e740000008152f35b346102be5760603660031901126102be5761053961041a565b610541610430565b60443590600160a060020a0383166000526005602052610565336040600020611473565b549260018401610586575b61057a935061154a565b60405160018152602090f35b8284106105a25761059d8361057a95033383611638565b610570565b60405160e560020a62461bcd02815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606490fd5b346102be5760003660031901126102be57602060405160128152f35b346102be5760403660031901126102be5761061f61041a565b336000526005602052610636816040600020611473565b54602435810180911161064d5761046c9133611638565b6104df565b346102be5760003660031901126102be5760206040516119008152f35b346102be5760008060031936011261041757600a5460a060020a900460ff1661083f576106a56106a0600954610289565b610289565b33036107f7576006546b022e58cf5246568f8300000081106107bb57600c5443111561076f576b04d8c55aefb8c05b5c0000000361072a57600a805460a060020a60ff02191660a060020a179055808080806107086106a06106a0600954610289565b303190828215610721575bf11561071c5780f35b61175e565b506108fc610713565b60405160e560020a62461bcd0281526020600482015260136024820152606860020a72696e73756666696369656e7420737570706c79026044820152606490fd5b0390fd5b60405160e560020a62461bcd0281528061076b600482016020808252808201527f6c6f636b206e756d626572206d616e6970756c6174696f6e20617474656d7074604082015260600190565b60405160e560020a62461bcd02815260206004820152600e6024820152609060020a6d6578636565647320737570706c79026044820152606490fd5b60405160e560020a62461bcd02815260206004820152601a60248201527f63616e6e6f74206265207468652073616d65206163636f756e740000000000006044820152606490fd5b60405160e560020a62461bcd02815260206004820152600a602482015260b060020a696e6f7420616374697665026044820152606490fd5b346102be5760008060031936011261041757600a5460a060020a810460ff1661083f57600c5443111561076f576b022e58cf5246568f83000000600654101561076f57600160a060020a03163314610958576108d233611459565b5480156109585781808080843082f11561071c57818080611900846109026108fd8497600654611777565b600655565b046040517fb6c0eca8138e097d71e2dd31e19a1266487f0553f170b7260ffe68bcbe9ff8a733918061093985829190602083019252565b0390a281811561094f575b3390f11561071c5780f35b506108fc610944565b60405160e560020a62461bcd0281526020600482015260126024820152607060020a71696e73756666696369656e742066756e6473026044820152606490fd5b346102be5760203660031901126102be576109bf600160a060020a03600054163314611269565b600435600b55005b346102be5760003660031901126102be5760206040516b04d8c55aefb8c05b5c0000008152f35b346102be5760203660031901126102be57600160a060020a03610a0f61041a565b1660005260046020526020604060002054604051908152f35b60008060031936011261041757805481600160a060020a038216610a4d33821461140d565b6000805160206118858339815191528280a3600160a060020a031916815580f35b346102be5760203660031901126102be57610a95600160a060020a03600054163314611269565b600435600c55005b346102be5760008060031936011261041757610ac4600160a060020a038254163314611269565b600080516020611865833981519152610afe610ade61130a565b60408051338152600160a060020a03909216602083015290918291820190565b0390a180f35b60003660031901126102be576020610b1a61130a565b604051600160a060020a039091168152f35b346102be5760003660031901126102be57602060ff60a060020a600a5404166040519015158152f35b346102be5760003660031901126102be576020600c54604051908152f35b346102be5760203660031901126102be57610b8c61041a565b600054600160a060020a039190610ba69083163314611269565b16600160a060020a03196009541617600955600080f35b346102be576000806003193601126104175760405190806008549060028204916001808216928315610c76575b60209283861085146103f65785885260208801949081156103d65750600114610c1d576103798761036d818903826111e9565b600860005294509192917ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee35b838610610c65575050509101905061036d82610379388061035d565b805485870152948201948101610c49565b93607f1693610bea565b346102be5760403660031901126102be57610c9961041a565b60243590336000526005602052610cb4816040600020611473565b5491808310610cc95761057a92039033611638565b60405160e560020a62461bcd02815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015260d860020a64207a65726f026064820152608490fd5b346102be5760003660031901126102be57600954604051600160a060020a039091168152602090f35b346102be5760403660031901126102be5761046c610d6761041a565b602435903361154a565b60008060031936011261041757600a5460a060020a900460ff1661083f57600b544310610e9757600c544311610e97573415610e5657610db0346117d5565b610dbc8160065461176a565b806b04d8c55aefb8c05b5c00000010610e18576006558180828015610e0e575b8280929181923390f11561071c5760405190815233906000805160206118a58339815191529080602081015b0390a280f35b6108fc9150610ddc565b60405160e560020a62461bcd0281526020600482015260106024820152608060020a6f657863656564696e6720737570706c79026044820152606490fd5b60405160e560020a62461bcd0281526020600482015260136024820152606860020a72656d70747920726571756573742076616c7565026044820152606490fd5b60405160e560020a62461bcd02815260206004820152602160248201527f426c6f636b206e756d626572206d616e6970756c6174696f6e20617474656d70604482015260fa60020a601d026064820152608490fd5b346102be5760003660031901126102be576020604051601e8152f35b346102be5760003660031901126102be5760206040516b022e58cf5246568f830000008152f35b600080600319360112610417578054600160a060020a0390610f549082163314611269565b6006546b019d971e4fe8401e7400000090818101908110610fce5783808093610f7d8294600655565b610f8e6106a06106a0600a54610289565b82f11561071c57610fa0600a54610289565b166000805160206118a583398151915260405180610e0881906b019d971e4fe8401e74000000602083019252565b60405160e560020a62461bcd02815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f7700000000006044820152606490fd5b346102be5760003660031901126102be576020600b54604051908152f35b346102be5760403660031901126102be57602061107761105261041a565b61105a610430565b600160a060020a0390911660009081526005845260409020611473565b54604051908152f35b346102be5760403660031901126102be57600160a060020a036110a161041a565b166000526004602052602435604060002055600080f35b60203660031901126102be576110cc61041a565b600080549091600160a060020a0380831692916110ea33851461140d565b169182156111165782906000805160206118858339815191528580a3600160a060020a03191617815580f35b60405160e560020a62461bcd02815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061604482015260d060020a65646472657373026064820152608490fd5b346102be5760203660031901126102be576000805160206118658339815191526111b161119b61041a565b610ade600160a060020a03600054163314611269565b0390a1005b346102be5760203660031901126102be57600435600655005b60e060020a634e487b710260009081526041600452602490fd5b601f909101601f19168101906001604060020a0382119082101761120c57604052565b6111cf565b346102be5760003660031901126102be5760408051908101906001604060020a0382118183101761120c5761037991604052600a815260b060020a69312e362e342d62657461026020820152604051918291826102c3565b1561127057565b60405160e560020a62461bcd02815260206004820152601b60248201527f756e617574686f72697a65642c206e6f7420746865206f776e657200000000006044820152606490fd5b9190820180921161064d57565b156112cc57565b60405160e560020a62461bcd0281526020600482015260106024820152608160020a6f3930ba32903634b6b4ba1032b93937b9026044820152606490fd5b600154601e810180911161064d5761132c904211611327816112c5565b6112c5565b42600155600054600160a060020a031690565b600160a060020a039091168152602081019190915260400190565b333203611396577f26875833861a2b006512a11f1b86edf95df96131040f3caeed72989ee98580836040518061139134338361133f565b0390a1565b60405160e560020a62461bcd0281526020600482015260196024820152603860020a787068697368696e672061747461636b2064657465637465643f026044820152606490fd5b7fcc85d09d309785db93d6df19917f2e6cc07fe27cd01c08c8279145deb5cf45266040518061139134338361133f565b1561141457565b60405160e560020a62461bcd0281526020600482015260176024820152604960020a7630b1b1b2b9b9903232b734b2b2103337b91037bbb732b9026044820152606490fd5b600160a060020a0316600090815260046020526040902090565b90600160a060020a0316600052602052604060002090565b1561149257565b60405160e560020a62461bcd02815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f2061646472604482015260e860020a62657373026064820152608490fd5b156114f057565b60405160e560020a62461bcd02815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015260d060020a65616c616e6365026064820152608490fd5b91600160a060020a0380841692909183156115df576115bd827fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef946115da94169661159688151561148b565b6115b7846115a383611459565b546115b0828210156114e9565b0391611459565b55611459565b6115c88282546112b8565b90556040519081529081906020820190565b0390a3565b60405160e560020a62461bcd02815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015260d860020a646472657373026064820152608490fd5b600160a060020a0380821692919083156117075782169384156116b157806116a07f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259461169b6115da95600160a060020a03166000526005602052604060002090565b611473565b556040519081529081906020820190565b60405160e560020a62461bcd02815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015260f060020a617373026064820152608490fd5b60405160e560020a62461bcd028152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f20616464604482015260e060020a6372657373026064820152608490fd5b6040513d6000823e3d90fd5b908101908110610fce5790565b80821161178d5781810391190181036102be5790565b60405160e560020a62461bcd02815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f7700006044820152606490fd5b6119008082029180828404036102be57801561184a578204036117f55790565b60405160e560020a62461bcd02815260206004820152602160248201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f604482015260f860020a6077026064820152608490fd5b60e060020a634e487b710260009081526012600452602490fdfe91ca00fdf29069527d658f8dfc6d1c0bf9861780bb45ff36436f938d3595a8d68be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0b33527d2e0d30b7aece2c5e82927985866c1b75173d671c14f4457bf67aa6910a264697066735822122090082fdbf8277b8ea0299e588a6232ece380725420e0480dbc412f21de8e9e0b64736f6c63430008120033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "531:4609:67:-:0;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;531:4609:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;589:10:19;;531:4609:67;;;;;;;;;;;;;637:15:19;;531:4609:67;;589:10:19;668:44;;;;;531:4609:67;;237:5:17;531:4609:67;;237:5:17;531:4609:67;;;;;;;;;435:13:21;531:4609:67;;;;;;;;;;;;;;-1:-1:-1;531:4609:67;;;;;;;;;;;;;;;-1:-1:-1;531:4609:67;;;;;;;;;;;;;;;-1:-1:-1;;531:4609:67;;;;;-1:-1:-1;;531:4609:67;;;;;;;435:13:21;531:4609:67;;;;;;;;;459:17:21;531:4609:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1555:19;531:4609;;1555:19;531:4609;;;;;;;;;;;;;;-1:-1:-1;531:4609:67;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;531:4609:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;531:4609:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;531:4609:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;531:4609:67;;;;;435:13:21;531:4609:67;;;;;;;-1:-1:-1;531:4609:67;;;;;-1:-1:-1;;531:4609:67;;;;;;;;;;;;;-1:-1:-1;531:4609:67;;;;;;;;435:13:21;531:4609:67;;;;;;;;;;;;;-1:-1:-1;;531:4609:67;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;531:4609:67;;;;;;;;;;;;;;;435:13:21;531:4609:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;531:4609:67;;;;;;;;;;;;;;;;;;;;-1:-1:-1;531:4609:67;;;;;;;;;-1:-1:-1;;531:4609:67;;;-1:-1:-1;;;;;531:4609:67;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;531:4609:67;;;;;;;;;;-1:-1:-1;;531:4609:67;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;531:4609:67;;;;;;;;-1:-1:-1;531:4609:67;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "531:4609:67:-:0;;;;;;;;;-1:-1:-1;531:4609:67;;;;;;:::i;:::-;;;;;:::i;:::-;-1:-1:-1;;;531:4609:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;-1:-1:-1;;;;;531:4609:67;;:::o;:::-;;;;;;-1:-1:-1;;531:4609:67;;;;711:29;531:4609;;;-1:-1:-1;;;;;531:4609:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;531:4609:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;579:5:21;531:4609:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;579:5:21;531:4609:67;;;-1:-1:-1;531:4609:67;;;;;;;;;;-1:-1:-1;;;531:4609:67;;;-1:-1:-1;531:4609:67;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;531:4609:67;;;-1:-1:-1;;;531:4609:67;;;;;;;;-1:-1:-1;531:4609:67;;;;;;;;-1:-1:-1;;;;;531:4609:67;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;531:4609:67;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;531:4609:67;;;;;;:::o;:::-;;;;;;-1:-1:-1;;531:4609:67;;;;1783:6:21;531:4609:67;;:::i;:::-;;;1737:10:21;;1783:6;:::i;:::-;531:4609:67;;;1808:4:21;531:4609:67;;;;;;;;;-1:-1:-1;;531:4609:67;;;;;901:12:21;531:4609:67;;;;;;;;;;;;;-1:-1:-1;;531:4609:67;;;;;;:::i;:::-;-1:-1:-1;531:4609:67;-1:-1:-1;;;;;531:4609:67;;1402:58:19;;531:4609:67;;1410:10:19;:19;1402:58;:::i;:::-;531:4609:67;;;;;;;1883:23;531:4609;;;1883:23;531:4609;-1:-1:-1;531:4609:67;;616:2;-1:-1:-1;;;;;616:2:67;;;;;;;;;;531:4609;;;;;;-1:-1:-1;;531:4609:67;;;;;;;616:2;531:4609;;;;;;;;;-1:-1:-1;;531:4609:67;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;531:4609:67;1580:11:21;531:4609:67;;1580:27:21;1992:10;531:4609:67;-1:-1:-1;531:4609:67;1580:27:21;:::i;:::-;531:4609:67;;5078:37:21;;;5074:248;;531:4609:67;2082:6:21;;;;:::i;:::-;531:4609:67;;2107:4:21;531:4609:67;;;;;5074:248:21;5140:26;;;531:4609:67;;5269:25:21;531:4609:67;2082:6:21;531:4609:67;;1992:10:21;5269:25;;:::i;:::-;5074:248;;531:4609:67;;;-1:-1:-1;;;;;531:4609:67;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;531:4609:67;;;;;;;616:2;531:4609;;;;;;;;;-1:-1:-1;;531:4609:67;;;;;;:::i;:::-;2246:10:21;-1:-1:-1;531:4609:67;2292:11:21;531:4609:67;;2292:27:21;531:4609:67;;-1:-1:-1;531:4609:67;2292:27:21;:::i;:::-;531:4609:67;;;;;;;;;;2292:40:21;2246:10;;2292:40;:::i;531:4609:67:-;;:::i;:::-;;;;;;-1:-1:-1;;531:4609:67;;;;;;;1116:4;531:4609;;;;;;;;;;;;;;;;3554:11;531:4609;-1:-1:-1;;;531:4609:67;;;;3550:37;;3600:28;531:4609;3614:14;531:4609;;:::i;:::-;3600:28;:::i;:::-;:10;:28;3596:70;;901:12:21;531:4609:67;616:2;3722:32;;3719:61;;3860:15;531:4609;3844:12;:31;;3841:78;;616:2;3931:33;3928:67;;3554:11;531:4609;;-1:-1:-1;;;;;;531:4609:67;-1:-1:-1;;;531:4609:67;;;;;;;4061:32;:23;531:4609;3614:14;531:4609;;:::i;4061:32::-;4102:4;4094:21;4061:55;;;;;;531:4609;4061:55;;;;531:4609;;4061:55;;:::i;:::-;;;;;3928:67;531:4609;;-1:-1:-1;;;;;3966:29:67;;531:4609;;3966:29;;531:4609;;;;;;-1:-1:-1;;;;;531:4609:67;;;;;;3966:29;;;;;3841:78;531:4609;;-1:-1:-1;;;;;3877:42:67;;531:4609;3877:42;531:4609;3877:42;;531:4609;;;;;;;;;;;;;;;;;3719:61;531:4609;;-1:-1:-1;;;;;3756:24:67;;531:4609;;3756:24;;531:4609;;;;;;-1:-1:-1;;;;;531:4609:67;;;;;;3966:29;3596:70;531:4609;;-1:-1:-1;;;;;3630:36:67;;531:4609;;3630:36;;531:4609;;;;;;;;;;;;;3966:29;3550:37;531:4609;;-1:-1:-1;;;;;3567:20:67;;531:4609;;3567:20;;531:4609;;;;;;-1:-1:-1;;;;;531:4609:67;;;;;;3966:29;531:4609;;;;;;;;;;;;;4270:11;531:4609;-1:-1:-1;;;531:4609:67;;;;4267:36;;4388:15;531:4609;4372:12;:31;;4368:79;;616:2;901:12:21;531:4609:67;4504:33;;4501:80;;-1:-1:-1;;;;;531:4609:67;4626:10;:28;4623:61;;1123:18:21;4626:10:67;1123:18:21;:::i;:::-;531:4609:67;4744:11;;4740:45;;4810:4;;;;;;4794:39;;;;;531:4609;;;1116:4;531:4609;4857:39;;531:4609;;901:12:21;531:4609:67;4857:39;:::i;:::-;987:21:21;531:4609:67;929:87:21;4857:39:67;531:4609;;;5029:29;4626:10;5029:29;;;;;531:4609;;;;;;;;5029:29;;;;5093:36;;;;;531:4609;4626:10;5093:36;;;;;531:4609;;5093:36;;;;;4740:45;531:4609;;-1:-1:-1;;;;;4757:28:67;;531:4609;;4757:28;;531:4609;;;;;;-1:-1:-1;;;;;531:4609:67;;;;;;3966:29;531:4609;;;;;;-1:-1:-1;;531:4609:67;;;;1402:58:19;531:4609:67;;;;;-1:-1:-1;531:4609:67;;1410:10:19;:19;1402:58;:::i;:::-;531:4609:67;;2025:31;531:4609;;;;;;;;-1:-1:-1;;531:4609:67;;;;;;;616:2;531:4609;;;;;;;;;-1:-1:-1;;531:4609:67;;;;-1:-1:-1;;;;;531:4609:67;;:::i;:::-;;-1:-1:-1;531:4609:67;;;;;;-1:-1:-1;531:4609:67;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;531:4609:67;;1097:56:19;1106:10;:19;;1097:56;:::i;:::-;-1:-1:-1;;;;;;;;;;;2934:39:19;;;-1:-1:-1;;;;;;531:4609:67;;;;;;;;;;;-1:-1:-1;;531:4609:67;;;;1402:58:19;531:4609:67;;;;;-1:-1:-1;531:4609:67;;1410:10:19;:19;1402:58;:::i;:::-;531:4609:67;;2175:29;531:4609;;;;;;;;;;;;;;;1402:58:19;531:4609:67;;;;;;;;1410:10:19;:19;1402:58;:::i;:::-;-1:-1:-1;;;;;;;;;;;333:32:12;1583:7:19;;:::i;:::-;531:4609:67;;;1410:10:19;531:4609:67;;-1:-1:-1;;;;;531:4609:67;;;;;;;;;;;;;;;333:32:12;;;;531:4609:67;;;;;-1:-1:-1;;531:4609:67;;;;;1583:7:19;;:::i;:::-;531:4609:67;;-1:-1:-1;;;;;531:4609:67;;;;;;;;;;;;-1:-1:-1;;531:4609:67;;;;;;;;;820:23;531:4609;;;;;;;;;;;;;;;;;-1:-1:-1;;531:4609:67;;;;;943:30;531:4609;;;;;;;;;;;;;-1:-1:-1;;531:4609:67;;;;;;:::i;:::-;-1:-1:-1;531:4609:67;-1:-1:-1;;;;;531:4609:67;;1402:58:19;;531:4609:67;;1410:10:19;:19;1402:58;:::i;:::-;531:4609:67;;;;;;;1746:23;531:4609;;;1746:23;531:4609;-1:-1:-1;531:4609:67;;;;;;;;;;;;;;;;;;;689:7:21;531:4609:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;689:7:21;531:4609:67;;;-1:-1:-1;531:4609:67;;;;;;;;;;-1:-1:-1;;;531:4609:67;;;-1:-1:-1;531:4609:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;531:4609:67;;;;;;:::i;:::-;;;2495:10:21;;-1:-1:-1;531:4609:67;2543:11:21;531:4609:67;;2543:27:21;531:4609:67;;-1:-1:-1;531:4609:67;2543:27:21;:::i;:::-;531:4609:67;2589:35:21;;;;531:4609:67;;2727:34:21;531:4609:67;;2495:10:21;;2727:34;:::i;531:4609:67:-;;;-1:-1:-1;;;;;531:4609:67;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;531:4609:67;;;;;;;;;;;;;-1:-1:-1;;531:4609:67;;;;643:29;531:4609;;;-1:-1:-1;;;;;531:4609:67;;;;;;;;;;;;;;-1:-1:-1;;531:4609:67;;;;1421:6:21;531:4609:67;;:::i;:::-;;;1379:10:21;;1421:6;:::i;531:4609:67:-;;;;;;;;;;2627:11;531:4609;-1:-1:-1;;;531:4609:67;;;;2623:37;;2688:17;531:4609;2673:12;:32;2669:81;;2778:15;531:4609;2673:12;2763:30;2759:79;;2851:9;:14;2847:49;;2924:46;2851:9;2924:46;:::i;:::-;3039:39;531:4609;901:12:21;531:4609:67;3039:39;:::i;:::-;3140:32;616:2;3140:32;3136:64;;987:21:21;531:4609:67;3282:36;;;;;;;531:4609;3290:10;;;;;;;3282:36;;;;;531:4609;;;;;3290:10;;-1:-1:-1;;;;;;;;;;;3382:29:67;531:4609;;;;3382:29;;;;531:4609;;3282:36;;;-1:-1:-1;3282:36:67;;3136:64;531:4609;;-1:-1:-1;;;;;3174:26:67;;531:4609;;3174:26;;531:4609;;;;;;-1:-1:-1;;;;;531:4609:67;;;;;;3966:29;2847:49;531:4609;;-1:-1:-1;;;;;2867:29:67;;531:4609;;2867:29;;531:4609;;;;;;-1:-1:-1;;;;;531:4609:67;;;;;;3966:29;2759:79;531:4609;;-1:-1:-1;;;;;2795:43:67;;531:4609;;2795:43;;531:4609;;;;;;;;;;;-1:-1:-1;;;;;531:4609:67;;;;;;3966:29;531:4609;;;;;;-1:-1:-1;;531:4609:67;;;;;;;195:10:19;531:4609:67;;;;;;;;;-1:-1:-1;;531:4609:67;;;;;;;616:2;531:4609;;;;;;;;;;;;;;;-1:-1:-1;;;;;531:4609:67;1402:58:19;;531:4609:67;;1410:10:19;:19;1402:58;:::i;:::-;901:12:21;531:4609:67;616:2;2092:137:165;;;;2247:6;;;531:4609:67;;2326:40;;;;;;;987:21:21;531:4609:67;929:87:21;2326:40:67;2378:32;:23;531:4609;616:2;531:4609;;:::i;2378:32::-;:41;;;;;531:4609;616:2;531:4609;;:::i;:::-;;-1:-1:-1;;;;;;;;;;;531:4609:67;;2457:34;;;531:4609;616:2;531:4609;;;;;;;;;-1:-1:-1;;;;;531:4609:67;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;531:4609:67;;;;;904:32;531:4609;;;;;;;;;;;;;-1:-1:-1;;531:4609:67;;;;;1580:27:21;531:4609:67;;:::i;:::-;;;:::i;:::-;-1:-1:-1;;;;;531:4609:67;;;-1:-1:-1;531:4609:67;;;1580:11:21;531:4609:67;;;;;1580:27:21;:::i;:::-;531:4609:67;;;;;;;;;;;;;-1:-1:-1;;531:4609:67;;;;-1:-1:-1;;;;;531:4609:67;;:::i;:::-;;-1:-1:-1;531:4609:67;;;;;;;-1:-1:-1;531:4609:67;;-1:-1:-1;531:4609:67;;;;;-1:-1:-1;;531:4609:67;;;;;;:::i;:::-;-1:-1:-1;531:4609:67;;-1:-1:-1;;;;;;;531:4609:67;;;;;1097:56:19;1106:10;:19;;1097:56;:::i;:::-;531:4609:67;3262:22:19;;;531:4609:67;;3343:37:19;;-1:-1:-1;;;;;;;;;;;3343:37:19;;;-1:-1:-1;;;;;;531:4609:67;;;;;;;;;-1:-1:-1;;;;;531:4609:67;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;531:4609:67;;;;;;;;;;;;;-1:-1:-1;;531:4609:67;;;;-1:-1:-1;;;;;;;;;;;456:32:12;531:4609:67;;:::i;:::-;1402:58:19;531:4609:67;;;;;-1:-1:-1;531:4609:67;;1410:10:19;:19;1402:58;:::i;456:32:12:-;;;;531:4609:67;;;;;;;-1:-1:-1;;531:4609:67;;;;;;987:21:21;531:4609:67;;;-1:-1:-1;;;;;531:4609:67;;;;;;;;;;;;;;;-1:-1:-1;;531:4609:67;;;;-1:-1:-1;;;;;531:4609:67;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;;-1:-1:-1;;531:4609:67;;;;;;;;;;;-1:-1:-1;;;;;531:4609:67;;;;;;;;;;;;;;;-1:-1:-1;;;;;531:4609:67;;;;;;;;;;;:::i;:::-;;;;:::o;:::-;;;-1:-1:-1;;;;;531:4609:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;;;531:4609:67;;;;;;;;;;;;-1:-1:-1;;;;;531:4609:67;;;;;;;728:136:19;792:24;531:4609:67;195:10:19;531:4609:67;;;;;;;1608:79:19;774:15;;:49;765:79;;;:::i;:::-;1608;:::i;:::-;774:15;792:24;531:4609:67;-1:-1:-1;531:4609:67;-1:-1:-1;;;;;531:4609:67;;728:136:19:o;531:4609:67:-;-1:-1:-1;;;;;531:4609:67;;;;;;;;;;;;;;;:::o;2207:182:19:-;2290:10;2277:9;:23;531:4609:67;;2346:35:19;531:4609:67;;2371:9:19;2346:35;2371:9;2290:10;2346:35;;:::i;:::-;;;;2207:182::o;531:4609:67:-;;;-1:-1:-1;;;;;531:4609:67;;;;;;;;;;;;-1:-1:-1;;;;;531:4609:67;;;;;;;2397:108:19;2463:34;531:4609:67;;2487:9:19;2463:34;2487:9;2476:10;2463:34;;:::i;531:4609:67:-;;;;:::o;:::-;;;-1:-1:-1;;;;;531:4609:67;;;;;;;;;;;;-1:-1:-1;;;;;531:4609:67;;;;;;;;-1:-1:-1;;;;;531:4609:67;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;;;531:4609:67;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;531:4609:67;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;;;531:4609:67;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;531:4609:67;;;;;;;2811:671:21;;-1:-1:-1;;;;;531:4609:67;;;;;;2942:18:21;;531:4609:67;;3357:13:21;531:4609:67;3398:26:21;531:4609:67;3398:26:21;531:4609:67;;3021:16:21;3013:64;3021:16;;;3013:64;:::i;:::-;3297:15;3163;;;;:::i;:::-;531:4609:67;3189:72:21;3197:21;;;;3189:72;:::i;:::-;531:4609:67;3297:15:21;;:::i;:::-;531:4609:67;3357:13:21;:::i;:::-;:23;531:4609:67;;;3357:23:21;:::i;:::-;531:4609:67;;;;;;;;;;;;;;;3398:26:21;;;;2811:671::o;531:4609:67:-;;;-1:-1:-1;;;;;531:4609:67;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;531:4609:67;;;;;;;4490:380:21;-1:-1:-1;;;;;531:4609:67;;;;4490:380:21;;4626:19;;531:4609:67;;;;4705:21:21;;;531:4609:67;;4778:18:21;:27;4830:32;4778:18;;4830:32;4778:18;531:4609:67;;;;;;;;4778:11:21;531:4609:67;;;;;;;4778:18:21;:27;:::i;:::-;531:4609:67;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;531:4609:67;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;531:4609:67;;;;;;;;;;-1:-1:-1;;;;;531:4609:67;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;531:4609:67;;;;;;;;;;;;;;;;;1990:322:165;;2092:137;;2247:6;;;531:4609:67;;1990:322:165;:::o;2324:330::-;2414:6;;;531:4609:67;;2486:142:165;;;;;;;;;;2324:330;:::o;531:4609:67:-;;;-1:-1:-1;;;;;531:4609:67;;;;;;;;;;;;;;;;;;;;2666:347:165;1116:4:67;2768:152:165;;;;;;;;;;;531:4609:67;;;;;;2938:10:165;531:4609:67;;2666:347:165;:::o;531:4609:67:-;;;-1:-1:-1;;;;;531:4609:67;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;531:4609:67;;;;;;;;-1:-1:-1;;;;;;531:4609:67;;;;;;;;",
  "source": "// SPDX-License-Identifier: CC-BY-4.0\r\npragma solidity >=0.4.22 <0.9.0;\r\n\r\n/**\r\n * Migrated from https://github.com/brave-intl/basic-attention-token-crowdsale/blob/master/contracts/BAToken.sol\r\n * The original code was built using older solidity syntax that will fail today, @pingleware/contracts refactors\r\n * the code to have a successful build using the current solidity syntax\r\n */\r\n\r\nimport \"../../common/Version.sol\";\r\nimport \"../../common/Frozen.sol\";\r\nimport \"../../common/Token.sol\";\r\nimport \"../../libs/SafeMath.sol\";\r\n\r\ncontract BAToken is Version, Frozen, Token {\r\n    uint256 public constant DECIMALS = 18;\r\n    // contracts\r\n    address public ethFundDeposit;      // deposit address for ETH\r\n    address public batFundDeposit;      // deposit address for BAT User Fund\r\n\r\n    // crowdsale parameters\r\n    bool public isFinalized;              // switched to true in operational state\r\n    uint256 public fundingStartBlock;\r\n    uint256 public fundingEndBlock;\r\n    uint256 public constant batFund = 500 * (10**6) * 10**DECIMALS;   // 500m BAT reserved\r\n    uint256 public constant tokenExchangeRate = 6400; // 6400 BAT tokens per 1 ETH\r\n    uint256 public constant tokenCreationCap =  1500 * (10**6) * 10**DECIMALS;\r\n    uint256 public constant tokenCreationMin =  675 * (10**6) * 10**DECIMALS;\r\n\r\n\r\n    // events\r\n    event LogRefund(address indexed _to, uint256 _value);\r\n    event CreateBAT(address indexed _to, uint256 _value);\r\n\r\n    constructor(string memory _name,string memory _symbol)\r\n        Token(_name,_symbol)\r\n    {\r\n        isFinalized = false;                   //controls pre through crowdsale state\r\n    }\r\n\r\n    function setETHFundsDepositWallet(address wallet)\r\n        public\r\n        okOwner\r\n    {\r\n        ethFundDeposit = wallet;\r\n    }\r\n\r\n    function setBATFundDepositWallet(address wallet)\r\n        public\r\n        okOwner\r\n    {\r\n        batFundDeposit = wallet;\r\n    }\r\n\r\n    function setFundingStartingBlock(uint256 blocknumber)\r\n        public\r\n        okOwner\r\n    {\r\n        fundingStartBlock = blocknumber;\r\n    }\r\n\r\n\r\n    function setFundingEndingBlock(uint256 blocknumber)\r\n        public\r\n        okOwner\r\n    {\r\n        fundingEndBlock = blocknumber;\r\n    }\r\n\r\n    function createBATFund()\r\n        public\r\n        payable\r\n        okOwner\r\n    {\r\n        setTotalSupply(SafeMath.safeAdd(totalSupply(), batFund));\r\n        payable(batFundDeposit).transfer(batFund);    // Deposit to fund\r\n        emit CreateBAT(batFundDeposit, batFund);  // logs fund\r\n    }\r\n\r\n/// @dev Accepts ether and creates new BAT tokens.\r\n    function createTokens() payable external {\r\n      if (isFinalized) revert(\"not active\");\r\n      if (block.number < fundingStartBlock) revert(\"Block number manipulation attempt\");\r\n      if (block.number > fundingEndBlock) revert(\"Block number manipulation attempt\");\r\n      if (msg.value == 0) revert(\"empty request value\");\r\n\r\n      uint256 tokens = SafeMath.safeMul(msg.value, tokenExchangeRate); // check that we're not over totals\r\n      uint256 checkedSupply = SafeMath.safeAdd(totalSupply(), tokens);\r\n\r\n      // return money if something goes wrong\r\n      if (tokenCreationCap < checkedSupply) revert(\"exceeding supply\");  // odd fractions won't be found\r\n\r\n      setTotalSupply(checkedSupply);\r\n      payable(msg.sender).transfer(tokens);  // safeAdd not needed; bad semantics to use here\r\n      emit CreateBAT(msg.sender, tokens);  // logs token creation\r\n    }\r\n\r\n    /// @dev Ends the funding period and sends the ETH home\r\n    function finalize() external {\r\n      if (isFinalized) revert(\"not active\");\r\n      if (msg.sender != ethFundDeposit) revert(\"cannot be the same account\"); // locks finalize to the ultimate ETH owner\r\n      if(totalSupply() < tokenCreationMin) revert(\"exceeds supply\");      // have to sell minimum to move to operational\r\n      if(block.number <= fundingEndBlock) revert(\"lock number manipulation attempt\");\r\n      if(totalSupply() != tokenCreationCap) revert(\"insufficient supply\");\r\n      // move to operational\r\n      isFinalized = true;\r\n      payable(ethFundDeposit).transfer(address(this).balance);\r\n    }\r\n\r\n    /// @dev Allows contributors to recover their ether in the case of a failed funding campaign.\r\n    function refund() external {\r\n      if(isFinalized) revert(\"not active\");                       // prevents refund if operational\r\n      if (block.number <= fundingEndBlock) revert(\"lock number manipulation attempt\"); // prevents refund until sale period is over\r\n      if(totalSupply() >= tokenCreationMin) revert(\"lock number manipulation attempt\");  // no refunds if we sold enough\r\n      if(msg.sender == batFundDeposit) revert(\"insufficient funds\");\r\n      uint256 batVal = balanceOf(msg.sender);\r\n      if (batVal == 0) revert(\"insufficient funds\");\r\n      payable(address(this)).transfer(batVal);\r\n      setTotalSupply(SafeMath.safeSub(totalSupply(), batVal)); // extra safe\r\n      uint256 ethVal = batVal / tokenExchangeRate;     // should be safe; previous throws covers edges\r\n      emit LogRefund(msg.sender, ethVal);               // log it\r\n\r\n      payable(msg.sender).transfer(ethVal);\r\n    }\r\n}",
  "sourcePath": "/Volumes/HOME/pingleware-contracts/contracts/finance/utility/BAToken.sol",
  "ast": {
    "absolutePath": "project:/contracts/finance/utility/BAToken.sol",
    "exportedSymbols": {
      "BAToken": [
        28472
      ],
      "Destructible": [
        3475
      ],
      "ECVerify": [
        47567
      ],
      "Frozen": [
        5153
      ],
      "IToken": [
        41295
      ],
      "Owned": [
        5490
      ],
      "ReentrancyGuard": [
        5530
      ],
      "SafeMath": [
        45527
      ],
      "Token": [
        6116
      ],
      "Version": [
        6122
      ]
    },
    "id": 28473,
    "license": "CC-BY-4.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 28065,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".22",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "39:32:67"
      },
      {
        "absolutePath": "project:/contracts/common/Version.sol",
        "file": "../../common/Version.sol",
        "id": 28066,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 28473,
        "sourceUnit": 6123,
        "src": "389:34:67",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/common/Frozen.sol",
        "file": "../../common/Frozen.sol",
        "id": 28067,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 28473,
        "sourceUnit": 5154,
        "src": "425:33:67",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/common/Token.sol",
        "file": "../../common/Token.sol",
        "id": 28068,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 28473,
        "sourceUnit": 6117,
        "src": "460:32:67",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/libs/SafeMath.sol",
        "file": "../../libs/SafeMath.sol",
        "id": 28069,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 28473,
        "sourceUnit": 45528,
        "src": "494:33:67",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 28070,
              "name": "Version",
              "nameLocations": [
                "551:7:67"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 6122,
              "src": "551:7:67"
            },
            "id": 28071,
            "nodeType": "InheritanceSpecifier",
            "src": "551:7:67"
          },
          {
            "baseName": {
              "id": 28072,
              "name": "Frozen",
              "nameLocations": [
                "560:6:67"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 5153,
              "src": "560:6:67"
            },
            "id": 28073,
            "nodeType": "InheritanceSpecifier",
            "src": "560:6:67"
          },
          {
            "baseName": {
              "id": 28074,
              "name": "Token",
              "nameLocations": [
                "568:5:67"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 6116,
              "src": "568:5:67"
            },
            "id": 28075,
            "nodeType": "InheritanceSpecifier",
            "src": "568:5:67"
          }
        ],
        "canonicalName": "BAToken",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 28472,
        "linearizedBaseContracts": [
          28472,
          6116,
          41295,
          5153,
          3475,
          5490,
          6122
        ],
        "name": "BAToken",
        "nameLocation": "540:7:67",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "functionSelector": "2e0f2625",
            "id": 28078,
            "mutability": "constant",
            "name": "DECIMALS",
            "nameLocation": "605:8:67",
            "nodeType": "VariableDeclaration",
            "scope": 28472,
            "src": "581:37:67",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 28076,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "581:7:67",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3138",
              "id": 28077,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "616:2:67",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_18_by_1",
                "typeString": "int_const 18"
              },
              "value": "18"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "a81c3bdf",
            "id": 28080,
            "mutability": "mutable",
            "name": "ethFundDeposit",
            "nameLocation": "658:14:67",
            "nodeType": "VariableDeclaration",
            "scope": 28472,
            "src": "643:29:67",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 28079,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "643:7:67",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "01a7a8c0",
            "id": 28082,
            "mutability": "mutable",
            "name": "batFundDeposit",
            "nameLocation": "726:14:67",
            "nodeType": "VariableDeclaration",
            "scope": 28472,
            "src": "711:29:67",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 28081,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "711:7:67",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "8d4e4083",
            "id": 28084,
            "mutability": "mutable",
            "name": "isFinalized",
            "nameLocation": "832:11:67",
            "nodeType": "VariableDeclaration",
            "scope": 28472,
            "src": "820:23:67",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 28083,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "820:4:67",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "d648a647",
            "id": 28086,
            "mutability": "mutable",
            "name": "fundingStartBlock",
            "nameLocation": "919:17:67",
            "nodeType": "VariableDeclaration",
            "scope": 28472,
            "src": "904:32:67",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 28085,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "904:7:67",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "91b43d13",
            "id": 28088,
            "mutability": "mutable",
            "name": "fundingEndBlock",
            "nameLocation": "958:15:67",
            "nodeType": "VariableDeclaration",
            "scope": 28472,
            "src": "943:30:67",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 28087,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "943:7:67",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "229a4978",
            "id": 28100,
            "mutability": "constant",
            "name": "batFund",
            "nameLocation": "1004:7:67",
            "nodeType": "VariableDeclaration",
            "scope": 28472,
            "src": "980:62:67",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 28089,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "980:7:67",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "commonType": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "id": 28099,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "commonType": {
                  "typeIdentifier": "t_rational_500000000_by_1",
                  "typeString": "int_const 500000000"
                },
                "id": 28095,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "leftExpression": {
                  "hexValue": "353030",
                  "id": 28090,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1014:3:67",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_500_by_1",
                    "typeString": "int_const 500"
                  },
                  "value": "500"
                },
                "nodeType": "BinaryOperation",
                "operator": "*",
                "rightExpression": {
                  "components": [
                    {
                      "commonType": {
                        "typeIdentifier": "t_rational_1000000_by_1",
                        "typeString": "int_const 1000000"
                      },
                      "id": 28093,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "leftExpression": {
                        "hexValue": "3130",
                        "id": 28091,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1021:2:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "**",
                      "rightExpression": {
                        "hexValue": "36",
                        "id": 28092,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1025:1:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_6_by_1",
                          "typeString": "int_const 6"
                        },
                        "value": "6"
                      },
                      "src": "1021:5:67",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000000_by_1",
                        "typeString": "int_const 1000000"
                      }
                    }
                  ],
                  "id": 28094,
                  "isConstant": false,
                  "isInlineArray": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "nodeType": "TupleExpression",
                  "src": "1020:7:67",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_1000000_by_1",
                    "typeString": "int_const 1000000"
                  }
                },
                "src": "1014:13:67",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_500000000_by_1",
                  "typeString": "int_const 500000000"
                }
              },
              "nodeType": "BinaryOperation",
              "operator": "*",
              "rightExpression": {
                "commonType": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "id": 28098,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "leftExpression": {
                  "hexValue": "3130",
                  "id": 28096,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1030:2:67",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_10_by_1",
                    "typeString": "int_const 10"
                  },
                  "value": "10"
                },
                "nodeType": "BinaryOperation",
                "operator": "**",
                "rightExpression": {
                  "id": 28097,
                  "name": "DECIMALS",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 28078,
                  "src": "1034:8:67",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "src": "1030:12:67",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "src": "1014:28:67",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "4172d080",
            "id": 28103,
            "mutability": "constant",
            "name": "tokenExchangeRate",
            "nameLocation": "1096:17:67",
            "nodeType": "VariableDeclaration",
            "scope": 28472,
            "src": "1072:48:67",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 28101,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1072:7:67",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "36343030",
              "id": 28102,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1116:4:67",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_6400_by_1",
                "typeString": "int_const 6400"
              },
              "value": "6400"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "6f7920fd",
            "id": 28115,
            "mutability": "constant",
            "name": "tokenCreationCap",
            "nameLocation": "1180:16:67",
            "nodeType": "VariableDeclaration",
            "scope": 28472,
            "src": "1156:73:67",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 28104,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1156:7:67",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "commonType": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "id": 28114,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "commonType": {
                  "typeIdentifier": "t_rational_1500000000_by_1",
                  "typeString": "int_const 1500000000"
                },
                "id": 28110,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "leftExpression": {
                  "hexValue": "31353030",
                  "id": 28105,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1200:4:67",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_1500_by_1",
                    "typeString": "int_const 1500"
                  },
                  "value": "1500"
                },
                "nodeType": "BinaryOperation",
                "operator": "*",
                "rightExpression": {
                  "components": [
                    {
                      "commonType": {
                        "typeIdentifier": "t_rational_1000000_by_1",
                        "typeString": "int_const 1000000"
                      },
                      "id": 28108,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "leftExpression": {
                        "hexValue": "3130",
                        "id": 28106,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1208:2:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "**",
                      "rightExpression": {
                        "hexValue": "36",
                        "id": 28107,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1212:1:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_6_by_1",
                          "typeString": "int_const 6"
                        },
                        "value": "6"
                      },
                      "src": "1208:5:67",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000000_by_1",
                        "typeString": "int_const 1000000"
                      }
                    }
                  ],
                  "id": 28109,
                  "isConstant": false,
                  "isInlineArray": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "nodeType": "TupleExpression",
                  "src": "1207:7:67",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_1000000_by_1",
                    "typeString": "int_const 1000000"
                  }
                },
                "src": "1200:14:67",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_1500000000_by_1",
                  "typeString": "int_const 1500000000"
                }
              },
              "nodeType": "BinaryOperation",
              "operator": "*",
              "rightExpression": {
                "commonType": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "id": 28113,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "leftExpression": {
                  "hexValue": "3130",
                  "id": 28111,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1217:2:67",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_10_by_1",
                    "typeString": "int_const 10"
                  },
                  "value": "10"
                },
                "nodeType": "BinaryOperation",
                "operator": "**",
                "rightExpression": {
                  "id": 28112,
                  "name": "DECIMALS",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 28078,
                  "src": "1221:8:67",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "src": "1217:12:67",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "src": "1200:29:67",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "c039daf6",
            "id": 28127,
            "mutability": "constant",
            "name": "tokenCreationMin",
            "nameLocation": "1260:16:67",
            "nodeType": "VariableDeclaration",
            "scope": 28472,
            "src": "1236:72:67",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 28116,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1236:7:67",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "commonType": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "id": 28126,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "commonType": {
                  "typeIdentifier": "t_rational_675000000_by_1",
                  "typeString": "int_const 675000000"
                },
                "id": 28122,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "leftExpression": {
                  "hexValue": "363735",
                  "id": 28117,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1280:3:67",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_675_by_1",
                    "typeString": "int_const 675"
                  },
                  "value": "675"
                },
                "nodeType": "BinaryOperation",
                "operator": "*",
                "rightExpression": {
                  "components": [
                    {
                      "commonType": {
                        "typeIdentifier": "t_rational_1000000_by_1",
                        "typeString": "int_const 1000000"
                      },
                      "id": 28120,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "leftExpression": {
                        "hexValue": "3130",
                        "id": 28118,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1287:2:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "**",
                      "rightExpression": {
                        "hexValue": "36",
                        "id": 28119,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1291:1:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_6_by_1",
                          "typeString": "int_const 6"
                        },
                        "value": "6"
                      },
                      "src": "1287:5:67",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000000_by_1",
                        "typeString": "int_const 1000000"
                      }
                    }
                  ],
                  "id": 28121,
                  "isConstant": false,
                  "isInlineArray": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "nodeType": "TupleExpression",
                  "src": "1286:7:67",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_1000000_by_1",
                    "typeString": "int_const 1000000"
                  }
                },
                "src": "1280:13:67",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_675000000_by_1",
                  "typeString": "int_const 675000000"
                }
              },
              "nodeType": "BinaryOperation",
              "operator": "*",
              "rightExpression": {
                "commonType": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "id": 28125,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "leftExpression": {
                  "hexValue": "3130",
                  "id": 28123,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1296:2:67",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_10_by_1",
                    "typeString": "int_const 10"
                  },
                  "value": "10"
                },
                "nodeType": "BinaryOperation",
                "operator": "**",
                "rightExpression": {
                  "id": 28124,
                  "name": "DECIMALS",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 28078,
                  "src": "1300:8:67",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "src": "1296:12:67",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "src": "1280:28:67",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "eventSelector": "b6c0eca8138e097d71e2dd31e19a1266487f0553f170b7260ffe68bcbe9ff8a7",
            "id": 28133,
            "name": "LogRefund",
            "nameLocation": "1340:9:67",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 28132,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28129,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "1366:3:67",
                  "nodeType": "VariableDeclaration",
                  "scope": 28133,
                  "src": "1350:19:67",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 28128,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1350:7:67",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 28131,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_value",
                  "nameLocation": "1379:6:67",
                  "nodeType": "VariableDeclaration",
                  "scope": 28133,
                  "src": "1371:14:67",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 28130,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1371:7:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1349:37:67"
            },
            "src": "1334:53:67"
          },
          {
            "anonymous": false,
            "eventSelector": "b33527d2e0d30b7aece2c5e82927985866c1b75173d671c14f4457bf67aa6910",
            "id": 28139,
            "name": "CreateBAT",
            "nameLocation": "1399:9:67",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 28138,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28135,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "1425:3:67",
                  "nodeType": "VariableDeclaration",
                  "scope": 28139,
                  "src": "1409:19:67",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 28134,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1409:7:67",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 28137,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_value",
                  "nameLocation": "1438:6:67",
                  "nodeType": "VariableDeclaration",
                  "scope": 28139,
                  "src": "1430:14:67",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 28136,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1430:7:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1408:37:67"
            },
            "src": "1393:53:67"
          },
          {
            "body": {
              "id": 28154,
              "nodeType": "Block",
              "src": "1544:95:67",
              "statements": [
                {
                  "expression": {
                    "id": 28152,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 28150,
                      "name": "isFinalized",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28084,
                      "src": "1555:11:67",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 28151,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1569:5:67",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "1555:19:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 28153,
                  "nodeType": "ExpressionStatement",
                  "src": "1555:19:67"
                }
              ]
            },
            "id": 28155,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 28146,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 28141,
                    "src": "1524:5:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 28147,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 28143,
                    "src": "1530:7:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 28148,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 28145,
                  "name": "Token",
                  "nameLocations": [
                    "1518:5:67"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 6116,
                  "src": "1518:5:67"
                },
                "nodeType": "ModifierInvocation",
                "src": "1518:20:67"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 28144,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28141,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "1480:5:67",
                  "nodeType": "VariableDeclaration",
                  "scope": 28155,
                  "src": "1466:19:67",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 28140,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1466:6:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 28143,
                  "mutability": "mutable",
                  "name": "_symbol",
                  "nameLocation": "1500:7:67",
                  "nodeType": "VariableDeclaration",
                  "scope": 28155,
                  "src": "1486:21:67",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 28142,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1486:6:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1465:43:67"
            },
            "returnParameters": {
              "id": 28149,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1544:0:67"
            },
            "scope": 28472,
            "src": "1454:185:67",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 28166,
              "nodeType": "Block",
              "src": "1735:42:67",
              "statements": [
                {
                  "expression": {
                    "id": 28164,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 28162,
                      "name": "ethFundDeposit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28080,
                      "src": "1746:14:67",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 28163,
                      "name": "wallet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28157,
                      "src": "1763:6:67",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1746:23:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 28165,
                  "nodeType": "ExpressionStatement",
                  "src": "1746:23:67"
                }
              ]
            },
            "functionSelector": "938e961a",
            "id": 28167,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 28160,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 28159,
                  "name": "okOwner",
                  "nameLocations": [
                    "1722:7:67"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 5383,
                  "src": "1722:7:67"
                },
                "nodeType": "ModifierInvocation",
                "src": "1722:7:67"
              }
            ],
            "name": "setETHFundsDepositWallet",
            "nameLocation": "1656:24:67",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 28158,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28157,
                  "mutability": "mutable",
                  "name": "wallet",
                  "nameLocation": "1689:6:67",
                  "nodeType": "VariableDeclaration",
                  "scope": 28167,
                  "src": "1681:14:67",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 28156,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1681:7:67",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1680:16:67"
            },
            "returnParameters": {
              "id": 28161,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1735:0:67"
            },
            "scope": 28472,
            "src": "1647:130:67",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 28178,
              "nodeType": "Block",
              "src": "1872:42:67",
              "statements": [
                {
                  "expression": {
                    "id": 28176,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 28174,
                      "name": "batFundDeposit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28082,
                      "src": "1883:14:67",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 28175,
                      "name": "wallet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28169,
                      "src": "1900:6:67",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1883:23:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 28177,
                  "nodeType": "ExpressionStatement",
                  "src": "1883:23:67"
                }
              ]
            },
            "functionSelector": "19eef575",
            "id": 28179,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 28172,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 28171,
                  "name": "okOwner",
                  "nameLocations": [
                    "1859:7:67"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 5383,
                  "src": "1859:7:67"
                },
                "nodeType": "ModifierInvocation",
                "src": "1859:7:67"
              }
            ],
            "name": "setBATFundDepositWallet",
            "nameLocation": "1794:23:67",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 28170,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28169,
                  "mutability": "mutable",
                  "name": "wallet",
                  "nameLocation": "1826:6:67",
                  "nodeType": "VariableDeclaration",
                  "scope": 28179,
                  "src": "1818:14:67",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 28168,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1818:7:67",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1817:16:67"
            },
            "returnParameters": {
              "id": 28173,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1872:0:67"
            },
            "scope": 28472,
            "src": "1785:129:67",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 28190,
              "nodeType": "Block",
              "src": "2014:50:67",
              "statements": [
                {
                  "expression": {
                    "id": 28188,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 28186,
                      "name": "fundingStartBlock",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28086,
                      "src": "2025:17:67",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 28187,
                      "name": "blocknumber",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28181,
                      "src": "2045:11:67",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2025:31:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 28189,
                  "nodeType": "ExpressionStatement",
                  "src": "2025:31:67"
                }
              ]
            },
            "functionSelector": "5a74c56e",
            "id": 28191,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 28184,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 28183,
                  "name": "okOwner",
                  "nameLocations": [
                    "2001:7:67"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 5383,
                  "src": "2001:7:67"
                },
                "nodeType": "ModifierInvocation",
                "src": "2001:7:67"
              }
            ],
            "name": "setFundingStartingBlock",
            "nameLocation": "1931:23:67",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 28182,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28181,
                  "mutability": "mutable",
                  "name": "blocknumber",
                  "nameLocation": "1963:11:67",
                  "nodeType": "VariableDeclaration",
                  "scope": 28191,
                  "src": "1955:19:67",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 28180,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1955:7:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1954:21:67"
            },
            "returnParameters": {
              "id": 28185,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2014:0:67"
            },
            "scope": 28472,
            "src": "1922:142:67",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 28202,
              "nodeType": "Block",
              "src": "2164:48:67",
              "statements": [
                {
                  "expression": {
                    "id": 28200,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 28198,
                      "name": "fundingEndBlock",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28088,
                      "src": "2175:15:67",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 28199,
                      "name": "blocknumber",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28193,
                      "src": "2193:11:67",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2175:29:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 28201,
                  "nodeType": "ExpressionStatement",
                  "src": "2175:29:67"
                }
              ]
            },
            "functionSelector": "808a59ed",
            "id": 28203,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 28196,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 28195,
                  "name": "okOwner",
                  "nameLocations": [
                    "2151:7:67"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 5383,
                  "src": "2151:7:67"
                },
                "nodeType": "ModifierInvocation",
                "src": "2151:7:67"
              }
            ],
            "name": "setFundingEndingBlock",
            "nameLocation": "2083:21:67",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 28194,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28193,
                  "mutability": "mutable",
                  "name": "blocknumber",
                  "nameLocation": "2113:11:67",
                  "nodeType": "VariableDeclaration",
                  "scope": 28203,
                  "src": "2105:19:67",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 28192,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2105:7:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2104:21:67"
            },
            "returnParameters": {
              "id": 28197,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2164:0:67"
            },
            "scope": 28472,
            "src": "2074:138:67",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 28230,
              "nodeType": "Block",
              "src": "2300:213:67",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 28211,
                              "name": "totalSupply",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5603,
                              "src": "2343:11:67",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                "typeString": "function () view returns (uint256)"
                              }
                            },
                            "id": 28212,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2343:13:67",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 28213,
                            "name": "batFund",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28100,
                            "src": "2358:7:67",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 28209,
                            "name": "SafeMath",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45527,
                            "src": "2326:8:67",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_SafeMath_$45527_$",
                              "typeString": "type(library SafeMath)"
                            }
                          },
                          "id": 28210,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2335:7:67",
                          "memberName": "safeAdd",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 45412,
                          "src": "2326:16:67",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 28214,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2326:40:67",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 28208,
                      "name": "setTotalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5613,
                      "src": "2311:14:67",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 28215,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2311:56:67",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 28216,
                  "nodeType": "ExpressionStatement",
                  "src": "2311:56:67"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 28222,
                        "name": "batFund",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28100,
                        "src": "2411:7:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 28219,
                            "name": "batFundDeposit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28082,
                            "src": "2386:14:67",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 28218,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2378:8:67",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 28217,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2378:8:67",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 28220,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2378:23:67",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 28221,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2402:8:67",
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "2378:32:67",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 28223,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2378:41:67",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 28224,
                  "nodeType": "ExpressionStatement",
                  "src": "2378:41:67"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 28226,
                        "name": "batFundDeposit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28082,
                        "src": "2467:14:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 28227,
                        "name": "batFund",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28100,
                        "src": "2483:7:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 28225,
                      "name": "CreateBAT",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28139,
                      "src": "2457:9:67",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 28228,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2457:34:67",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 28229,
                  "nodeType": "EmitStatement",
                  "src": "2452:39:67"
                }
              ]
            },
            "functionSelector": "d36a1449",
            "id": 28231,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 28206,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 28205,
                  "name": "okOwner",
                  "nameLocations": [
                    "2287:7:67"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 5383,
                  "src": "2287:7:67"
                },
                "nodeType": "ModifierInvocation",
                "src": "2287:7:67"
              }
            ],
            "name": "createBATFund",
            "nameLocation": "2229:13:67",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 28204,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2242:2:67"
            },
            "returnParameters": {
              "id": 28207,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2300:0:67"
            },
            "scope": 28472,
            "src": "2220:293:67",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 28313,
              "nodeType": "Block",
              "src": "2614:829:67",
              "statements": [
                {
                  "condition": {
                    "id": 28235,
                    "name": "isFinalized",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 28084,
                    "src": "2627:11:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 28240,
                  "nodeType": "IfStatement",
                  "src": "2623:37:67",
                  "trueBody": {
                    "expression": {
                      "arguments": [
                        {
                          "hexValue": "6e6f7420616374697665",
                          "id": 28237,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2647:12:67",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_374887c79e5a9f3adf9601b701978b870ca80533f58f38de7839ddf877b30a77",
                            "typeString": "literal_string \"not active\""
                          },
                          "value": "not active"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_374887c79e5a9f3adf9601b701978b870ca80533f58f38de7839ddf877b30a77",
                            "typeString": "literal_string \"not active\""
                          }
                        ],
                        "id": 28236,
                        "name": "revert",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          4294967277,
                          4294967277
                        ],
                        "referencedDeclaration": 4294967277,
                        "src": "2640:6:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                          "typeString": "function (string memory) pure"
                        }
                      },
                      "id": 28238,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2640:20:67",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 28239,
                    "nodeType": "ExpressionStatement",
                    "src": "2640:20:67"
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 28244,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 28241,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967292,
                        "src": "2673:5:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 28242,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2679:6:67",
                      "memberName": "number",
                      "nodeType": "MemberAccess",
                      "src": "2673:12:67",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 28243,
                      "name": "fundingStartBlock",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28086,
                      "src": "2688:17:67",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2673:32:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 28249,
                  "nodeType": "IfStatement",
                  "src": "2669:81:67",
                  "trueBody": {
                    "expression": {
                      "arguments": [
                        {
                          "hexValue": "426c6f636b206e756d626572206d616e6970756c6174696f6e20617474656d7074",
                          "id": 28246,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2714:35:67",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_c91113d4653cc468cd3877d01e84652ef1da9323d3d572348ff6ae3c9f1feda1",
                            "typeString": "literal_string \"Block number manipulation attempt\""
                          },
                          "value": "Block number manipulation attempt"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_c91113d4653cc468cd3877d01e84652ef1da9323d3d572348ff6ae3c9f1feda1",
                            "typeString": "literal_string \"Block number manipulation attempt\""
                          }
                        ],
                        "id": 28245,
                        "name": "revert",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          4294967277,
                          4294967277
                        ],
                        "referencedDeclaration": 4294967277,
                        "src": "2707:6:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                          "typeString": "function (string memory) pure"
                        }
                      },
                      "id": 28247,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2707:43:67",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 28248,
                    "nodeType": "ExpressionStatement",
                    "src": "2707:43:67"
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 28253,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 28250,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967292,
                        "src": "2763:5:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 28251,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2769:6:67",
                      "memberName": "number",
                      "nodeType": "MemberAccess",
                      "src": "2763:12:67",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "id": 28252,
                      "name": "fundingEndBlock",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28088,
                      "src": "2778:15:67",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2763:30:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 28258,
                  "nodeType": "IfStatement",
                  "src": "2759:79:67",
                  "trueBody": {
                    "expression": {
                      "arguments": [
                        {
                          "hexValue": "426c6f636b206e756d626572206d616e6970756c6174696f6e20617474656d7074",
                          "id": 28255,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2802:35:67",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_c91113d4653cc468cd3877d01e84652ef1da9323d3d572348ff6ae3c9f1feda1",
                            "typeString": "literal_string \"Block number manipulation attempt\""
                          },
                          "value": "Block number manipulation attempt"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_c91113d4653cc468cd3877d01e84652ef1da9323d3d572348ff6ae3c9f1feda1",
                            "typeString": "literal_string \"Block number manipulation attempt\""
                          }
                        ],
                        "id": 28254,
                        "name": "revert",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          4294967277,
                          4294967277
                        ],
                        "referencedDeclaration": 4294967277,
                        "src": "2795:6:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                          "typeString": "function (string memory) pure"
                        }
                      },
                      "id": 28256,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2795:43:67",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 28257,
                    "nodeType": "ExpressionStatement",
                    "src": "2795:43:67"
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 28262,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 28259,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "2851:3:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 28260,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2855:5:67",
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "src": "2851:9:67",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 28261,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2864:1:67",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2851:14:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 28267,
                  "nodeType": "IfStatement",
                  "src": "2847:49:67",
                  "trueBody": {
                    "expression": {
                      "arguments": [
                        {
                          "hexValue": "656d70747920726571756573742076616c7565",
                          "id": 28264,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2874:21:67",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_432a950b5c1d5859bb9911ae4af761228e0441703071994e86d378d51c9a2beb",
                            "typeString": "literal_string \"empty request value\""
                          },
                          "value": "empty request value"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_432a950b5c1d5859bb9911ae4af761228e0441703071994e86d378d51c9a2beb",
                            "typeString": "literal_string \"empty request value\""
                          }
                        ],
                        "id": 28263,
                        "name": "revert",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          4294967277,
                          4294967277
                        ],
                        "referencedDeclaration": 4294967277,
                        "src": "2867:6:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                          "typeString": "function (string memory) pure"
                        }
                      },
                      "id": 28265,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2867:29:67",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 28266,
                    "nodeType": "ExpressionStatement",
                    "src": "2867:29:67"
                  }
                },
                {
                  "assignments": [
                    28269
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 28269,
                      "mutability": "mutable",
                      "name": "tokens",
                      "nameLocation": "2915:6:67",
                      "nodeType": "VariableDeclaration",
                      "scope": 28313,
                      "src": "2907:14:67",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 28268,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2907:7:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 28276,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 28272,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2941:3:67",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 28273,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2945:5:67",
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "2941:9:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 28274,
                        "name": "tokenExchangeRate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28103,
                        "src": "2952:17:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 28270,
                        "name": "SafeMath",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45527,
                        "src": "2924:8:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SafeMath_$45527_$",
                          "typeString": "type(library SafeMath)"
                        }
                      },
                      "id": 28271,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2933:7:67",
                      "memberName": "safeMul",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45460,
                      "src": "2924:16:67",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 28275,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2924:46:67",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2907:63:67"
                },
                {
                  "assignments": [
                    28278
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 28278,
                      "mutability": "mutable",
                      "name": "checkedSupply",
                      "nameLocation": "3023:13:67",
                      "nodeType": "VariableDeclaration",
                      "scope": 28313,
                      "src": "3015:21:67",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 28277,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3015:7:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 28285,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 28281,
                          "name": "totalSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5603,
                          "src": "3056:11:67",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                            "typeString": "function () view returns (uint256)"
                          }
                        },
                        "id": 28282,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3056:13:67",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 28283,
                        "name": "tokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28269,
                        "src": "3071:6:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 28279,
                        "name": "SafeMath",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45527,
                        "src": "3039:8:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SafeMath_$45527_$",
                          "typeString": "type(library SafeMath)"
                        }
                      },
                      "id": 28280,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3048:7:67",
                      "memberName": "safeAdd",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45412,
                      "src": "3039:16:67",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 28284,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3039:39:67",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3015:63:67"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 28288,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 28286,
                      "name": "tokenCreationCap",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28115,
                      "src": "3140:16:67",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 28287,
                      "name": "checkedSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28278,
                      "src": "3159:13:67",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3140:32:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 28293,
                  "nodeType": "IfStatement",
                  "src": "3136:64:67",
                  "trueBody": {
                    "expression": {
                      "arguments": [
                        {
                          "hexValue": "657863656564696e6720737570706c79",
                          "id": 28290,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3181:18:67",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_6300268cec61f66e776401d2c67ad056c623724687a399715e6103450a57ff58",
                            "typeString": "literal_string \"exceeding supply\""
                          },
                          "value": "exceeding supply"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_6300268cec61f66e776401d2c67ad056c623724687a399715e6103450a57ff58",
                            "typeString": "literal_string \"exceeding supply\""
                          }
                        ],
                        "id": 28289,
                        "name": "revert",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          4294967277,
                          4294967277
                        ],
                        "referencedDeclaration": 4294967277,
                        "src": "3174:6:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                          "typeString": "function (string memory) pure"
                        }
                      },
                      "id": 28291,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3174:26:67",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 28292,
                    "nodeType": "ExpressionStatement",
                    "src": "3174:26:67"
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 28295,
                        "name": "checkedSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28278,
                        "src": "3259:13:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 28294,
                      "name": "setTotalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5613,
                      "src": "3244:14:67",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 28296,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3244:29:67",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 28297,
                  "nodeType": "ExpressionStatement",
                  "src": "3244:29:67"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 28304,
                        "name": "tokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28269,
                        "src": "3311:6:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 28300,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "3290:3:67",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 28301,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3294:6:67",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3290:10:67",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 28299,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3282:8:67",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 28298,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3282:8:67",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 28302,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3282:19:67",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 28303,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3302:8:67",
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "3282:28:67",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 28305,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3282:36:67",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 28306,
                  "nodeType": "ExpressionStatement",
                  "src": "3282:36:67"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 28308,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3392:3:67",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 28309,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3396:6:67",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3392:10:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 28310,
                        "name": "tokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28269,
                        "src": "3404:6:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 28307,
                      "name": "CreateBAT",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28139,
                      "src": "3382:9:67",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 28311,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3382:29:67",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 28312,
                  "nodeType": "EmitStatement",
                  "src": "3377:34:67"
                }
              ]
            },
            "documentation": {
              "id": 28232,
              "nodeType": "StructuredDocumentation",
              "src": "2517:50:67",
              "text": "@dev Accepts ether and creates new BAT tokens."
            },
            "functionSelector": "b4427263",
            "id": 28314,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createTokens",
            "nameLocation": "2582:12:67",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 28233,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2594:2:67"
            },
            "returnParameters": {
              "id": 28234,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2614:0:67"
            },
            "scope": 28472,
            "src": "2573:870:67",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 28376,
              "nodeType": "Block",
              "src": "3541:583:67",
              "statements": [
                {
                  "condition": {
                    "id": 28318,
                    "name": "isFinalized",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 28084,
                    "src": "3554:11:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 28323,
                  "nodeType": "IfStatement",
                  "src": "3550:37:67",
                  "trueBody": {
                    "expression": {
                      "arguments": [
                        {
                          "hexValue": "6e6f7420616374697665",
                          "id": 28320,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3574:12:67",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_374887c79e5a9f3adf9601b701978b870ca80533f58f38de7839ddf877b30a77",
                            "typeString": "literal_string \"not active\""
                          },
                          "value": "not active"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_374887c79e5a9f3adf9601b701978b870ca80533f58f38de7839ddf877b30a77",
                            "typeString": "literal_string \"not active\""
                          }
                        ],
                        "id": 28319,
                        "name": "revert",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          4294967277,
                          4294967277
                        ],
                        "referencedDeclaration": 4294967277,
                        "src": "3567:6:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                          "typeString": "function (string memory) pure"
                        }
                      },
                      "id": 28321,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3567:20:67",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 28322,
                    "nodeType": "ExpressionStatement",
                    "src": "3567:20:67"
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 28327,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 28324,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "3600:3:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 28325,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3604:6:67",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "3600:10:67",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 28326,
                      "name": "ethFundDeposit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28080,
                      "src": "3614:14:67",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3600:28:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 28332,
                  "nodeType": "IfStatement",
                  "src": "3596:70:67",
                  "trueBody": {
                    "expression": {
                      "arguments": [
                        {
                          "hexValue": "63616e6e6f74206265207468652073616d65206163636f756e74",
                          "id": 28329,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3637:28:67",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_5c85387a8745e1214e3ae69839764a89fefe426593d90340235e2fd85a8de148",
                            "typeString": "literal_string \"cannot be the same account\""
                          },
                          "value": "cannot be the same account"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_5c85387a8745e1214e3ae69839764a89fefe426593d90340235e2fd85a8de148",
                            "typeString": "literal_string \"cannot be the same account\""
                          }
                        ],
                        "id": 28328,
                        "name": "revert",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          4294967277,
                          4294967277
                        ],
                        "referencedDeclaration": 4294967277,
                        "src": "3630:6:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                          "typeString": "function (string memory) pure"
                        }
                      },
                      "id": 28330,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3630:36:67",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 28331,
                    "nodeType": "ExpressionStatement",
                    "src": "3630:36:67"
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 28336,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 28333,
                        "name": "totalSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5603,
                        "src": "3722:11:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                          "typeString": "function () view returns (uint256)"
                        }
                      },
                      "id": 28334,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3722:13:67",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 28335,
                      "name": "tokenCreationMin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28127,
                      "src": "3738:16:67",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3722:32:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 28341,
                  "nodeType": "IfStatement",
                  "src": "3719:61:67",
                  "trueBody": {
                    "expression": {
                      "arguments": [
                        {
                          "hexValue": "6578636565647320737570706c79",
                          "id": 28338,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3763:16:67",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_c39da61abecaa3a55b7a48c9494ae512381993263e6d05c3bdae778a0ab3ac1e",
                            "typeString": "literal_string \"exceeds supply\""
                          },
                          "value": "exceeds supply"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_c39da61abecaa3a55b7a48c9494ae512381993263e6d05c3bdae778a0ab3ac1e",
                            "typeString": "literal_string \"exceeds supply\""
                          }
                        ],
                        "id": 28337,
                        "name": "revert",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          4294967277,
                          4294967277
                        ],
                        "referencedDeclaration": 4294967277,
                        "src": "3756:6:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                          "typeString": "function (string memory) pure"
                        }
                      },
                      "id": 28339,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3756:24:67",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 28340,
                    "nodeType": "ExpressionStatement",
                    "src": "3756:24:67"
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 28345,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 28342,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967292,
                        "src": "3844:5:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 28343,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3850:6:67",
                      "memberName": "number",
                      "nodeType": "MemberAccess",
                      "src": "3844:12:67",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "id": 28344,
                      "name": "fundingEndBlock",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28088,
                      "src": "3860:15:67",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3844:31:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 28350,
                  "nodeType": "IfStatement",
                  "src": "3841:78:67",
                  "trueBody": {
                    "expression": {
                      "arguments": [
                        {
                          "hexValue": "6c6f636b206e756d626572206d616e6970756c6174696f6e20617474656d7074",
                          "id": 28347,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3884:34:67",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_28ef219691391f9da0fecbd7924eae80756c58c3629bf441ac9f2d88239dc386",
                            "typeString": "literal_string \"lock number manipulation attempt\""
                          },
                          "value": "lock number manipulation attempt"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_28ef219691391f9da0fecbd7924eae80756c58c3629bf441ac9f2d88239dc386",
                            "typeString": "literal_string \"lock number manipulation attempt\""
                          }
                        ],
                        "id": 28346,
                        "name": "revert",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          4294967277,
                          4294967277
                        ],
                        "referencedDeclaration": 4294967277,
                        "src": "3877:6:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                          "typeString": "function (string memory) pure"
                        }
                      },
                      "id": 28348,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3877:42:67",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 28349,
                    "nodeType": "ExpressionStatement",
                    "src": "3877:42:67"
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 28354,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 28351,
                        "name": "totalSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5603,
                        "src": "3931:11:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                          "typeString": "function () view returns (uint256)"
                        }
                      },
                      "id": 28352,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3931:13:67",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 28353,
                      "name": "tokenCreationCap",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28115,
                      "src": "3948:16:67",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3931:33:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 28359,
                  "nodeType": "IfStatement",
                  "src": "3928:67:67",
                  "trueBody": {
                    "expression": {
                      "arguments": [
                        {
                          "hexValue": "696e73756666696369656e7420737570706c79",
                          "id": 28356,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3973:21:67",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_3f0897ceffc86c7b08d40eacc7e69cc53ec3b43546c75cf64f6bea9edfc81be7",
                            "typeString": "literal_string \"insufficient supply\""
                          },
                          "value": "insufficient supply"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_3f0897ceffc86c7b08d40eacc7e69cc53ec3b43546c75cf64f6bea9edfc81be7",
                            "typeString": "literal_string \"insufficient supply\""
                          }
                        ],
                        "id": 28355,
                        "name": "revert",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          4294967277,
                          4294967277
                        ],
                        "referencedDeclaration": 4294967277,
                        "src": "3966:6:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                          "typeString": "function (string memory) pure"
                        }
                      },
                      "id": 28357,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3966:29:67",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 28358,
                    "nodeType": "ExpressionStatement",
                    "src": "3966:29:67"
                  }
                },
                {
                  "expression": {
                    "id": 28362,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 28360,
                      "name": "isFinalized",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28084,
                      "src": "4034:11:67",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 28361,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4048:4:67",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "4034:18:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 28363,
                  "nodeType": "ExpressionStatement",
                  "src": "4034:18:67"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 28371,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967268,
                              "src": "4102:4:67",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_BAToken_$28472",
                                "typeString": "contract BAToken"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_BAToken_$28472",
                                "typeString": "contract BAToken"
                              }
                            ],
                            "id": 28370,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4094:7:67",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 28369,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4094:7:67",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 28372,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4094:13:67",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 28373,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4108:7:67",
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "src": "4094:21:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 28366,
                            "name": "ethFundDeposit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28080,
                            "src": "4069:14:67",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 28365,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4061:8:67",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 28364,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4061:8:67",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 28367,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4061:23:67",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 28368,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4085:8:67",
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "4061:32:67",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 28374,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4061:55:67",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 28375,
                  "nodeType": "ExpressionStatement",
                  "src": "4061:55:67"
                }
              ]
            },
            "documentation": {
              "id": 28315,
              "nodeType": "StructuredDocumentation",
              "src": "3451:55:67",
              "text": "@dev Ends the funding period and sends the ETH home"
            },
            "functionSelector": "4bb278f3",
            "id": 28377,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "finalize",
            "nameLocation": "3521:8:67",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 28316,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3529:2:67"
            },
            "returnParameters": {
              "id": 28317,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3541:0:67"
            },
            "scope": 28472,
            "src": "3512:612:67",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 28470,
              "nodeType": "Block",
              "src": "4258:879:67",
              "statements": [
                {
                  "condition": {
                    "id": 28381,
                    "name": "isFinalized",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 28084,
                    "src": "4270:11:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 28386,
                  "nodeType": "IfStatement",
                  "src": "4267:36:67",
                  "trueBody": {
                    "expression": {
                      "arguments": [
                        {
                          "hexValue": "6e6f7420616374697665",
                          "id": 28383,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4290:12:67",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_374887c79e5a9f3adf9601b701978b870ca80533f58f38de7839ddf877b30a77",
                            "typeString": "literal_string \"not active\""
                          },
                          "value": "not active"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_374887c79e5a9f3adf9601b701978b870ca80533f58f38de7839ddf877b30a77",
                            "typeString": "literal_string \"not active\""
                          }
                        ],
                        "id": 28382,
                        "name": "revert",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          4294967277,
                          4294967277
                        ],
                        "referencedDeclaration": 4294967277,
                        "src": "4283:6:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                          "typeString": "function (string memory) pure"
                        }
                      },
                      "id": 28384,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4283:20:67",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 28385,
                    "nodeType": "ExpressionStatement",
                    "src": "4283:20:67"
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 28390,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 28387,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967292,
                        "src": "4372:5:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 28388,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4378:6:67",
                      "memberName": "number",
                      "nodeType": "MemberAccess",
                      "src": "4372:12:67",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "id": 28389,
                      "name": "fundingEndBlock",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28088,
                      "src": "4388:15:67",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4372:31:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 28395,
                  "nodeType": "IfStatement",
                  "src": "4368:79:67",
                  "trueBody": {
                    "expression": {
                      "arguments": [
                        {
                          "hexValue": "6c6f636b206e756d626572206d616e6970756c6174696f6e20617474656d7074",
                          "id": 28392,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4412:34:67",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_28ef219691391f9da0fecbd7924eae80756c58c3629bf441ac9f2d88239dc386",
                            "typeString": "literal_string \"lock number manipulation attempt\""
                          },
                          "value": "lock number manipulation attempt"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_28ef219691391f9da0fecbd7924eae80756c58c3629bf441ac9f2d88239dc386",
                            "typeString": "literal_string \"lock number manipulation attempt\""
                          }
                        ],
                        "id": 28391,
                        "name": "revert",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          4294967277,
                          4294967277
                        ],
                        "referencedDeclaration": 4294967277,
                        "src": "4405:6:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                          "typeString": "function (string memory) pure"
                        }
                      },
                      "id": 28393,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4405:42:67",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 28394,
                    "nodeType": "ExpressionStatement",
                    "src": "4405:42:67"
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 28399,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 28396,
                        "name": "totalSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5603,
                        "src": "4504:11:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                          "typeString": "function () view returns (uint256)"
                        }
                      },
                      "id": 28397,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4504:13:67",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">=",
                    "rightExpression": {
                      "id": 28398,
                      "name": "tokenCreationMin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28127,
                      "src": "4521:16:67",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4504:33:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 28404,
                  "nodeType": "IfStatement",
                  "src": "4501:80:67",
                  "trueBody": {
                    "expression": {
                      "arguments": [
                        {
                          "hexValue": "6c6f636b206e756d626572206d616e6970756c6174696f6e20617474656d7074",
                          "id": 28401,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4546:34:67",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_28ef219691391f9da0fecbd7924eae80756c58c3629bf441ac9f2d88239dc386",
                            "typeString": "literal_string \"lock number manipulation attempt\""
                          },
                          "value": "lock number manipulation attempt"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_28ef219691391f9da0fecbd7924eae80756c58c3629bf441ac9f2d88239dc386",
                            "typeString": "literal_string \"lock number manipulation attempt\""
                          }
                        ],
                        "id": 28400,
                        "name": "revert",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          4294967277,
                          4294967277
                        ],
                        "referencedDeclaration": 4294967277,
                        "src": "4539:6:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                          "typeString": "function (string memory) pure"
                        }
                      },
                      "id": 28402,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4539:42:67",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 28403,
                    "nodeType": "ExpressionStatement",
                    "src": "4539:42:67"
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 28408,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 28405,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "4626:3:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 28406,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4630:6:67",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "4626:10:67",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 28407,
                      "name": "batFundDeposit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28082,
                      "src": "4640:14:67",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4626:28:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 28413,
                  "nodeType": "IfStatement",
                  "src": "4623:61:67",
                  "trueBody": {
                    "expression": {
                      "arguments": [
                        {
                          "hexValue": "696e73756666696369656e742066756e6473",
                          "id": 28410,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4663:20:67",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_c6bc4f5b747fbbc581777f92b42c6eac56dbbb4e624c68b8c1a6001ff2001fc5",
                            "typeString": "literal_string \"insufficient funds\""
                          },
                          "value": "insufficient funds"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_c6bc4f5b747fbbc581777f92b42c6eac56dbbb4e624c68b8c1a6001ff2001fc5",
                            "typeString": "literal_string \"insufficient funds\""
                          }
                        ],
                        "id": 28409,
                        "name": "revert",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          4294967277,
                          4294967277
                        ],
                        "referencedDeclaration": 4294967277,
                        "src": "4656:6:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                          "typeString": "function (string memory) pure"
                        }
                      },
                      "id": 28411,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4656:28:67",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 28412,
                    "nodeType": "ExpressionStatement",
                    "src": "4656:28:67"
                  }
                },
                {
                  "assignments": [
                    28415
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 28415,
                      "mutability": "mutable",
                      "name": "batVal",
                      "nameLocation": "4701:6:67",
                      "nodeType": "VariableDeclaration",
                      "scope": 28470,
                      "src": "4693:14:67",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 28414,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4693:7:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 28420,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 28417,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "4720:3:67",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 28418,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4724:6:67",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4720:10:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 28416,
                      "name": "balanceOf",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5626,
                      "src": "4710:9:67",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view returns (uint256)"
                      }
                    },
                    "id": 28419,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4710:21:67",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4693:38:67"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 28423,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 28421,
                      "name": "batVal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28415,
                      "src": "4744:6:67",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 28422,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4754:1:67",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "4744:11:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 28428,
                  "nodeType": "IfStatement",
                  "src": "4740:45:67",
                  "trueBody": {
                    "expression": {
                      "arguments": [
                        {
                          "hexValue": "696e73756666696369656e742066756e6473",
                          "id": 28425,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4764:20:67",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_c6bc4f5b747fbbc581777f92b42c6eac56dbbb4e624c68b8c1a6001ff2001fc5",
                            "typeString": "literal_string \"insufficient funds\""
                          },
                          "value": "insufficient funds"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_c6bc4f5b747fbbc581777f92b42c6eac56dbbb4e624c68b8c1a6001ff2001fc5",
                            "typeString": "literal_string \"insufficient funds\""
                          }
                        ],
                        "id": 28424,
                        "name": "revert",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          4294967277,
                          4294967277
                        ],
                        "referencedDeclaration": 4294967277,
                        "src": "4757:6:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                          "typeString": "function (string memory) pure"
                        }
                      },
                      "id": 28426,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4757:28:67",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 28427,
                    "nodeType": "ExpressionStatement",
                    "src": "4757:28:67"
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 28437,
                        "name": "batVal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28415,
                        "src": "4826:6:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 28433,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967268,
                                "src": "4810:4:67",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_BAToken_$28472",
                                  "typeString": "contract BAToken"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_BAToken_$28472",
                                  "typeString": "contract BAToken"
                                }
                              ],
                              "id": 28432,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4802:7:67",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 28431,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "4802:7:67",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 28434,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4802:13:67",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 28430,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4794:8:67",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 28429,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4794:8:67",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 28435,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4794:22:67",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 28436,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4817:8:67",
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "4794:31:67",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 28438,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4794:39:67",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 28439,
                  "nodeType": "ExpressionStatement",
                  "src": "4794:39:67"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 28443,
                              "name": "totalSupply",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5603,
                              "src": "4874:11:67",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                "typeString": "function () view returns (uint256)"
                              }
                            },
                            "id": 28444,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4874:13:67",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 28445,
                            "name": "batVal",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28415,
                            "src": "4889:6:67",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 28441,
                            "name": "SafeMath",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45527,
                            "src": "4857:8:67",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_SafeMath_$45527_$",
                              "typeString": "type(library SafeMath)"
                            }
                          },
                          "id": 28442,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4866:7:67",
                          "memberName": "safeSub",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 45435,
                          "src": "4857:16:67",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 28446,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4857:39:67",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 28440,
                      "name": "setTotalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5613,
                      "src": "4842:14:67",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 28447,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4842:55:67",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 28448,
                  "nodeType": "ExpressionStatement",
                  "src": "4842:55:67"
                },
                {
                  "assignments": [
                    28450
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 28450,
                      "mutability": "mutable",
                      "name": "ethVal",
                      "nameLocation": "4928:6:67",
                      "nodeType": "VariableDeclaration",
                      "scope": 28470,
                      "src": "4920:14:67",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 28449,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4920:7:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 28454,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 28453,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 28451,
                      "name": "batVal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28415,
                      "src": "4937:6:67",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "id": 28452,
                      "name": "tokenExchangeRate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28103,
                      "src": "4946:17:67",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4937:26:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4920:43:67"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 28456,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "5039:3:67",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 28457,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5043:6:67",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5039:10:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 28458,
                        "name": "ethVal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28450,
                        "src": "5051:6:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 28455,
                      "name": "LogRefund",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28133,
                      "src": "5029:9:67",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 28459,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5029:29:67",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 28460,
                  "nodeType": "EmitStatement",
                  "src": "5024:34:67"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 28467,
                        "name": "ethVal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28450,
                        "src": "5122:6:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 28463,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "5101:3:67",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 28464,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5105:6:67",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "5101:10:67",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 28462,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5093:8:67",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 28461,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5093:8:67",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 28465,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5093:19:67",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 28466,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5113:8:67",
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "5093:28:67",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 28468,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5093:36:67",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 28469,
                  "nodeType": "ExpressionStatement",
                  "src": "5093:36:67"
                }
              ]
            },
            "documentation": {
              "id": 28378,
              "nodeType": "StructuredDocumentation",
              "src": "4132:93:67",
              "text": "@dev Allows contributors to recover their ether in the case of a failed funding campaign."
            },
            "functionSelector": "590e1ae3",
            "id": 28471,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "refund",
            "nameLocation": "4240:6:67",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 28379,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4246:2:67"
            },
            "returnParameters": {
              "id": 28380,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4258:0:67"
            },
            "scope": 28472,
            "src": "4231:906:67",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 28473,
        "src": "531:4609:67",
        "usedErrors": []
      }
    ],
    "src": "39:5101:67"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.18+commit.87f61d96.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.12",
  "updatedAt": "2024-05-23T18:56:25.960Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "createTokens()": {
        "details": "Accepts ether and creates new BAT tokens."
      },
      "finalize()": {
        "details": "Ends the funding period and sends the ETH home"
      },
      "refund()": {
        "details": "Allows contributors to recover their ether in the case of a failed funding campaign."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}