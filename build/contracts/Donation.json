{
  "contractName": "Donation",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "FallbackEvent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "ReceiveEvent",
      "type": "event"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "VERSION",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "WAIT",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    },
    {
      "inputs": [],
      "name": "donate",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "moveFund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"FallbackEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ReceiveEvent\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WAIT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"donate\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"moveFund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/non-profit/Donation.sol\":\"Donation\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[],\"viaIR\":true},\"sources\":{\"project:/contracts/common/Owned.sol\":{\"keccak256\":\"0x70b5d810421ce2fb7f4ca6e84429a3363ce70149179e26cfc08d3dfaa58ec9cf\",\"license\":\"CC-BY-4.0\",\"urls\":[\"bzz-raw://d47b6af54361f7c634897d3c11f3e34c4a086ce771ffcb9105fd4490471e3523\",\"dweb:/ipfs/QmZiTEchqHUvPGrYDKVd5tbarTFYxsjWsiB7D9R6ecmL6n\"]},\"project:/contracts/common/ReentrancyGuard.sol\":{\"keccak256\":\"0x53b711e6d31b96e71abf2252156ae0d06d145ad0fcdcb19d01ef026cac9686e7\",\"license\":\"CC-BY-4.0\",\"urls\":[\"bzz-raw://a74125750675bde70e958756c24892d8e930764b506e72cb586ec9663e65e269\",\"dweb:/ipfs/QmdXpkNZ9cBALh3zZd8jYWcwTH2XYvLvp19pJWEXAQ5hAm\"]},\"project:/contracts/common/Version.sol\":{\"keccak256\":\"0x90d05a30d71e57db083bbff1b497e29e287d5e7110731e226b619b137baf9d72\",\"license\":\"CC-BY-4.0\",\"urls\":[\"bzz-raw://57ec20c8ecc4481268b0902169e2954dd407ef3cde738a5e0dc856c5ad59f2b6\",\"dweb:/ipfs/QmNniGpizWnGbmHDpNEc4ru17MJnxsg7R3FReZjqThBL9b\"]},\"project:/contracts/libs/ecverify.sol\":{\"keccak256\":\"0x7a9d362ccc49715a3c3cc1de529df39f723b5b70f2eefd17f2f14d8139af381b\",\"license\":\"CC-BY-4.0\",\"urls\":[\"bzz-raw://a48e0036fc134b9eb423f2c228097d780d122fa2f06210be1f252e52a5466493\",\"dweb:/ipfs/Qmb9yVvUziQpVDFWUMcvbhpTpK9ZKtuDbLUoS2bcjzKcZG\"]},\"project:/contracts/non-profit/Donation.sol\":{\"keccak256\":\"0xa25dbe5e91ba40fd8b5490adbba7f1f75a56c8ec01c2491b0e941ac2c3a638d7\",\"license\":\"CC-BY-4.0\",\"urls\":[\"bzz-raw://5b70183d96965b1ff13bc9935303143cbb7bdb8dc474c732d9d7fa34703e4bd7\",\"dweb:/ipfs/QmZRntajSmBu3jjTcJxkrHrGUPP5ZBxSxrPBdr1rwRHVqC\"]}},\"version\":1}",
  "bytecode": "0x608080604052346100535760008054600160a060020a03191633908117825542600155907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08180a36105b790816100598239f35b600080fdfe6040608081526004803610156100c4575b361561009557333203610051577f26875833861a2b006512a11f1b86edf95df96131040f3caeed72989ee985808382518061004c3433836104fa565b0390a1005b6020606492519160e560020a62461bcd02835282015260196024820152603860020a787068697368696e672061747461636b2064657465637465643f026044820152fd5b7fcc85d09d309785db93d6df19917f2e6cc07fe27cd01c08c8279145deb5cf452682518061004c3433836104fa565b600060e060020a8135046336a22e14811461040e578063715018a6146103c6578063893d20e81461039d578063b8fb3a511461037d578063ed88c68e1461028c578063f2fde38b146101ca5763ffa1ad74146101205750610010565b9190346101c657826003193601126101c657815190818301906001604060020a038211838310176101b057508252600a815260209060b060020a69312e362e342d62657461028282015282519382859384528251928382860152825b84811061019a57505050828201840152601f01601f19168101030190f35b818101830151888201880152879550820161017c565b60e060020a634e487b7102855260419052602484fd5b8280fd5b50919060203660031901126101c657600160a060020a0381358181169391929084900361028857845492831691610202833314610515565b841561022e57505082906000805160206105628339815191528580a3600160a060020a03191617815580f35b5160e560020a62461bcd028152602091810191909152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061604482015260d060020a65646472657373026064820152608490fd5b8480fd5b5091826003193601126101c657341561033d5782808080343082f115610332575060035490604060020a82101561031c5760018201806003558210156103065750600382527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b018054600160a060020a0319163317905580f35b60e060020a634e487b7102835260329052602482fd5b60e060020a634e487b7102835260419052602482fd5b51913d9150823e3d90fd5b5160e560020a62461bcd02815260209181019190915260126024820152607060020a71696e73756666696369656e742066756e6473026044820152606490fd5b50823461039957816003193601126103995760209051601e8152f35b5080fd5b508281600319360112610399576020906103b56104ab565b9051600160a060020a039091168152f35b508060031936011261040b57805481600160a060020a0382166103ea338214610515565b6000805160206105628339815191528280a3600160a060020a031916815580f35b80fd5b5082816003193601126103995781808080600160a060020a03610435818354163314610515565b61043d6104ab565b1630319082821561045d575bf115610453575080f35b51903d90823e3d90fd5b506108fc610449565b1561046d57565b60405160e560020a62461bcd0281526020600482015260106024820152608160020a6f3930ba32903634b6b4ba1032b93937b9026044820152606490fd5b600154601e81018091116104e0576104cd9042116104c881610466565b610466565b42600155600054600160a060020a031690565b60e060020a634e487b710260009081526011600452602490fd5b600160a060020a039091168152602081019190915260400190565b1561051c57565b60405160e560020a62461bcd0281526020600482015260176024820152604960020a7630b1b1b2b9b9903232b734b2b2103337b91037bbb732b9026044820152606490fdfe8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0a2646970667358221220c902aab93064e22c04672a4faffc02612fae13cc2c04eb63c75b6d7a7de73bc764736f6c63430008120033",
  "deployedBytecode": "0x6040608081526004803610156100c4575b361561009557333203610051577f26875833861a2b006512a11f1b86edf95df96131040f3caeed72989ee985808382518061004c3433836104fa565b0390a1005b6020606492519160e560020a62461bcd02835282015260196024820152603860020a787068697368696e672061747461636b2064657465637465643f026044820152fd5b7fcc85d09d309785db93d6df19917f2e6cc07fe27cd01c08c8279145deb5cf452682518061004c3433836104fa565b600060e060020a8135046336a22e14811461040e578063715018a6146103c6578063893d20e81461039d578063b8fb3a511461037d578063ed88c68e1461028c578063f2fde38b146101ca5763ffa1ad74146101205750610010565b9190346101c657826003193601126101c657815190818301906001604060020a038211838310176101b057508252600a815260209060b060020a69312e362e342d62657461028282015282519382859384528251928382860152825b84811061019a57505050828201840152601f01601f19168101030190f35b818101830151888201880152879550820161017c565b60e060020a634e487b7102855260419052602484fd5b8280fd5b50919060203660031901126101c657600160a060020a0381358181169391929084900361028857845492831691610202833314610515565b841561022e57505082906000805160206105628339815191528580a3600160a060020a03191617815580f35b5160e560020a62461bcd028152602091810191909152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061604482015260d060020a65646472657373026064820152608490fd5b8480fd5b5091826003193601126101c657341561033d5782808080343082f115610332575060035490604060020a82101561031c5760018201806003558210156103065750600382527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b018054600160a060020a0319163317905580f35b60e060020a634e487b7102835260329052602482fd5b60e060020a634e487b7102835260419052602482fd5b51913d9150823e3d90fd5b5160e560020a62461bcd02815260209181019190915260126024820152607060020a71696e73756666696369656e742066756e6473026044820152606490fd5b50823461039957816003193601126103995760209051601e8152f35b5080fd5b508281600319360112610399576020906103b56104ab565b9051600160a060020a039091168152f35b508060031936011261040b57805481600160a060020a0382166103ea338214610515565b6000805160206105628339815191528280a3600160a060020a031916815580f35b80fd5b5082816003193601126103995781808080600160a060020a03610435818354163314610515565b61043d6104ab565b1630319082821561045d575bf115610453575080f35b51903d90823e3d90fd5b506108fc610449565b1561046d57565b60405160e560020a62461bcd0281526020600482015260106024820152608160020a6f3930ba32903634b6b4ba1032b93937b9026044820152606490fd5b600154601e81018091116104e0576104cd9042116104c881610466565b610466565b42600155600054600160a060020a031690565b60e060020a634e487b710260009081526011600452602490fd5b600160a060020a039091168152602081019190915260400190565b1561051c57565b60405160e560020a62461bcd0281526020600482015260176024820152604960020a7630b1b1b2b9b9903232b734b2b2103337b91037bbb732b9026044820152606490fdfe8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0a2646970667358221220c902aab93064e22c04672a4faffc02612fae13cc2c04eb63c75b6d7a7de73bc764736f6c63430008120033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "141:630:176:-:0;;;;;;;287:1:19;141:630:176;;-1:-1:-1;;;;;;141:630:176;589:10:19;141:630:176;;;;;637:15:19;141:630:176;;589:10:19;668:44;287:1;;668:44;141:630:176;;;;;;;;;;",
  "deployedSourceMap": "141:630:176:-:0;;;;;;;;;;;-1:-1:-1;141:630:176;;;;2290:10:19;2277:9;:23;141:630:176;;2346:35:19;141:630:176;;2371:9:19;2346:35;2371:9;2290:10;2346:35;;:::i;:::-;;;;141:630:176;;;;;;317:28;;;;;;141:630;;;;;;;;;;-1:-1:-1;;;;;141:630:176;;;;;;2463:34:19;141:630:176;;2487:9:19;2463:34;2487:9;2476:10;2463:34;;:::i;141:630:176:-;;-1:-1:-1;;;141:630:176;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;141:630:176;;;;;;;;;;;;;;;;-1:-1:-1;;;;;141:630:176;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;141:630:176;;;;;;;;-1:-1:-1;;141:630:176;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;141:630:176;;;;;-1:-1:-1;;;;;141:630:176;;;;;;;;;;;;;-1:-1:-1;141:630:176;;;;-1:-1:-1;;141:630:176;;;;-1:-1:-1;;;;;141:630:176;;;;;;;;;;;;;;;;;;;1106:10:19;1097:56;1106:10;;:19;1097:56;:::i;:::-;3262:22;;141:630:176;;3343:37:19;;;;-1:-1:-1;;;;;;;;;;;3343:37:19;;;-1:-1:-1;;;;;;141:630:176;;;;;;;;-1:-1:-1;;;;;141:630:176;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;141:630:176;;;;;;;;;;;;;;;;;;;;;;286:9;:14;282:75;;286:9;;;;;453:4;437:42;;;;;-1:-1:-1;141:630:176;;;-1:-1:-1;;;141:630:176;;;;;;;;;;;;;;;;-1:-1:-1;141:630:176;;;;;;;-1:-1:-1;;;;;;141:630:176;499:10;141:630;;;;;;-1:-1:-1;;;;;141:630:176;;;;;;;;;-1:-1:-1;;;;;141:630:176;;;;;;;;437:42;141:630;;;;-1:-1:-1;141:630:176;;;;;282:75;141:630;-1:-1:-1;;;;;317:28:176;;141:630;317:28;;;141:630;;;;;;;;;-1:-1:-1;;;;;141:630:176;;;;;;317:28;141:630;;;;;;;;;;;;;;;;;195:10:19;141:630:176;;;;;;;;;;;;;;;;;;;1583:7:19;;;:::i;:::-;141:630:176;;-1:-1:-1;;;;;141:630:176;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;141:630:176;;1097:56:19;1106:10;:19;;1097:56;:::i;:::-;-1:-1:-1;;;;;;;;;;;2934:39:19;;;-1:-1:-1;;;;;;141:630:176;;;;;;;;;;;;;;;;;;;;;;;;;;;;1097:56:19;141:630:176;;;;1106:10:19;:19;1097:56;:::i;:::-;1583:7;;:::i;:::-;141:630:176;649:4;641:21;612:51;;;;;;141:630;612:51;;;;141:630;;;612:51;141:630;;;;;;;;;612:51;;;;;141:630;;;;:::o;:::-;;;-1:-1:-1;;;;;141:630:176;;;;;;;;;;;;-1:-1:-1;;;;;141:630:176;;;;;;;728:136:19;792:24;141:630:176;195:10:19;141:630:176;;;;;;;1608:79:19;774:15;;:49;765:79;;;:::i;:::-;1608;:::i;:::-;774:15;792:24;141:630:176;-1:-1:-1;141:630:176;-1:-1:-1;;;;;141:630:176;;728:136:19:o;141:630:176:-;-1:-1:-1;;;;;141:630:176;;;;;;;;;;;-1:-1:-1;;;;;141:630:176;;;;;;;;;;;;;;;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;;;141:630:176;;;;;;;;;;;;-1:-1:-1;;;;;141:630:176;;;;;;",
  "source": "// SPDX-License-Identifier: CC-BY-4.0\r\npragma solidity >=0.4.22 <0.9.0;\r\n\r\nimport \"../common/Version.sol\";\r\nimport \"../common/Owned.sol\";\r\n\r\ncontract Donation is Version, Owned {\r\n\r\n    address[] _giver;\r\n\r\n\r\n\r\n    function donate()\r\n        public\r\n        payable\r\n    {\r\n        if (msg.value == 0) {\r\n            revert(\"insufficient funds\");\r\n        }\r\n        // transfer donation to the contract from the sender (donor)\r\n        payable(address(this)).transfer(msg.value);\r\n        addGiver(msg.sender);\r\n    }\r\n\r\n    function moveFund()\r\n        public\r\n        payable\r\n        onlyOwner\r\n    {\r\n      payable(getOwner()).transfer(address(this).balance);\r\n    }\r\n\r\n\r\n    function addGiver(address _a)\r\n        internal\r\n    {\r\n        _giver.push(_a);\r\n    }\r\n}\r\n",
  "sourcePath": "/Volumes/HOME/pingleware-contracts/contracts/non-profit/Donation.sol",
  "ast": {
    "absolutePath": "project:/contracts/non-profit/Donation.sol",
    "exportedSymbols": {
      "Donation": [
        48669
      ],
      "ECVerify": [
        47567
      ],
      "Owned": [
        5490
      ],
      "ReentrancyGuard": [
        5530
      ],
      "Version": [
        6122
      ]
    },
    "id": 48670,
    "license": "CC-BY-4.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 48597,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".22",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "39:32:176"
      },
      {
        "absolutePath": "project:/contracts/common/Version.sol",
        "file": "../common/Version.sol",
        "id": 48598,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 48670,
        "sourceUnit": 6123,
        "src": "75:31:176",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/common/Owned.sol",
        "file": "../common/Owned.sol",
        "id": 48599,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 48670,
        "sourceUnit": 5491,
        "src": "108:29:176",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 48600,
              "name": "Version",
              "nameLocations": [
                "162:7:176"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 6122,
              "src": "162:7:176"
            },
            "id": 48601,
            "nodeType": "InheritanceSpecifier",
            "src": "162:7:176"
          },
          {
            "baseName": {
              "id": 48602,
              "name": "Owned",
              "nameLocations": [
                "171:5:176"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 5490,
              "src": "171:5:176"
            },
            "id": 48603,
            "nodeType": "InheritanceSpecifier",
            "src": "171:5:176"
          }
        ],
        "canonicalName": "Donation",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 48669,
        "linearizedBaseContracts": [
          48669,
          5490,
          6122
        ],
        "name": "Donation",
        "nameLocation": "150:8:176",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 48606,
            "mutability": "mutable",
            "name": "_giver",
            "nameLocation": "196:6:176",
            "nodeType": "VariableDeclaration",
            "scope": 48669,
            "src": "186:16:176",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 48604,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "186:7:176",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 48605,
              "nodeType": "ArrayTypeName",
              "src": "186:9:176",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 48636,
              "nodeType": "Block",
              "src": "271:247:176",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 48612,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 48609,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "286:3:176",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 48610,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "290:5:176",
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "src": "286:9:176",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 48611,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "299:1:176",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "286:14:176",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 48618,
                  "nodeType": "IfStatement",
                  "src": "282:75:176",
                  "trueBody": {
                    "id": 48617,
                    "nodeType": "Block",
                    "src": "302:55:176",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "696e73756666696369656e742066756e6473",
                              "id": 48614,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "324:20:176",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c6bc4f5b747fbbc581777f92b42c6eac56dbbb4e624c68b8c1a6001ff2001fc5",
                                "typeString": "literal_string \"insufficient funds\""
                              },
                              "value": "insufficient funds"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_c6bc4f5b747fbbc581777f92b42c6eac56dbbb4e624c68b8c1a6001ff2001fc5",
                                "typeString": "literal_string \"insufficient funds\""
                              }
                            ],
                            "id": 48613,
                            "name": "revert",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967277,
                              4294967277
                            ],
                            "referencedDeclaration": 4294967277,
                            "src": "317:6:176",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory) pure"
                            }
                          },
                          "id": 48615,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "317:28:176",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 48616,
                        "nodeType": "ExpressionStatement",
                        "src": "317:28:176"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 48627,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "469:3:176",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 48628,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "473:5:176",
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "469:9:176",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 48623,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967268,
                                "src": "453:4:176",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Donation_$48669",
                                  "typeString": "contract Donation"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_Donation_$48669",
                                  "typeString": "contract Donation"
                                }
                              ],
                              "id": 48622,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "445:7:176",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 48621,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "445:7:176",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 48624,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "445:13:176",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 48620,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "437:8:176",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 48619,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "437:8:176",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 48625,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "437:22:176",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 48626,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "460:8:176",
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "437:31:176",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 48629,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "437:42:176",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48630,
                  "nodeType": "ExpressionStatement",
                  "src": "437:42:176"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 48632,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "499:3:176",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 48633,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "503:6:176",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "499:10:176",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 48631,
                      "name": "addGiver",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48668,
                      "src": "490:8:176",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 48634,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "490:20:176",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48635,
                  "nodeType": "ExpressionStatement",
                  "src": "490:20:176"
                }
              ]
            },
            "functionSelector": "ed88c68e",
            "id": 48637,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "donate",
            "nameLocation": "224:6:176",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 48607,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "230:2:176"
            },
            "returnParameters": {
              "id": 48608,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "271:0:176"
            },
            "scope": 48669,
            "src": "215:303:176",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 48655,
              "nodeType": "Block",
              "src": "603:68:176",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 48650,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967268,
                              "src": "649:4:176",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Donation_$48669",
                                "typeString": "contract Donation"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Donation_$48669",
                                "typeString": "contract Donation"
                              }
                            ],
                            "id": 48649,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "641:7:176",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 48648,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "641:7:176",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 48651,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "641:13:176",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 48652,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "655:7:176",
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "src": "641:21:176",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 48644,
                              "name": "getOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5408,
                              "src": "620:8:176",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_address_$",
                                "typeString": "function () returns (address)"
                              }
                            },
                            "id": 48645,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "620:10:176",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 48643,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "612:8:176",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 48642,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "612:8:176",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 48646,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "612:19:176",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 48647,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "632:8:176",
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "612:28:176",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 48653,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "612:51:176",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48654,
                  "nodeType": "ExpressionStatement",
                  "src": "612:51:176"
                }
              ]
            },
            "functionSelector": "36a22e14",
            "id": 48656,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 48640,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 48639,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "588:9:176"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 5358,
                  "src": "588:9:176"
                },
                "nodeType": "ModifierInvocation",
                "src": "588:9:176"
              }
            ],
            "name": "moveFund",
            "nameLocation": "535:8:176",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 48638,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "543:2:176"
            },
            "returnParameters": {
              "id": 48641,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "603:0:176"
            },
            "scope": 48669,
            "src": "526:145:176",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 48667,
              "nodeType": "Block",
              "src": "734:34:176",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 48664,
                        "name": "_a",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48658,
                        "src": "757:2:176",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 48661,
                        "name": "_giver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48606,
                        "src": "745:6:176",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 48663,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "752:4:176",
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "745:11:176",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 48665,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "745:15:176",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48666,
                  "nodeType": "ExpressionStatement",
                  "src": "745:15:176"
                }
              ]
            },
            "id": 48668,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addGiver",
            "nameLocation": "690:8:176",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 48659,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 48658,
                  "mutability": "mutable",
                  "name": "_a",
                  "nameLocation": "707:2:176",
                  "nodeType": "VariableDeclaration",
                  "scope": 48668,
                  "src": "699:10:176",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 48657,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "699:7:176",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "698:12:176"
            },
            "returnParameters": {
              "id": 48660,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "734:0:176"
            },
            "scope": 48669,
            "src": "681:87:176",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 48670,
        "src": "141:630:176",
        "usedErrors": []
      }
    ],
    "src": "39:734:176"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.18+commit.87f61d96.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.12",
  "updatedAt": "2024-05-23T18:56:27.008Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}